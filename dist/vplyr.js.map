{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/config.js","src/js/dom.js","src/js/event.js","src/js/player.js","src/js/util.js","src/js/vplyr.js"],"names":[],"mappings":"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","file":"vplyr.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export const defaultConfig = {\n  enabled:                 true,\n  debug:                  true,\n  autoplay:               false,\n  loop:                   false,\n  seekTime:               10,\n  volume:                 10,\n  volumeMin:              0,\n  volumeMax:              10,\n  volumeStep:             1,\n  duration:               null,\n  displayDuration:        true,\n  loadSprite:             true,\n  selectors: {\n    html5:                'video, audio',\n    editable:             'input, textarea, select, [contenteditable]',\n    container:            '.vplyr',\n    controls: {\n        container:        null,\n        wrapper:          '.vplyr-controls'\n    },\n    buttons: {\n        seek:             '[data-video=\"seek\"]',\n        play:             '[data-video=\"play\"]',\n        pause:            '[data-video=\"pause\"]',\n        mute:             '[data-video=\"mute\"]',\n        fullscreen:       '[data-video=\"fullscreen\"]'\n    },\n    volume: {\n        input:            '[data-video=\"volume\"]',\n        display:          '.vplyr-volume-display'\n    },\n    progress: {\n        container:        '.vplyr-progress-bar-container',\n        buffer:           '.vplyr-progress-buffer',\n        played:           '.vplyr-progress-played'\n    },\n    currentTime:          '.control-currenttime',\n    duration:             '.control-duration'\n},\n  // Custom control listeners\n  listeners: {\n      seek:               null,\n      play:               null,\n      pause:              null,\n      restart:            null,\n      rewind:             null,\n      forward:            null,\n      mute:               null,\n      volume:             null,\n      captions:           null,\n      fullscreen:         null\n  },\n  classes:{\n\n  },\n  events:                 ['ready', 'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied'],\n  // Logging\n  logPrefix:              '[vPlyr]'\n}\nexport function createDefaultConfig() {\n  return Object.assign({}, defaultConfig);\n}","class Dom {\n  constructor(){\n    this.toggleClass  = this._toggleClass.bind(this);\n    this.removeElement  = this._removeElement.bind(this);\n    this.hasClass = this._hasClass.bind(this);\n    this.injectScript = this._injectScript.bind(this);\n    this.prependChild = this._prependChild.bind(this);\n    this.setAttributes = this._setAttributes.bind(this);\n    this.insertElement= this._insertElement.bind(this);\n    this.getClassname= this._getClassname.bind(this);\n  }\n  _getClassname(selector) {\n    return selector.replace('.', '');\n  }\n  _insertElement(type, parent, attributes) {\n    // Create a new <element>\n    var element = document.createElement(type);\n\n    // Set all passed attributes\n    _setAttributes(element, attributes);\n\n    // Inject the new element\n    _prependChild(parent, element);\n  }\n  _setAttributes(element, attributes) {\n    for (var key in attributes) {\n      element.setAttribute(key, (_is.boolean(attributes[key]) && attributes[key]) ? '' : attributes[key]);\n    }\n  }\n  _prependChild(parent, element) {\n    parent.insertBefore(element, parent.firstChild);\n  }\n  _injectScript(source) {\n    if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n        return;\n    }\n\n    var tag = document.createElement('script');\n    tag.src = source;\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n  _hasClass(element, className) {\n    if (element) {\n      if (element.classList) {\n          return element.classList.contains(className);\n      } else {\n          return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n      }\n    }\n    return false;\n  }\n  _removeElement(element){\n    if (!element) {\n        return;\n    }\n    element.parentNode.removeChild(element);\n  }\n  // Toggle class on an element\n  _toggleClass(element, className, state){\n    if (element) {\n      if (element.classList) {\n        element.classList[state ? 'add' : 'remove'](className);\n      } else {\n        let name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n        element.className = name + (state ? ' ' + className : '');\n      }\n    }\n  }\n}\nexport default new Dom();\n","import utils from './util';\n\nclass Event{\n  constructor(){\n    this.onEvent = this._on.bind(this);\n    this.customEvent = this._event.bind(this);\n  }\n  _event(element, type, bubbles, properties) {\n    // Bail if no element\n    if (!element || !type) {\n        return;\n    }\n\n    // Default bubbles to false\n    if (!_is.boolean(bubbles)) {\n        bubbles = false;\n    }\n\n    // Create and dispatch the event\n    var event = new CustomEvent(type, {\n        bubbles:    bubbles,\n        detail:     properties\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n  }\n  _on(element, events, callback, useCapture) {\n    if (element) {\n      this._toggleListener(element, events, callback, true, useCapture);\n    }\n  }\n\n  _toggleListener(element, events, callback, toggle, useCapture) {\n    var eventList = events.split(' ');\n    // Whether the listener is a capturing listener or not\n    // Default to false\n    if (!utils.is.boolean(useCapture)) {\n      useCapture = false;\n    }\n\n    // If a nodelist is passed, call itself on each node\n    if (element instanceof NodeList) {\n      for (var x = 0; x < element.length; x++) {\n        if (element[x] instanceof Node) {\n          this._toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n        }\n      }\n      return;\n    }\n\n    // If a single node is passed, bind the event listener\n    for (var i = 0; i < eventList.length; i++) {\n      element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, useCapture);\n    }\n  }\n}\nexport default new Event();","'use strict';\n\nimport utils from './util';\nimport doms from './dom';\nimport {defaultConfig as defaults} from './config';\nimport Event from './event';\nclass vPlyr {\n  constructor(media,config){\n    this.api = {};\n    this.\n    this.timers = {};\n    this.media= media;\n    this.config = config;\n    this.__init(config);\n  }\n  __init(){\n    const original = this.media.cloneNode(true);\n    const _log =()=>{\n      this._console('log', arguments) \n    },\n      _warn = ()=>{\n        this._console('warn', arguments)\n      };\n    _log('Config', this.config);\n  }\n  _buildControls() {\n    const html = [];\n    html.push('<div class=\"vplyr-gradient-bottom\"></div>');\n    html.push('<div class=\"vplyr-bottom-container\">');\n    //progress\n    if (utils.inArray(this.config.controls, 'progress')) {\n      // Create progress\n      html.push('<div class=\"vplyr-progress-bar-container\">',\n                '<input type=\"range\" min=\"0\" max=\"100\" value=\"0\" step=\"0.1\" class=\"vplyr-progress-bar\" data-video=\"seek\"/>',\n                '<progress class=\"vplyr-progress-played\" max=\"100\" role=\"presentation\"></progress>',\n                '<progress class=\"vplyr-progress-buffer\" max=\"100\" value=\"100\">',\n                  '<span>100.00</span>',\n                '</progress>');\n\n      // Close\n      html.push('</div>');\n    }\n    //left-controls\n    html.push('<div class=\"left-controls\">');\n    if (utils.inArray(this.config.controls, 'play')){\n      html.push('<div class=\"btn-controls\">',\n                '<div class=\"btn-wrap\">',\n                '<div class=\"play\" data-video=\"play\"></div>',\n                ' <div class=\"pause\" data-video=\"pause\"></div>',\n                '</div>',\n                '</div>');\n    }\n    // Media current time display\n    html.push('<div class=\"time-mod-controls\">');\n    \n    if (utils.inArray(this.config.controls, 'current-time')){\n      html.push('<div class=\"control-currenttime\">01:29</div>');\n    }\n     if (utils.inArray(this.config.controls, 'duration')){\n      html.push('<div class=\"control-separator\">/</div>',\n          '<div class=\"control-duration\">1:30:52</div>');\n    }\n    html.push('</div>');//end media time\n    \n    html.push('</div>');\n    //right-controls\n    html.push('<div class=\"right-controls\">');\n    html.push('<div class=\"fullscreen-controls\">',\n                '<svg class=\"icon-exit-fullscreen\" data-video=\"fullscreen\">',\n                '<use xlink:href=\"#vplyr-exit-fullscreen\"></use>',\n                ' </svg>',\n                '<svg class=\"icon-enter-fullscreen\">',\n                '<use xlink:href=\"#vplyr-enter-fullscreen\"></use>',\n                '</svg>',\n                '</div>');\n    if (utils.inArray(this.config.controls, 'mute')){\n      html.push('<div class=\"volume-controls\">',\n                '<div class=\"vplyr-volume\" data-video=\"mute\">',\n                '<svg class=\"icon-muted\">',\n                '<use xlink:href=\"#vplyr-muted\"></use>',\n                '</svg>',\n                '<svg class=\"icon-volume\">',\n                '<use xlink:href=\"#vplyr-volume\"></use>',\n                '</svg>',\n                '</div>',\n                '<div class=\"vplyr-volume-progress\">',\n                '<input type=\"range\"  class=\"vplyr-volume-input\"  min=\"0\"  max=\"10\" data-video=\"volume\" value=\"8\">',\n                '<progress class=\"vplyr-volume-display\" max=\"10\" role=\"presentation\"></progress>',\n                '</div>',\n                '</div>');\n    }\n    \n    html.push('</div>');//right controls\n\n    //end closing\n    html.push('</div>');\n\n    return html.join('');\n  }\n  _triggerEvent(element, type, bubbles, properties) {\n    Event.customEvent(element, type, bubbles, utils.extend({}, properties, {\n      vplyr: this.api\n    }));\n  }\n  _console(type, args) {\n    if (this.config.debug && window.console) {\n      args = Array.prototype.slice.call(args);\n\n      if (utils.is.string(this.config.logPrefix) && this.config.logPrefix.length) {\n        args.unshift(this.config.logPrefix);\n      }\n      console[type].apply(console, args);\n    }\n  }\n};\n\n\nclass Player {\n  constructor(targets, options){\n    this.players = [];\n    this.instances = [];\n    this.targets = this._getTargets(targets);\n    this.selector = defaults.selectors.html5;\n    this._init(options);\n  }\n  _getTargets(targets){\n    if (utils.is.string(targets)) {\n      // String selector passed\n      targets = document.querySelectorAll(targets);\n    }  else if (utils.is.htmlElement(targets)) {\n      // Single HTMLElement passed\n      targets = [targets];\n    }  else if (!utils.is.nodeList(targets) && !utils.is.array(targets) && !utils.is.string(targets))  {\n      // No selector passed, possibly options as first argument\n      // If options are the first argument\n      if (utils.is.undefined(options) && utils.is.object(targets)) {\n          options = targets;\n      }\n\n      // Use default selector\n      targets = document.querySelectorAll(this.selector);\n    }\n\n    // Convert NodeList to array\n    if (utils.is.nodeList(targets)) {\n      targets = Array.prototype.slice.call(targets);\n    }\n    return targets;\n  }\n  _init(options){\n    this._playerSetup(options);\n  }\n  _playerSetup(options){\n    // Check if the targets have multiple media elements\n    for (var i = 0; i < this.targets.length; i++) {\n      var target = this.targets[i];\n      // Get children\n      var children = target.querySelectorAll(this.selector);\n\n      // If there's more than one media element child, wrap them\n      if (children.length) {\n        for (var x = 0; x < children.length; x++) {\n          this._add(target, children[x]);\n        }\n      } else if (utils.matches(target, this.selector)) {\n          // Target is media element\n        this._add(target, target);\n      }\n    }\n    this.players.forEach(function(player) {\n      var element     = player.target,\n          media       = player.media,\n          match       = false;\n\n      // The target element can also be the media element\n      if (media === element) {\n          match = true;\n      }\n\n      // Setup a player instance and add to the element\n      // Create instance-specific config\n      var data = {};\n      // Try parsing data attribute config\n      try { data = JSON.parse(element.getAttribute('data-vplyr')); }\n      catch(e) { \n        console.error(e);\n      }\n      var config = utils.extend({}, defaults, options, data);\n\n      // Bail if not enabled\n      if (!config.enabled) {\n          return null;\n      }\n\n      // Create new instance\n      var instance = new vPlyr(media, config);\n      console.log('instance---->',instance.getContainer);\n      // Go to next if setup failed\n      if (!utils.is.object(instance)) {\n          return;\n      }\n\n      // Listen for events if debugging\n      if (config.debug) {\n          var events = config.events.concat(['setup', 'statechange', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled']);\n\n          Event.onEvent(instance.getContainer(), events.join(' '), function(event) {\n              console.log([config.logPrefix, 'event:', event.type].join(' '), event.detail.vplyr);\n          });\n      }\n\n      // Callback\n      Event.customEvent(instance.getContainer(), 'setup', true, {\n        vplyr: instance\n      });\n\n      // Add to return array even if it's already setup\n      this.instances.push(instance);\n    });\n  }\n  // Add to container list\n  _add(target, media) {\n    if (!doms.hasClass(media, defaults.classes.hook)) {\n      this.players.push({\n        // Always wrap in a <div> for styling\n        //container:  _wrap(media, document.createElement('div')),\n        // Could be a container or the media itself\n        target:     target,\n        // This should be the <video>, <audio> or <div> (YouTube/Vimeo)\n        media:      media\n      });\n    }\n  }\n}\nexport default Player;","class Utils {\n  constructor(){\n    this.browserSniff=this._browserSniff.bind(this)();\n    this.is = this._is.bind(this)();\n    this.storageSupport = this._storageSupport.bind(this)();\n    this.extend  = this._extend.bind(this);\n    this.matches  = this._matches.bind(this);\n    this.inArray = this._inArray.bind(this);\n  }\n  _inArray(haystack, needle) {\n    return Array.prototype.indexOf && (haystack.indexOf(needle) !== -1);\n  }\n\n  _matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n  _extend() {\n    // Get arguments\n    let objects = arguments;\n\n    // Bail if nothing to merge\n    if (!objects.length) {\n        return;\n    }\n\n    // Return first if specified but nothing to merge\n    if (objects.length === 1) {\n        return objects[0];\n    }\n\n    // First object is the destination\n    let destination = Array.prototype.shift.call(objects),\n        length      = objects.length;\n\n    // Loop through all objects to merge\n    for (let i = 0; i < length; i++) {\n        let source = objects[i];\n\n      for (let property in source) {\n        if (source[property] && \n          source[property].constructor &&\n          source[property].constructor === Object\n        ) {\n          destination[property] = destination[property] || {};\n          this._extend(destination[property], source[property]);\n        } else {\n          destination[property] = source[property];\n        }\n      }\n    }\n\n    return destination;\n  }\n  //remove an element\n  \n  _storageSupport(){\n    if (!('localStorage' in window)) {\n      return false;\n    }\n\n    // Try to use it (it might be disabled, e.g. user is in private/porn mode)\n    // see: https://github.com/Selz/plyr/issues/131\n    try {\n      // Add test item\n      window.localStorage.setItem('___test', 'OK');\n\n      // Get the test item\n      let result = window.localStorage.getItem('___test');\n\n      // Clean up\n      window.localStorage.removeItem('___test');\n\n      // Check if value matches\n      return (result === 'OK');\n    }\n    catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n  \n  _browserSniff(){\n    let ua = navigator.userAgent,\n      name = navigator.appName,\n      fullVersion = '' + parseFloat(navigator.appVersion),\n      majorVersion = parseInt(navigator.appVersion, 10),\n      nameOffset,\n      verOffset,\n      ix,\n      isIE = false,\n      isFirefox = false,\n      isChrome = false,\n      isWechat = false,\n      isSafari = false;\n\n    if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n      // MSIE 11\n      isIE = true;\n      name = 'IE';\n      fullVersion = '11';\n    } else if ((verOffset = ua.indexOf('MSIE')) !== -1) {\n      // MSIE\n      isIE = true;\n      name = 'IE';\n      fullVersion = ua.substring(verOffset + 5);\n    }else if ((verOffset = ua.indexOf('micromessenger')) !== -1) {\n      // WeChat\n      isWechat = true;\n      name = 'WeChat';\n      fullVersion = ua.substring(verOffset + 15);\n    }else if ((verOffset = ua.indexOf('Chrome')) !== -1) {\n      // Chrome\n      isChrome = true;\n      name = 'Chrome';\n      fullVersion = ua.substring(verOffset + 7);\n    } else if ((verOffset = ua.indexOf('Safari')) !== -1) {\n      // Safari\n      isSafari = true;\n      name = 'Safari';\n      fullVersion = ua.substring(verOffset + 7);\n      if ((verOffset = ua.indexOf('Version')) !== -1) {\n          fullVersion = ua.substring(verOffset + 8);\n      }\n    } else if ((verOffset = ua.indexOf('Firefox')) !== -1) {\n      // Firefox\n      isFirefox = true;\n      name = 'Firefox';\n      fullVersion = ua.substring(verOffset + 8);\n    } else if ((nameOffset = ua.lastIndexOf(' ') + 1) < (verOffset = ua.lastIndexOf('/'))) {\n      // In most other browsers, 'name/version' is at the end of userAgent\n      name = ua.substring(nameOffset,verOffset);\n      fullVersion = ua.substring(verOffset + 1);\n\n      if (name.toLowerCase() === name.toUpperCase()) {\n          name = navigator.appName;\n      }\n    }\n\n    // Trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n\n    // Get major version\n    majorVersion = parseInt('' + fullVersion, 10);\n    if (isNaN(majorVersion)) {\n      fullVersion = '' + parseFloat(navigator.appVersion);\n      majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    // Return data\n    return {\n      name:       name,\n      version:    majorVersion,\n      isIE:       isIE,\n      isFirefox:  isFirefox,\n      isChrome:   isChrome,\n      isSafari:   isSafari,\n      isWeChat:   isWechat,\n      isIos:      /(iPad|iPhone|iPod)/g.test(navigator.platform),\n      isIphone:   /(iPhone|iPod)/g.test(navigator.userAgent),\n      isTouch:    'ontouchstart' in document.documentElement\n    };\n  }\n  _is(){\n    return {\n      object: function(input) {\n        return input !== null && typeof(input) === 'object';\n      },\n      array: function(input) {\n        return input !== null && (typeof(input) === 'object' && input.constructor === Array);\n      },\n      number: function(input) {\n        return input !== null && (typeof(input) === 'number' && !isNaN(input - 0) || (typeof input === 'object' && input.constructor === Number));\n      },\n      string: function(input) {\n        return input !== null && (typeof input === 'string' || (typeof input === 'object' && input.constructor === String));\n      },\n      boolean: function(input) {\n        return input !== null && typeof input === 'boolean';\n      },\n      nodeList: function(input) {\n        return input !== null && input instanceof NodeList;\n      },\n      htmlElement: function(input) {\n        return input !== null && input instanceof HTMLElement;\n      },\n      function: function(input) {\n        return input !== null && typeof input === 'function';\n      },\n      undefined: function(input) {\n        return input !== null && typeof input === 'undefined';\n      }\n    }\n  }\n}\nexport default new Utils();","import Player from './player';\nconsole.log(new Player('.js-player',{}));"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}