{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/config.js","src/js/dom.js","src/js/event.js","src/js/index.js","src/js/player.js","src/js/util.js","src/js/vplyr.js"],"names":[],"mappings":"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","file":"vplyr.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export const defaultConfig = {\n  enabled:                 true,\n  debug:                  true,\n  autoplay:               false,\n  loop:                   false,\n  seekTime:               10,\n  volume:                 10,\n  volumeMin:              0,\n  volumeMax:              10,\n  volumeStep:             1,\n  duration:               null,\n  displayDuration:        true,\n  loadSprite:             true,\n  controls:               ['play-large', 'play', 'progress', 'time', 'mute', 'volume', 'captions', 'fullscreen'],\n  selectors: {\n    html5:                'video, audio',\n    editable:             'input, textarea, select, [contenteditable]',\n    container:            '.vplyr',\n    controls: {\n        container:        null,\n        wrapper:          '.vplyr-controls'\n    },\n    buttons: {\n        seek:             '[data-video=\"seek\"]',\n        play:             '[data-video=\"play\"]',\n        pause:            '[data-video=\"pause\"]',\n        mute:             '[data-video=\"mute\"]',\n        fullscreen:       '[data-video=\"fullscreen\"]'\n    },\n    volume: {\n        input:            '[data-video=\"volume\"]',\n        display:          '.vplyr-volume-display'\n    },\n    progress: {\n        container:        '.vplyr-progress-bar-container',\n        buffer:           '.vplyr-progress-buffer',\n        played:           '.vplyr-progress-played'\n    },\n    volume: {\n        input:          '[data-video=\"volume\"]',\n        display:        '.vplyr-volume-display'\n    },\n    currentTime:          '.control-currenttime',\n    duration:             '.control-duration'\n    },\n\n  // Custom control listeners\n  listeners: {\n      seek:               null,\n      play:               null,\n      pause:              null,\n      restart:            null,\n      rewind:             null,\n      forward:            null,\n      mute:               null,\n      volume:             null,\n      captions:           null,\n      fullscreen:         null\n  },\n  storage: {\n    enabled:            true,\n    key:                'vplyr'\n  },\n  types: {\n    html5:              ['video']\n  },\n  classes:{\n    muted:              'vplyr-muted',\n    type:               'vplyr-{0}',\n    videoWrapper:'vplyr-video-container',\n    playing:'vplyr-plying',\n    loading:            'vplyr-loading',\n    hover:              'vplyr-hover',\n    stopped:'vplyr-stopped',\n    isIos:              'vplyr--is-ios',\n    isTouch:            'vplyr--is-touch',\n    isWechat:           'vplyr--is-wechat',\n    isChrome:           'vplyr--is-chrome',\n    tabFocus:           'tab-focus',\n    fullscreen: {\n        enabled:        'vplyr-fullscreen-enabled',\n        active:         'vplyr-fullscreen-active'\n    },\n  },\n  events:                 ['ready', 'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied'],\n  // Logging\n  logPrefix:              '[VPlyr]'\n}\nexport function createDefaultConfig() {\n  return Object.assign({}, defaultConfig);\n}","import utils from './util';\n\nclass Dom {\n  constructor(){\n    this.toggleClass  = this._toggleClass.bind(this);\n    this.removeElement  = this._removeElement.bind(this);\n    this.hasClass = this._hasClass.bind(this);\n    this.injectScript = this._injectScript.bind(this);\n    this.prependChild = this._prependChild.bind(this);\n    this.setAttributes = this._setAttributes.bind(this);\n    this.insertElement= this._insertElement.bind(this);\n    this.getClassname= this._getClassname.bind(this);\n    this.fullscreen= this._fullscreen.bind(this);\n    \n  }\n  _getClassname(selector) {\n    return selector.replace('.', '');\n  }\n  _insertElement(type, parent, attributes) {\n    // Create a new <element>\n    var element = document.createElement(type);\n\n    // Set all passed attributes\n    _setAttributes(element, attributes);\n\n    // Inject the new element\n    _prependChild(parent, element);\n  }\n  _setAttributes(element, attributes) {\n    for (var key in attributes) {\n      element.setAttribute(key, (_is.boolean(attributes[key]) && attributes[key]) ? '' : attributes[key]);\n    }\n  }\n  _prependChild(parent, element) {\n    parent.insertBefore(element, parent.firstChild);\n  }\n  _injectScript(source) {\n    if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n        return;\n    }\n\n    var tag = document.createElement('script');\n    tag.src = source;\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n  _hasClass(element, className) {\n    if (element) {\n      if (element.classList) {\n          return element.classList.contains(className);\n      } else {\n          return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n      }\n    }\n    return false;\n  }\n  _removeElement(element){\n    if (!element) {\n        return;\n    }\n    element.parentNode.removeChild(element);\n  }\n  // Toggle class on an element\n  _toggleClass(element, className, state){\n    if (element) {\n      if (element.classList) {\n        element.classList[state ? 'add' : 'remove'](className);\n      } else {\n        let name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n        element.className = name + (state ? ' ' + className : '');\n      }\n    }\n  }\n  _fullscreen() {\n    var fullscreen = {\n            supportsFullScreen: false,\n            isFullScreen: function() { return false; },\n            requestFullScreen: function() {},\n            cancelFullScreen: function() {},\n            fullScreenEventName: '',\n            element: null,\n            prefix: ''\n        },\n        browserPrefixes = 'webkit o moz ms khtml'.split(' ');\n\n    // Check for native support\n    if (!utils.is.undefined(document.cancelFullScreen)) {\n        fullscreen.supportsFullScreen = true;\n    } else {\n      // Check for fullscreen support by vendor prefix\n      for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {\n        fullscreen.prefix = browserPrefixes[i];\n\n        if (!utils.is.undefined(document[fullscreen.prefix + 'CancelFullScreen'])) {\n          fullscreen.supportsFullScreen = true;\n          break;\n        } else if (!utils.is.undefined(document.msExitFullscreen) && document.msFullscreenEnabled) {\n          // Special case for MS (when isn't it?)\n          fullscreen.prefix = 'ms';\n          fullscreen.supportsFullScreen = true;\n          break;\n        }\n      }\n    }\n\n    // Update methods to do something useful\n    if (fullscreen.supportsFullScreen) {\n      // Yet again Microsoft awesomeness,\n      // Sometimes the prefix is 'ms', sometimes 'MS' to keep you on your toes\n      fullscreen.fullScreenEventName = (fullscreen.prefix === 'ms' ? 'MSFullscreenChange' : fullscreen.prefix + 'fullscreenchange');\n\n      fullscreen.isFullScreen = function(element) {\n        if (utils.is.undefined(element)) {\n            element = document.body;\n        }\n        switch (this.prefix) {\n          case '':\n            return document.fullscreenElement === element;\n          case 'moz':\n            return document.mozFullScreenElement === element;\n          default:\n            return document[this.prefix + 'FullscreenElement'] === element;\n        }\n      };\n      fullscreen.requestFullScreen = function(element) {\n        if (utils.is.undefined(element)) {\n          element = document.body;\n        }\n        return (this.prefix === '') ? element.requestFullScreen() : element[this.prefix + (this.prefix === 'ms' ? 'RequestFullscreen' : 'RequestFullScreen')]();\n      };\n      fullscreen.cancelFullScreen = function() {\n        return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + (this.prefix === 'ms' ? 'ExitFullscreen' : 'CancelFullScreen')]();\n      };\n      fullscreen.element = function() {\n        return (this.prefix === '') ? document.fullscreenElement : document[this.prefix + 'FullscreenElement'];\n      };\n    }\n\n    return fullscreen;\n  }\n}\nexport default new Dom();\n","import utils from './util';\n\nclass Event{\n  constructor(){\n    this.onEvent = this._on.bind(this);\n    this.customEvent = this._event.bind(this);\n  }\n  _event(element, type, bubbles, properties) {\n    // Bail if no element\n    if (!element || !type) {\n        return;\n    }\n\n    // Default bubbles to false\n    if (!utils.is.boolean(bubbles)) {\n        bubbles = false;\n    }\n\n    // Create and dispatch the event\n    var event = new CustomEvent(type, {\n        bubbles:    bubbles,\n        detail:     properties\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n  }\n  _on(element, events, callback, useCapture) {\n    if (element) {\n      this._toggleListener(element, events, callback, true, useCapture);\n    }\n  }\n\n  _toggleListener(element, events, callback, toggle, useCapture) {\n    var eventList = events.split(' ');\n    // Whether the listener is a capturing listener or not\n    // Default to false\n    if (!utils.is.boolean(useCapture)) {\n      useCapture = false;\n    }\n\n    // If a nodelist is passed, call itself on each node\n    if (element instanceof NodeList) {\n      for (var x = 0; x < element.length; x++) {\n        if (element[x] instanceof Node) {\n          this._toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n        }\n      }\n      return;\n    }\n\n    // If a single node is passed, bind the event listener\n    for (var i = 0; i < eventList.length; i++) {\n      element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, useCapture);\n    }\n  }\n}\nexport default new Event();","import vPlayer from './vplyr.js';\n\n;(function(root, factory) {\n    'use strict';\n    /*global define,module*/\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(root, document);\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], function () { return factory(root, document); });\n    } else {\n        // Browser globals (root is window)\n        root.vplyr = factory(root, document);\n    }\n}(typeof window !== 'undefined' ? window : this, function(window, document) {\n  window.vPlayer = vPlayer;\n}))","'use strict';\n\nimport utils from './util';\nimport $ from './dom';\nimport Event from './event';\nlet _log , _warn,fullscreen;\n\nclass Player {\n  constructor(media, config){\n    this._init(media, config);\n   \n  }\n  _init(media, config){\n    const vk = this;\n    const timers = {};\n    let api = {};\n    vk.media = media;\n    let original = media.cloneNode(true);\n    fullscreen = $.fullscreen();\n    const _console = (type,args)=>{\n      if (config.debug && window.console) {\n        args = Array.prototype.slice.call(args);\n\n        if (utils.is.string(config.logPrefix) && config.logPrefix.length) {\n          args.unshift(config.logPrefix);\n        }\n\n        console[type].apply(console, args);\n      }\n    };\n    _log = function() { _console('log', arguments) };\n    _warn = function() { _console('warn', arguments) };\n    _log('Config', config);\n    vk.config = config;\n    vk.timers = timers;\n    vk.api = api;\n    \n    this._setup(vk,config);\n    _log('player', vk);\n    if (!vk.init) {\n      return null;\n    }\n    return api;\n  }\n\n  _setup(player,config){\n    if (player.init) {\n      return null;\n    }\n    player.browser = utils.browserSniff;\n    if (!utils.is.htmlElement(player.media)) {\n      return;\n    }\n    this._setupStorage();\n    const tagName = player.media.tagName.toLowerCase();\n    player.type         = tagName;\n    config.crossorigin  = (player.media.getAttribute('crossorigin') !== null);\n    config.autoplay     = (config.autoplay || (player.media.getAttribute('autoplay') !== null));\n    config.loop         = (config.loop || (player.media.getAttribute('loop') !== null));\n    player.supported = utils.supported(player.type);\n    if (!player.supported.basic) {\n      return;\n    }\n    player.container = this._wrap(player.media, document.createElement('div'));\n    player.container.setAttribute('tabindex', 0);\n    this._toggleStyleHook(player,config);\n    _log('' + player.browser.name + ' ' + player.browser.version);\n    this._setupMedia(player,config);\n    if(utils.inArray(config.types.html5,player.type)){\n      // Setup UI\n      this._setupInterface(player,config);\n    }\n  }\n  _ready() {\n    // Ready event at end of execution stack\n    window.setTimeout(function() {\n      this._triggerEvent(this.media, 'ready');\n    }, 0);\n\n    // Set class hook on media element\n    $.toggleClass(plyr.media, defaults.classes.setup, true);\n\n    // Set container class for ready\n    $.toggleClass(this.container, this.config.classes.ready, true);\n\n    // Store a refernce to instance\n    this.media.vplyr = this.api;\n\n    // Autoplay\n    if (this.config.autoplay) {\n      this._play();\n    }\n  }\n  _setupInterface(player,config){\n    const _getElements = (selector)=> {\n      return player.container.querySelectorAll(selector);\n    }\n    const _getElement=(selector)=> {\n      return _getElements(selector)[0];\n    }\n    if (!player.supported.full) {\n      _warn('Basic support only', player.type);\n      \n      // Remove controls\n      $.removeElement(_getElement(config.selectors.controls.wrapper));\n      // reset native controls\n      this._toggleNativeControls(true,player,config);\n      // Bail\n      return;\n    }\n    const controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n    if (controlsMissing) {\n      // Inject custom controls\n      this._injectControls(player,config);\n    }\n    // Find the elements\n    if (!this._findElements(player,config)) {\n      return;\n    }\n    if (controlsMissing) {\n      this._controlListeners(player,config);\n    }\n    this._mediaListeners();\n    this._toggleNativeControls(true,this,this.config);\n\n    this._timeUpdate();\n    // Set volume\n    this._setVolume();\n\n    this._updateVolume();\n\n    this._checkPlaying();\n  }\n  _setupStorage() {\n    var value = null;\n    this.storage = {};\n\n    // Bail if we don't have localStorage support or it's disabled\n    if (!utils.storageSupport || !this.config.storage.enabled) {\n      return;\n    }\n    \n    window.localStorage.removeItem('vplyr-volume');\n\n    // load value from the current key\n    value = window.localStorage.getItem(this.config.storage.key);\n\n    if (!value) {\n        // Key wasn't set (or had been cleared), move along\n        return;\n    } else if (/^\\d+(\\.\\d+)?$/.test(value)) {\n      // If value is a number, it's probably volume from an older\n      // version of plyr. See: https://github.com/Selz/plyr/pull/313\n      // Update the key to be JSON\n      this._updateStorage({volume: parseFloat(value)});\n    } else {\n        // Assume it's JSON from this or a later version of plyr\n      this.storage = JSON.parse(value);\n    }\n  }\n  _triggerEvent(element, type, bubbles, properties) {\n    Event.customEvent(element, type, bubbles, utils.extend({}, properties, {\n      vplyr: this\n    }));\n  }\n  _getDuration() {\n    // It should be a number, but parse it just incase\n    var duration = parseInt(this.config.duration),\n\n    // True duration\n    mediaDuration = 0;\n\n    // Only if duration available\n    if (this.media.duration !== null && !isNaN(this.media.duration)) {\n      mediaDuration = this.media.duration;\n    }\n\n    // If custom duration is funky, use regular duration\n    return (isNaN(duration) ? mediaDuration : duration);\n  }\n  _seek(input){\n    _log(this);\n    let targetTime  = 0,\n        paused      = this.media.paused,\n        duration    = this._getDuration();\n\n    if (utils.is.number(input)) {\n      targetTime = input;\n    } else if (utils.is.object(input) && utils.inArray(['input', 'change'], input.type)) {\n      // It's the seek slider\n      // Seek to the selected time\n      targetTime = ((input.target.value / input.target.max) * duration);\n    }\n    if (targetTime < 0) {\n      targetTime = 0;\n    } else if (targetTime > duration) {\n      targetTime = duration;\n    }\n    this._updateSeekDisplay(targetTime);\n    try {\n      this.media.currentTime = targetTime.toFixed(4);\n    }\n    catch(e) {}\n    // Logging\n    _log('Seeking to ' + this.media.currentTime + ' seconds');\n  }\n  _play() {\n    if ('play' in this.media) {\n      this.media.play();\n    }\n  }\n  _pause() {\n    if ('pause' in this.media) {\n      this.media.pause();\n    }\n  }\n  _togglePlay(toggle) {\n    // True toggle\n    if (!utils.is.boolean(toggle)) {\n      toggle = this.media.paused;\n    }\n\n    if (toggle) {\n      this._play();\n    } else {\n      this._pause();\n    }\n    return toggle;\n  }\n  _getPercentage(current, max) {\n    if (current === 0 || max === 0 || isNaN(current) || isNaN(max)) {\n        return 0;\n    }\n    return ((current / max) * 100).toFixed(2);\n  }\n  _updateSeekDisplay(time) {\n    // Default to 0\n    if (!utils.is.number(time)) {\n        time = 0;\n    }\n\n    var duration    = this._getDuration(),\n        value       = this._getPercentage(time, duration);\n\n    // Update progress\n    if (this.progress && this.progress.played) {\n      this.progress.played.value = value;\n    }\n\n    // Update seek range input\n    if (this.buttons && this.buttons.seek) {\n      this.buttons.seek.value = value;\n    }\n  }\n  _mediaListeners(){\n    // Time change on media\n    Event.onEvent(this.media, 'timeupdate seeking', this._timeUpdate.bind(this));\n\n    Event.onEvent(this.media, 'durationchange loadedmetadata', this._displayDuration.bind(this));\n    \n    Event.onEvent(this.media, 'play pause ended', this._checkPlaying.bind(this));\n\n    Event.onEvent(this.media, 'progress playing', this._updateProgress.bind(this));\n\n    Event.onEvent(this.media, 'waiting canplay seeked', this._checkLoading.bind(this));\n\n    Event.onEvent(this.media, 'volumechange', this._updateVolume.bind(this));\n    \n  }\n  _proxyListener(element, eventName, userListener, defaultListener, useCapture) {\n    Event.onEvent(element, eventName, function(event) {\n      if (userListener) {\n        userListener.apply(element, [event]);\n      }\n      defaultListener.apply(element, [event]);\n    }, useCapture);\n  }\n  _controlListeners(){\n    const inputEvent = (this.browser.isIE ? 'change' : 'input');\n    const togglePlay = ()=>{\n      const play = this._togglePlay();\n      let trigger = this.buttons[play ? 'play' : 'pause'],\n          target = this.buttons[play ? 'pause' : 'play'];\n\n      // Get the last play button to account for the large play button\n      if (target && target.length > 1) {\n        target = target[target.length - 1];\n      } else {\n        target = target[0];\n      }\n      if (target) {\n        const hadTabFocus = $.hasClass(trigger, this.config.classes.tabFocus);\n\n        setTimeout(function() {\n          target.focus();\n          if (hadTabFocus) {\n            $.toggleClass(trigger, this.config.classes.tabFocus, false);\n            $.toggleClass(target, this.config.classes.tabFocus, true);\n          }\n        }, 100);\n      }\n    }\n    this._proxyListener(this.buttons.play, 'click', this.config.listeners.play, togglePlay);\n    // Pause\n    this._proxyListener(this.buttons.pause, 'click', this.config.listeners.pause, togglePlay);\n    // Seek\n    this._proxyListener(this.buttons.seek, inputEvent, this.config.listeners.seek, this._seek.bind(this));\n\n    this._proxyListener(this.volume.input, inputEvent, this.config.listeners.volume, ()=>{\n      this._setVolume(this.volume.input.value);\n    });\n    this._proxyListener(this.buttons.mute, 'click', this.config.listeners.mute, this._toggleMute.bind(this));\n\n    this._proxyListener(this.buttons.fullscreen, 'click', this.config.listeners.fullscreen, this._toggleFullscreen.bind(this));\n\n    // Handle user exiting fullscreen by escaping etc\n    if (fullscreen.supportsFullScreen) {\n      Event.onEvent(document, fullscreen.fullScreenEventName, this._toggleFullscreen.bind(this));\n    }\n  }\n  _toggleFullscreen(event) {\n    // Check for native support\n    var nativeSupport = fullscreen.supportsFullScreen;\n\n    if (nativeSupport) {\n      // If it's a fullscreen change event, update the UI\n      if (event && event.type === fullscreen.fullScreenEventName) {\n          this.isFullscreen = fullscreen.isFullScreen(this.container);\n      } else {\n        // Else it's a user request to enter or exit\n        if (!fullscreen.isFullScreen(this.container)) {\n          // Save scroll position\n          this._saveScrollPosition();\n\n          // Request full screen\n          fullscreen.requestFullScreen(this.container);\n        } else {\n            // Bail from fullscreen\n          fullscreen.cancelFullScreen();\n        }\n\n        // Check if we're actually full screen (it could fail)\n        this.isFullscreen = fullscreen.isFullScreen(this.container);\n\n        return;\n      }\n    } else {\n        // Otherwise, it's a simple toggle\n        this.isFullscreen = !this.isFullscreen;\n\n        // Bind/unbind escape key\n        document.body.style.overflow = this.isFullscreen ? 'hidden' : '';\n    }\n\n    // Set class hook\n    $.toggleClass(this.container, this.config.classes.fullscreen.active, this.isFullscreen);\n\n    // Trap focus\n    this._focusTrap(this.isFullscreen);\n\n    // Set button state\n    if (this.buttons && this.buttons.fullscreen) {\n      this._toggleState(this.buttons.fullscreen, this.isFullscreen);\n    }\n\n    // Trigger an event\n    this._triggerEvent(this.container, this.isFullscreen ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Restore scroll position\n    if (!this.isFullscreen && nativeSupport) {\n        this._restoreScrollPosition();\n    }\n  }\n  _focusTrap() {\n    const _getElements = (selector)=> {\n      return this.container.querySelectorAll(selector);\n    }\n    const _getElement=(selector)=> {\n      return _getElements(selector)[0];\n    }\n    var tabbables   = _getElements('input:not([disabled]), button:not([disabled])'),\n        first       = tabbables[0],\n        last        = tabbables[tabbables.length - 1];\n\n    function _checkFocus(event) {\n      // If it is TAB\n      if (event.which === 9 && this.isFullscreen) {\n        if (event.target === last && !event.shiftKey) {\n          // Move focus to first element that can be tabbed if Shift isn't used\n          event.preventDefault();\n          first.focus();\n        } else if (event.target === first && event.shiftKey) {\n          // Move focus to last element that can be tabbed if Shift is used\n          event.preventDefault();\n          last.focus();\n        }\n      }\n    }\n\n    // Bind the handler\n    Event.onEvent(this.container, 'keydown', _checkFocus);\n  }\n  _saveScrollPosition() {\n    scroll = {\n        x: window.pageXOffset || 0,\n        y: window.pageYOffset || 0\n    };\n  }\n  _restoreScrollPosition() {\n    window.scrollTo(scroll.x, scroll.y);\n  }\n  _checkLoading(event) {\n    const loading = (event.type === 'waiting');\n\n    // Clear timer\n    clearTimeout(this.timers.loading);\n\n    // Timer to prevent flicker when seeking\n    this.timers.loading = setTimeout(()=>{\n      // Toggle container class hook\n      $.toggleClass(this.container, this.config.classes.loading, loading);\n\n      // Show controls if loading, hide if done\n      // this._toggleControls(loading);\n    }, (loading ? 250 : 0));\n  }\n  _checkPlaying() {\n    $.toggleClass(this.container, this.config.classes.playing, !this.media.paused);\n\n    $.toggleClass(this.container, this.config.classes.stopped, this.media.paused);\n\n    // $.toggleControls(this.media.paused);\n  }\n  _timeUpdate(event) {\n    // Duration\n    this._updateTimeDisplay(this.media.currentTime, this.currentTime);\n\n    // Ignore updates while seeking\n    if (event && event.type === 'timeupdate' && this.media.seeking) {\n      return;\n    }\n    // Playing progress\n    this._updateProgress(event);\n  }\n  _updateProgress(event){\n    if (!this.supported.full) {\n      return;\n    }\n\n    var progress    = this.progress.played,\n        value       = 0,\n        duration    = this._getDuration();\n    if(event){\n      switch(event.type){\n        case 'timeupdate':\n        case 'seeking':\n          if (this.controls.pressed) {\n            return;\n          }\n\n          value = this._getPercentage(this.media.currentTime, duration);\n\n          // Set seek range value only if it's a 'natural' time event\n          if (event.type === 'timeupdate' && this.buttons.seek) {\n            this.buttons.seek.value = value;\n          }\n\n          break;  \n          // Check buffer status\n        case 'playing':\n        case 'progress':\n          progress    = this.progress.buffer;\n          value = (()=> {\n            var buffered = this.media.buffered;\n\n            if (buffered && buffered.length) {\n              // HTML5\n              return this._getPercentage(buffered.end(0), duration);\n            } \n            return 0;\n          })();\n          _log('event.type',event.type,value)\n          break;\n      }\n    }\n    this._setProgress(progress, value);\n  }\n  _setProgress(progress, value) {\n    if (!this.supported.full) {\n      return;\n    }\n\n    // Default to 0\n    if (utils.is.undefined(value)) {\n      value = 0;\n    }\n    // Default to buffer or bail\n    if (utils.is.undefined(progress)) {\n      if (this.progress && this.progress.buffer) {\n        progress = this.progress.buffer;\n      } else {\n        return;\n      }\n    }\n\n    // One progress element passed\n    if (utils.is.htmlElement(progress)) {\n        progress.value = value;\n    } else if (progress) {\n      // Object of progress + text element\n      if (progress.bar) {\n        progress.bar.value = value;\n      }\n      if (progress.text) {\n        progress.text.innerHTML = value;\n      }\n    }\n  }\n  _setVolume(volume){\n    const max = this.config.volumeMax,\n        min = this.config.volumeMin;\n\n    // Load volume from storage if no value specified\n    if (utils.is.undefined(volume)) {\n      volume = this.storage.volume;\n    }\n\n    // Use config if all else fails\n    if (volume === null || isNaN(volume)) {\n      volume = this.config.volume;\n    }\n    if (utils.is.undefined(volume)) {\n      volume = this.storage.volume;\n    }\n    // Maximum is volumeMax\n    if (volume > max) {\n      volume = max;\n    }\n    // Minimum is volumeMin\n    if (volume < min) {\n      volume = min;\n    }\n    // Set the player volume\n    this.media.volume = parseFloat(volume / max);\n\n    // Set the display\n    if (this.volume.display) {\n      this.volume.display.value = volume;\n    }\n    // Toggle muted state\n    if (volume === 0) {\n      this.media.muted = true;\n    } else if (this.media.muted && volume > 0) {\n      this._toggleMute();\n    }\n  }\n  _updateVolume() {\n    // Get the current volume\n    var volume = this.media.muted ? 0 : (this.media.volume * this.config.volumeMax);\n\n    // Update the <input type=\"range\"> if present\n    if (this.supported.full) {\n      if (this.volume.input) {\n        this.volume.input.value = volume;\n      }\n      if (this.volume.display) {\n        this.volume.display.value = volume;\n      }\n    }\n\n    // Update the volume in storage\n    this._updateStorage({volume: volume});\n\n    // Toggle class if muted\n    $.toggleClass(this.container, this.config.classes.muted, (volume === 0));\n\n    // Update checkbox for mute state\n    if (this.supported.full && this.buttons.mute) {\n      this._toggleState(this.buttons.mute, (volume === 0));\n    }\n  }\n  _updateStorage(value) {\n    // Bail if we don't have localStorage support or it's disabled\n    if (!utils.storageSupport || !this.config.storage.enabled) {\n        return;\n    }\n\n    // Update the working copy of the values\n    utils.extend(this.storage, value);\n\n    // Update storage\n    window.localStorage.setItem(this.config.storage.key, JSON.stringify(this.storage));\n  }\n  _toggleState(target, state) {\n    // Bail if no target\n    if (!target) {\n        return;\n    }\n    // Get state\n    state = (utils.is.boolean(state) ? state : !target.getAttribute('aria-pressed'));\n\n    // Set the attribute on target\n    target.setAttribute('aria-pressed', state);\n    return state;\n  }\n  _toggleMute(muted){\n    if (!utils.is.boolean(muted)) {\n      muted = !this.media.muted;\n    }\n\n    // Set button state\n    this._toggleState(this.buttons.mute, muted);\n\n    // Set mute on the player\n    this.media.muted = muted;\n\n    // If volume is 0 after unmuting, set to default\n    if (this.media.volume === 0) {\n      this._setVolume(this.config.volume);\n    }\n\n  }\n  _displayDuration() {\n    if (!this.supported.full) {\n      return;\n    }\n\n    // Determine duration\n    var duration = this._getDuration() || 0;\n\n    // If there's only one time display, display duration there\n    if (!this.duration && this.config.displayDuration && this.media.paused) {\n      this._updateTimeDisplay(duration, this.currentTime);\n    }\n\n    // If there's a duration element, update content\n    if (this.duration) {\n      this._updateTimeDisplay(duration, this.duration);\n    }\n\n  }\n  _updateTimeDisplay(time, element) {\n    // Bail if there's no duration display\n    if (!element) {\n        return;\n    }\n\n    // Fallback to 0\n    if (isNaN(time)) {\n        time = 0;\n    }\n\n    this.secs = parseInt(time % 60);\n    this.mins = parseInt((time / 60) % 60);\n    this.hours = parseInt(((time / 60) / 60) % 60);\n\n    // Do we need to display hours?\n    var displayHours = (parseInt(((this._getDuration() / 60) / 60) % 60) > 0);\n\n    // Ensure it's two digits. For example, 03 rather than 3.\n    this.secs = ('0' + this.secs).slice(-2);\n    this.mins = ('0' + this.mins).slice(-2);\n\n    // Render\n    element.innerHTML = (displayHours ? this.hours + ':' : '') + this.mins + ':' + this.secs;\n  }\n  _injectControls(player,config){\n    let html = config.html;\n\n    // Insert custom video controls\n    _log('Injecting custom controls');\n    // If no controls are specified, create default\n    if (!html) {\n      html = this._buildControls(config);\n    }\n    const random =Math.floor(Math.random() * (1000000));\n    player.container.setAttribute('id', `vplyr${random}`);\n    html = utils.replaceAll(html, '{id}', random);\n    let target;\n    if (utils.is.string(config.selectors.controls.container)) {\n      target = document.querySelector(config.selectors.controls.container);\n    }\n    // Inject into the container by default\n    if (!utils.is.htmlElement(target)) {\n      target = player.container\n    }\n    target.insertAdjacentHTML('beforeend', html);\n  }\n  _findElements(player,config){\n    const _getElements = (selector)=> {\n      return player.container.querySelectorAll(selector);\n    }\n    const _getElement=(selector)=> {\n      return _getElements(selector)[0];\n    }\n    try {\n      player.controls                 = _getElement(config.selectors.controls.wrapper);\n\n      // Buttons\n      player.buttons = {};\n      player.buttons.seek             = _getElement(config.selectors.buttons.seek);\n      player.buttons.play             = _getElements(config.selectors.buttons.play);\n      player.buttons.pause            = _getElement(config.selectors.buttons.pause);\n      player.buttons.fullscreen       = _getElement(config.selectors.buttons.fullscreen);\n\n      // Inputs\n      player.buttons.mute             = _getElement(config.selectors.buttons.mute);\n\n      // Progress\n      player.progress = {};\n      player.progress.container       = _getElement(config.selectors.progress.container);\n\n      // Progress - Buffering\n      player.progress.buffer          = {};\n      player.progress.buffer.bar      = _getElement(config.selectors.progress.buffer);\n      player.progress.buffer.text     = player.progress.buffer.bar && player.progress.buffer.bar.getElementsByTagName('span')[0];\n\n      // Progress - Played\n      player.progress.played          = _getElement(config.selectors.progress.played);\n\n      // Volume\n      player.volume                   = {};\n      player.volume.input             = _getElement(config.selectors.volume.input);\n      player.volume.display           = _getElement(config.selectors.volume.display);\n\n      // Timing\n      player.duration                 = _getElement(config.selectors.duration);\n      player.currentTime              = _getElement(config.selectors.currentTime);\n      player.seekTime                 = _getElements(config.selectors.seekTime);\n\n      return true;\n    }\n    catch(e) {\n      _warn('It looks like there is a problem with your controls HTML');\n      // Restore native video controls\n      this._toggleNativeControls(true);\n\n      return false;\n    }\n  }\n  _buildControls(config){\n    const html = ['<div class=\"vplyr-video-loader-container\">',\n          '<div class=\"vplyr-video-loader\">',\n          '<div class=\"loader-inner one\"></div>',\n          '<div class=\"loader-inner two\"></div>',\n          '<div class=\"loader-inner three\"></div>',\n          '</div>',\n          '</div><div class=\"vplyr-gradient-bottom\"></div>'];\n    html.push('<div class=\"vplyr-bottom-container\">')\n    if (utils.inArray(config.controls, 'progress')) {\n      html.push(\n          '<div class=\"vplyr-progress-bar-container\">',\n          '<input id=\"seek{id}\" type=\"range\" min=\"0\" max=\"100\" value=\"0\" step=\"0.1\" class=\"vplyr-progress-bar\" data-video=\"seek\"/>',\n          '<progress class=\"vplyr-progress-played\" max=\"100\" role=\"presentation\"></progress>',\n          '<progress class=\"vplyr-progress-buffer\" max=\"100\" value=\"100\">',\n          '<span>100.00</span>% buffered',\n          '</progress>',\n          '</div>'\n      );\n    }\n    html.push('<div class=\"vplyr-controls\">')\n    html.push('<div class=\"left-controls\">')\n    if (utils.inArray(config.controls, 'play')) {\n      html.push(\n        '<div class=\"btn-controls\">',\n          '<div class=\"btn-wrap\">',\n          '<div class=\"play\" data-video=\"play\"></div>',\n          '<div class=\"pause\" data-video=\"pause\"></div>',\n          '</div>',\n          '</div>'\n      );\n    }\n    if (utils.inArray(config.controls, 'time')) {\n      html.push(\n        '<div class=\"time-mod-controls\">',\n          '<div class=\"control-currenttime\">00:00</div>',\n          '<div class=\"control-separator\">/</div>',\n          '<div class=\"control-duration\">00:00</div>',\n          '</div>'\n      );\n    }\n    html.push('</div>')//close vplyr left controls\n    html.push('<div class=\"right-controls\">')\n    if (utils.inArray(config.controls, 'fullscreen')) {\n      html.push(\n        '<div class=\"fullscreen-controls\" data-video=\"fullscreen\">',\n          '<svg class=\"icon-exit-fullscreen\">',\n          '<use xlink:href=\"#vplyr-exit-fullscreen\"></use>',\n          '</svg>',\n          '<svg class=\"icon-enter-fullscreen\">',\n          ' <use xlink:href=\"#vplyr-enter-fullscreen\"></use>',\n          '</svg>',\n          '</div>'\n      );\n    }\n    html.push('<div class=\"volume-controls\">')\n    if (utils.inArray(config.controls, 'mute')) {\n      html.push(\n        '<div class=\"vplyr-volume\" data-video=\"mute\">',\n          '<svg class=\"icon-muted\">',\n          '<use xlink:href=\"#vplyr-muted\"></use>',\n          '</svg>',\n          '<svg class=\"icon-volume\">',\n          '<use xlink:href=\"#vplyr-volume\"></use>',\n          '</svg>',\n          '</div>'\n      );\n    }\n    if (utils.inArray(config.controls, 'volume')) {\n      html.push(\n        '<div class=\"vplyr-volume-progress\">',\n          '<input type=\"range\" id=\"volume{id}\"  class=\"vplyr-volume-input\"  min=\"0\"  max=\"10\" data-video=\"volume\" value=\"8\">',\n          '<progress class=\"vplyr-volume-display\" max=\"10\" role=\"presentation\"></progress>',\n          '</div>'\n      );\n    }\n    html.push('</div>')//close vplyr volume controls\n    \n    html.push('</div>')//close vplyr right controls\n    \n    html.push('</div>')//close vplyr controls\n    html.push('</div>')//close\n    return html.join('');\n  }\n  _setupMedia(player,config){\n    if (!player.media) {\n      _warn('No media element found!');\n      return;\n    }\n    if(player.supported.full){\n      $.toggleClass(player.container, config.classes.type.replace('{0}', player.type), true);\n      $.toggleClass(player.container, config.classes.stopped, config.autoplay);\n      // Add iOS class\n      $.toggleClass(player.container, config.classes.isIos, player.browser.isIos);\n      // Add chrome class\n      $.toggleClass(player.container, config.classes.isChrome, player.browser.isChrome);\n\n      // Add touch class\n      $.toggleClass(player.container, config.classes.isTouch, player.browser.isTouch);\n\n      // Add wechat class\n      $.toggleClass(player.container, config.classes.isWechat, player.browser.isWechat);\n      if(player.type === 'video'){\n        const wrapper = document.createElement('div');\n        wrapper.setAttribute('class', config.classes.videoWrapper);\n        this._wrap(player.media, wrapper);\n        // Cache the container\n        player.videoContainer = wrapper;\n      }\n    }\n  }\n  _toggleNativeControls(toggle) {\n    if (toggle && utils.inArray(this.config.types.html5, this.type)) {\n      this.media.setAttribute('controls', '');\n    } else {\n      this.media.removeAttribute('controls');\n    }\n  }\n  _wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    if (!elements.length) {\n        elements = [elements];\n    }\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    for (var i = elements.length - 1; i >= 0; i--) {\n      var child   = (i > 0) ? wrapper.cloneNode(true) : wrapper;\n      var element = elements[i];\n\n      // Cache the current parent and sibling.\n      var parent  = element.parentNode;\n      var sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n          parent.insertBefore(child, sibling);\n      } else {\n          parent.appendChild(child);\n      }\n      return child;\n    }\n  }\n  _toggleStyleHook(player,config) {\n    $.toggleClass(player.container, config.selectors.container.replace('.', ''), player.supported.full);\n  }\n}\nexport default Player;","class Utils {\n  constructor(){\n    this.browserSniff=this._browserSniff.bind(this)();\n    this.is = this._is.bind(this)();\n    this.storageSupport = this._storageSupport.bind(this)();\n    this.extend  = this._extend.bind(this);\n    this.matches  = this._matches.bind(this);\n    this.inArray = this._inArray.bind(this);\n    this.supported = this._support.bind(this);\n    this.replaceAll = this._replaceAll.bind(this);\n    \n  }\n  _replaceAll(string, find, replace) {\n    return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n  }\n  _support(type){\n    const browser     = this._browserSniff(),\n        isOldIE     = (browser.isIE && browser.version <= 9),\n        isIos       = browser.isIos,\n        isIphone    = browser.isIphone,\n        audioSupport = !!document.createElement('audio').canPlayType,\n        videoSupport = !!document.createElement('video').canPlayType;\n    let basic       = false,\n        full        = false;\n\n    switch (type) {\n        case 'video':\n            basic = videoSupport;\n            full  = (basic && (!isOldIE && !isIphone));\n            break;\n\n        case 'audio':\n            basic = audioSupport;\n            full  = (basic && !isOldIE);\n            break;\n\n        default:\n            basic = (audioSupport && videoSupport);\n            full  = (basic && !isOldIE);\n    }\n\n    return {\n        basic:  basic,\n        full:   full\n    };\n  }\n  _inArray(haystack, needle) {\n    return Array.prototype.indexOf && (haystack.indexOf(needle) !== -1);\n  }\n\n  _matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n  _extend() {\n    // Get arguments\n    let objects = arguments;\n\n    // Bail if nothing to merge\n    if (!objects.length) {\n        return;\n    }\n\n    // Return first if specified but nothing to merge\n    if (objects.length === 1) {\n        return objects[0];\n    }\n\n    // First object is the destination\n    let destination = Array.prototype.shift.call(objects),\n        length      = objects.length;\n\n    // Loop through all objects to merge\n    for (let i = 0; i < length; i++) {\n        let source = objects[i];\n\n      for (let property in source) {\n        if (source[property] && \n          source[property].constructor &&\n          source[property].constructor === Object\n        ) {\n          destination[property] = destination[property] || {};\n          this._extend(destination[property], source[property]);\n        } else {\n          destination[property] = source[property];\n        }\n      }\n    }\n\n    return destination;\n  }\n  //remove an element\n  \n  _storageSupport(){\n    if (!('localStorage' in window)) {\n      return false;\n    }\n\n    // Try to use it (it might be disabled, e.g. user is in private/porn mode)\n    // see: https://github.com/Selz/plyr/issues/131\n    try {\n      // Add test item\n      window.localStorage.setItem('___test', 'OK');\n\n      // Get the test item\n      let result = window.localStorage.getItem('___test');\n\n      // Clean up\n      window.localStorage.removeItem('___test');\n\n      // Check if value matches\n      return (result === 'OK');\n    }\n    catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n  \n  _browserSniff(){\n    let ua = navigator.userAgent,\n      name = navigator.appName,\n      fullVersion = '' + parseFloat(navigator.appVersion),\n      majorVersion = parseInt(navigator.appVersion, 10),\n      nameOffset,\n      verOffset,\n      ix,\n      isIE = false,\n      isFirefox = false,\n      isChrome = false,\n      isWechat = false,\n      isSafari = false;\n\n    if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n      // MSIE 11\n      isIE = true;\n      name = 'IE';\n      fullVersion = '11';\n    } else if ((verOffset = ua.indexOf('MSIE')) !== -1) {\n      // MSIE\n      isIE = true;\n      name = 'IE';\n      fullVersion = ua.substring(verOffset + 5);\n    }else if ((verOffset = ua.indexOf('micromessenger')) !== -1) {\n      // WeChat\n      isWechat = true;\n      name = 'WeChat';\n      fullVersion = ua.substring(verOffset + 15);\n    }else if ((verOffset = ua.indexOf('Chrome')) !== -1) {\n      // Chrome\n      isChrome = true;\n      name = 'Chrome';\n      fullVersion = ua.substring(verOffset + 7);\n    } else if ((verOffset = ua.indexOf('Safari')) !== -1) {\n      // Safari\n      isSafari = true;\n      name = 'Safari';\n      fullVersion = ua.substring(verOffset + 7);\n      if ((verOffset = ua.indexOf('Version')) !== -1) {\n          fullVersion = ua.substring(verOffset + 8);\n      }\n    } else if ((verOffset = ua.indexOf('Firefox')) !== -1) {\n      // Firefox\n      isFirefox = true;\n      name = 'Firefox';\n      fullVersion = ua.substring(verOffset + 8);\n    } else if ((nameOffset = ua.lastIndexOf(' ') + 1) < (verOffset = ua.lastIndexOf('/'))) {\n      // In most other browsers, 'name/version' is at the end of userAgent\n      name = ua.substring(nameOffset,verOffset);\n      fullVersion = ua.substring(verOffset + 1);\n\n      if (name.toLowerCase() === name.toUpperCase()) {\n          name = navigator.appName;\n      }\n    }\n\n    // Trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n\n    // Get major version\n    majorVersion = parseInt('' + fullVersion, 10);\n    if (isNaN(majorVersion)) {\n      fullVersion = '' + parseFloat(navigator.appVersion);\n      majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    // Return data\n    return {\n      name:       name,\n      version:    majorVersion,\n      isIE:       isIE,\n      isFirefox:  isFirefox,\n      isChrome:   isChrome,\n      isSafari:   isSafari,\n      isWechat:   isWechat,\n      isIos:      /(iPad|iPhone|iPod)/g.test(navigator.platform),\n      isIphone:   /(iPhone|iPod)/g.test(navigator.userAgent),\n      isTouch:    'ontouchstart' in document.documentElement\n    };\n  }\n  _is(){\n    return {\n      object: function(input) {\n        return input !== null && typeof(input) === 'object';\n      },\n      array: function(input) {\n        return input !== null && (typeof(input) === 'object' && input.constructor === Array);\n      },\n      number: function(input) {\n        return input !== null && (typeof(input) === 'number' && !isNaN(input - 0) || (typeof input === 'object' && input.constructor === Number));\n      },\n      string: function(input) {\n        return input !== null && (typeof input === 'string' || (typeof input === 'object' && input.constructor === String));\n      },\n      boolean: function(input) {\n        return input !== null && typeof input === 'boolean';\n      },\n      nodeList: function(input) {\n        return input !== null && input instanceof NodeList;\n      },\n      htmlElement: function(input) {\n        return input !== null && input instanceof HTMLElement;\n      },\n      function: function(input) {\n        return input !== null && typeof input === 'function';\n      },\n      undefined: function(input) {\n        return input !== null && typeof input === 'undefined';\n      }\n    }\n  }\n}\nexport default new Utils();","'use strict';\n\nimport utils from './util';\nimport $ from './dom';\nimport {defaultConfig as defaults} from './config';\nimport Event from './event';\nimport Player from './player';\nclass vPlayer {\n  constructor(targets, options){\n    this.TAG = 'VideoPlayer';\n    this._init(targets,options);\n  }\n  _init(targets, options){\n    const _targets = this.__getTargets(targets, options);\n    \n    if (!utils.supported().basic || !_targets.length) {\n      return false;\n    }\n    const players = [],instance = [];\n    const selector = [defaults.selectors.html5].join(',');\n    const _add = (target, media)=>{\n      if (!$.hasClass(media,defaults.classes.hook)){\n        players.push({\n          target:     target,\n          media:      media\n        });\n      }\n    };//end add\n    for (var i = 0; i < _targets.length; i++) {\n      var target = _targets[i];\n\n      // Get children\n      var children = target.querySelectorAll(selector);\n\n      // If there's more than one media element child, wrap them\n      if (children.length) {\n        for (var x = 0; x < children.length; x++) {\n          _add(target, children[x]);\n        }\n      } else if (this.__matches(target, selector)) {\n        // Target is media element\n        _add(target, target);\n      }\n    }// end for\n    console.log('players--->',players);\n    players.forEach((player)=>{\n      const element = player.target;\n      const media = player.media;\n      let match = false;\n      if (media === element) {\n        match = true;\n      }\n      let data = {};\n      try { data = JSON.parse(element.getAttribute('data-vplyr')); }\n      catch(e) { }\n      const config = utils.extend({}, defaults, options, data);\n      if (!config.enabled) {\n        return null;\n      }\n      const instance = new Player(media, config);\n      console.log('instance',instance);\n    })\n  }\n  __matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n  __getTargets(targets,options){\n    const selector = [defaults.selectors.html5].join(',');\n    if (utils.is.string(targets)) {\n      // String selector passed\n      targets = document.querySelectorAll(targets);\n    } else if(utils.is.htmlElement(targets)){\n      targets = [targets];\n    }else if (!utils.is.nodeList(targets) && !utils.is.array(targets) && !utils.is.string(targets))  {\n      // No selector passed, possibly options as first argument\n      // If options are the first argument\n      if (utils.is.undefined(options) && utils.is.object(targets)) {\n          options = targets;\n      }\n      targets = document.querySelectorAll(selector);\n    }\n    if (utils.is.nodeList(targets)) {\n      targets = Array.prototype.slice.call(targets);\n    }\n    return targets;\n  }\n  \n}\nexport default vPlayer;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvY29uZmlnLmpzIiwic3JjL2pzL2RvbS5qcyIsInNyYy9qcy9ldmVudC5qcyIsInNyYy9qcy9pbmRleC5qcyIsInNyYy9qcy9wbGF5ZXIuanMiLCJzcmMvanMvdXRpbC5qcyIsInNyYy9qcy92cGx5ci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O1FDd0ZnQixtQixHQUFBLG1COzs7O0FBeEZULElBQU0sd0NBQWdCO0FBQzNCLGFBQXlCLElBREU7QUFFM0IsV0FBd0IsSUFGRztBQUczQixjQUF3QixLQUhHO0FBSTNCLFVBQXdCLEtBSkc7QUFLM0IsY0FBd0IsRUFMRztBQU0zQixZQUF3QixFQU5HO0FBTzNCLGVBQXdCLENBUEc7QUFRM0IsZUFBd0IsRUFSRztBQVMzQixnQkFBd0IsQ0FURztBQVUzQixjQUF3QixJQVZHO0FBVzNCLHFCQUF3QixJQVhHO0FBWTNCLGdCQUF3QixJQVpHO0FBYTNCLGNBQXdCLENBQUMsWUFBRCxFQUFlLE1BQWYsRUFBdUIsVUFBdkIsRUFBbUMsTUFBbkMsRUFBMkMsTUFBM0MsRUFBbUQsUUFBbkQsRUFBNkQsVUFBN0QsRUFBeUUsWUFBekUsQ0FiRztBQWMzQjtBQUNFLGVBQXNCLGNBRHhCO0FBRUUsa0JBQXNCLDRDQUZ4QjtBQUdFLG1CQUFzQixRQUh4QjtBQUlFLGtCQUFVO0FBQ04sdUJBQWtCLElBRFo7QUFFTixxQkFBa0I7QUFGWixTQUpaO0FBUUUsaUJBQVM7QUFDTCxrQkFBa0IscUJBRGI7QUFFTCxrQkFBa0IscUJBRmI7QUFHTCxtQkFBa0Isc0JBSGI7QUFJTCxrQkFBa0IscUJBSmI7QUFLTCx3QkFBa0I7QUFMYixTQVJYO0FBZUUsZ0JBQVE7QUFDSixtQkFBa0IsdUJBRGQ7QUFFSixxQkFBa0I7QUFGZCxTQWZWO0FBbUJFLGtCQUFVO0FBQ04sdUJBQWtCLCtCQURaO0FBRU4sb0JBQWtCLHdCQUZaO0FBR04s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QUNBLFVBQUksZUFBTSxFQUFOLENBQVMsTUFBVCxDQUFnQixPQUFoQixDQUFKLEVBQThCO0FBQzVCO0FBQ0Esa0JBQVUsU0FBUyxnQkFBVCxDQUEwQixPQUExQixDQUFWO0FBQ0QsT0FIRCxNQUdPLElBQUcsZUFBTSxFQUFOLENBQVMsV0FBVCxDQUFxQixPQUFyQixDQUFILEVBQWlDO0FBQ3RDLGtCQUFVLENBQUMsT0FBRCxDQUFWO0FBQ0QsT0FGTSxNQUVELElBQUksQ0FBQyxlQUFNLEVBQU4sQ0FBUyxRQUFULENBQWtCLE9BQWxCLENBQUQsSUFBK0IsQ0FBQyxlQUFNLEVBQU4sQ0FBUyxLQUFULENBQWUsT0FBZixDQUFoQyxJQUEyRCxDQUFDLGVBQU0sRUFBTixDQUFTLE1BQVQsQ0FBZ0IsT0FBaEIsQ0FBaEUsRUFBMkY7QUFDL0Y7QUFDQTtBQUNBLFlBQUksZUFBTSxFQUFOLENBQVMsU0FBVCxDQUFtQixPQUFuQixLQUErQixlQUFNLEVBQU4sQ0FBUyxNQUFULENBQWdCLE9BQWhCLENBQW5DLEVBQTZEO0FBQ3pELG9CQUFVLE9BQVY7QUFDSDtBQUNELGtCQUFVLFNBQVMsZ0JBQVQsQ0FBMEIsUUFBMUIsQ0FBVjtBQUNEO0FBQ0QsVUFBSSxlQUFNLEVBQU4sQ0FBUyxRQUFULENBQWtCLE9BQWxCLENBQUosRUFBZ0M7QUFDOUIsa0JBQVUsTUFBTSxTQUFOLENBQWdCLEtBQWhCLENBQXNCLElBQXRCLENBQTJCLE9BQTNCLENBQVY7QUFDRDtBQUNELGFBQU8sT0FBUDtBQUNEOzs7Ozs7a0JBR1ksTyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJleHBvcnQgY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgZW5hYmxlZDogICAgICAgICAgICAgICAgIHRydWUsXG4gIGRlYnVnOiAgICAgICAgICAgICAgICAgIHRydWUsXG4gIGF1dG9wbGF5OiAgICAgICAgICAgICAgIGZhbHNlLFxuICBsb29wOiAgICAgICAgICAgICAgICAgICBmYWxzZSxcbiAgc2Vla1RpbWU6ICAgICAgICAgICAgICAgMTAsXG4gIHZvbHVtZTogICAgICAgICAgICAgICAgIDEwLFxuICB2b2x1bWVNaW46ICAgICAgICAgICAgICAwLFxuICB2b2x1bWVNYXg6ICAgICAgICAgICAgICAxMCxcbiAgdm9sdW1lU3RlcDogICAgICAgICAgICAgMSxcbiAgZHVyYXRpb246ICAgICAgICAgICAgICAgbnVsbCxcbiAgZGlzcGxheUR1cmF0aW9uOiAgICAgICAgdHJ1ZSxcbiAgbG9hZFNwcml0ZTogICAgICAgICAgICAgdHJ1ZSxcbiAgY29udHJvbHM6ICAgICAgICAgICAgICAgWydwbGF5LWxhcmdlJywgJ3BsYXknLCAncHJvZ3Jlc3MnLCAndGltZScsICdtdXRlJywgJ3ZvbHVtZScsICdjYXB0aW9ucycsICdmdWxsc2NyZWVuJ10sXG4gIHNlbGVjdG9yczoge1xuICAgIGh0bWw1OiAgICAgICAgICAgICAgICAndmlkZW8sIGF1ZGlvJyxcbiAgICBlZGl0YWJsZTogICAgICAgICAgICAgJ2lucHV0LCB0ZXh0YXJlYSwgc2VsZWN0LCBbY29udGVudGVkaXRhYmxlXScsXG4gICAgY29udGFpbmVyOiAgICAgICAgICAgICcudnBseXInLFxuICAgIGNvbnRyb2xzOiB7XG4gICAgICAgIGNvbnRhaW5lcjogICAgICAgIG51bGwsXG4gICAgICAgIHdyYXBwZXI6ICAgICAgICAgICcudnBseXItY29udHJvbHMnXG4gICAgfSxcbiAgICBidXR0b25zOiB7XG4gICAgICAgIHNlZWs6ICAgICAgICAgICAgICdbZGF0YS12aWRlbz1cInNlZWtcIl0nLFxuICAgICAgICBwbGF5OiAgICAgICAgICAgICAnW2RhdGEtdmlkZW89XCJwbGF5XCJdJyxcbiAgICAgICAgcGF1c2U6ICAgICAgICAgICAgJ1tkYXRhLXZpZGVvPVwicGF1c2VcIl0nLFxuICAgICAgICBtdXRlOiAgICAgICAgICAgICAnW2RhdGEtdmlkZW89XCJtdXRlXCJdJyxcbiAgICAgICAgZnVsbHNjcmVlbjogICAgICAgJ1tkYXRhLXZpZGVvPVwiZnVsbHNjcmVlblwiXSdcbiAgICB9LFxuICAgIHZvbHVtZToge1xuICAgICAgICBpbnB1dDogICAgICAgICAgICAnW2RhdGEtdmlkZW89XCJ2b2x1bWVcIl0nLFxuICAgICAgICBkaXNwbGF5OiAgICAgICAgICAnLnZwbHlyLXZvbHVtZS1kaXNwbGF5J1xuICAgIH0sXG4gICAgcHJvZ3Jlc3M6IHtcbiAgICAgICAgY29udGFpbmVyOiAgICAgICAgJy52cGx5ci1wcm9ncmVzcy1iYXItY29udGFpbmVyJyxcbiAgICAgICAgYnVmZmVyOiAgICAgICAgICAgJy52cGx5ci1wcm9ncmVzcy1idWZmZXInLFxuICAgICAgICBwbGF5ZWQ6ICAgICAgICAgICAnLnZwbHlyLXByb2dyZXNzLXBsYXllZCdcbiAgICB9LFxuICAgIHZvbHVtZToge1xuICAgICAgICBpbnB1dDogICAgICAgICAgJ1tkYXRhLXZpZGVvPVwidm9sdW1lXCJdJyxcbiAgICAgICAgZGlzcGxheTogICAgICAgICcudnBseXItdm9sdW1lLWRpc3BsYXknXG4gICAgfSxcbiAgICBjdXJyZW50VGltZTogICAgICAgICAgJy5jb250cm9sLWN1cnJlbnR0aW1lJyxcbiAgICBkdXJhdGlvbjogICAgICAgICAgICAgJy5jb250cm9sLWR1cmF0aW9uJ1xuICAgIH0sXG5cbiAgLy8gQ3VzdG9tIGNvbnRyb2wgbGlzdGVuZXJzXG4gIGxpc3RlbmVyczoge1xuICAgICAgc2VlazogICAgICAgICAgICAgICBudWxsLFxuICAgICAgcGxheTogICAgICAgICAgICAgICBudWxsLFxuICAgICAgcGF1c2U6ICAgICAgICAgICAgICBudWxsLFxuICAgICAgcmVzdGFydDogICAgICAgICAgICBudWxsLFxuICAgICAgcmV3aW5kOiAgICAgICAgICAgICBudWxsLFxuICAgICAgZm9yd2FyZDogICAgICAgICAgICBudWxsLFxuICAgICAgbXV0ZTogICAgICAgICAgICAgICBudWxsLFxuICAgICAgdm9sdW1lOiAgICAgICAgICAgICBudWxsLFxuICAgICAgY2FwdGlvbnM6ICAgICAgICAgICBudWxsLFxuICAgICAgZnVsbHNjcmVlbjogICAgICAgICBudWxsXG4gIH0sXG4gIHN0b3JhZ2U6IHtcbiAgICBlbmFibGVkOiAgICAgICAgICAgIHRydWUsXG4gICAga2V5OiAgICAgICAgICAgICAgICAndnBseXInXG4gIH0sXG4gIHR5cGVzOiB7XG4gICAgaHRtbDU6ICAgICAgICAgICAgICBbJ3ZpZGVvJ11cbiAgfSxcbiAgY2xhc3Nlczp7XG4gICAgbXV0ZWQ6ICAgICAgICAgICAgICAndnBseXItbXV0ZWQnLFxuICAgIHR5cGU6ICAgICAgICAgICAgICAgJ3ZwbHlyLXswfScsXG4gICAgdmlkZW9XcmFwcGVyOid2cGx5ci12aWRlby1jb250YWluZXInLFxuICAgIHBsYXlpbmc6J3ZwbHlyLXBseWluZycsXG4gICAgbG9hZGluZzogICAgICAgICAgICAndnBseXItbG9hZGluZycsXG4gICAgaG92ZXI6ICAgICAgICAgICAgICAndnBseXItaG92ZXInLFxuICAgIHN0b3BwZWQ6J3ZwbHlyLXN0b3BwZWQnLFxuICAgIGlzSW9zOiAgICAgICAgICAgICAgJ3ZwbHlyLS1pcy1pb3MnLFxuICAgIGlzVG91Y2g6ICAgICAgICAgICAgJ3ZwbHlyLS1pcy10b3VjaCcsXG4gICAgaXNXZWNoYXQ6ICAgICAgICAgICAndnBseXItLWlzLXdlY2hhdCcsXG4gICAgaXNDaHJvbWU6ICAgICAgICAgICAndnBseXItLWlzLWNocm9tZScsXG4gICAgdGFiRm9jdXM6ICAgICAgICAgICAndGFiLWZvY3VzJyxcbiAgICBmdWxsc2NyZWVuOiB7XG4gICAgICAgIGVuYWJsZWQ6ICAgICAgICAndnBseXItZnVsbHNjcmVlbi1lbmFibGVkJyxcbiAgICAgICAgYWN0aXZlOiAgICAgICAgICd2cGx5ci1mdWxsc2NyZWVuLWFjdGl2ZSdcbiAgICB9LFxuICB9LFxuICBldmVudHM6ICAgICAgICAgICAgICAgICBbJ3JlYWR5JywgJ2VuZGVkJywgJ3Byb2dyZXNzJywgJ3N0YWxsZWQnLCAncGxheWluZycsICd3YWl0aW5nJywgJ2NhbnBsYXknLCAnY2FucGxheXRocm91Z2gnLCAnbG9hZHN0YXJ0JywgJ2xvYWRlZGRhdGEnLCAnbG9hZGVkbWV0YWRhdGEnLCAndGltZXVwZGF0ZScsICd2b2x1bWVjaGFuZ2UnLCAncGxheScsICdwYXVzZScsICdlcnJvcicsICdzZWVraW5nJywgJ3NlZWtlZCcsICdlbXB0aWVkJ10sXG4gIC8vIExvZ2dpbmdcbiAgbG9nUHJlZml4OiAgICAgICAgICAgICAgJ1tWUGx5cl0nXG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVmYXVsdENvbmZpZygpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRDb25maWcpO1xufSIsImltcG9ydCB1dGlscyBmcm9tICcuL3V0aWwnO1xuXG5jbGFzcyBEb20ge1xuICBjb25zdHJ1Y3Rvcigpe1xuICAgIHRoaXMudG9nZ2xlQ2xhc3MgID0gdGhpcy5fdG9nZ2xlQ2xhc3MuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlbW92ZUVsZW1lbnQgID0gdGhpcy5fcmVtb3ZlRWxlbWVudC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFzQ2xhc3MgPSB0aGlzLl9oYXNDbGFzcy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaW5qZWN0U2NyaXB0ID0gdGhpcy5faW5qZWN0U2NyaXB0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5wcmVwZW5kQ2hpbGQgPSB0aGlzLl9wcmVwZW5kQ2hpbGQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZXMgPSB0aGlzLl9zZXRBdHRyaWJ1dGVzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5pbnNlcnRFbGVtZW50PSB0aGlzLl9pbnNlcnRFbGVtZW50LmJpbmQodGhpcyk7XG4gICAgdGhpcy5nZXRDbGFzc25hbWU9IHRoaXMuX2dldENsYXNzbmFtZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZnVsbHNjcmVlbj0gdGhpcy5fZnVsbHNjcmVlbi5iaW5kKHRoaXMpO1xuICAgIFxuICB9XG4gIF9nZXRDbGFzc25hbWUoc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gc2VsZWN0b3IucmVwbGFjZSgnLicsICcnKTtcbiAgfVxuICBfaW5zZXJ0RWxlbWVudCh0eXBlLCBwYXJlbnQsIGF0dHJpYnV0ZXMpIHtcbiAgICAvLyBDcmVhdGUgYSBuZXcgPGVsZW1lbnQ+XG4gICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xuXG4gICAgLy8gU2V0IGFsbCBwYXNzZWQgYXR0cmlidXRlc1xuICAgIF9zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIGF0dHJpYnV0ZXMpO1xuXG4gICAgLy8gSW5qZWN0IHRoZSBuZXcgZWxlbWVudFxuICAgIF9wcmVwZW5kQ2hpbGQocGFyZW50LCBlbGVtZW50KTtcbiAgfVxuICBfc2V0QXR0cmlidXRlcyhlbGVtZW50LCBhdHRyaWJ1dGVzKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGF0dHJpYnV0ZXMpIHtcbiAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGtleSwgKF9pcy5ib29sZWFuKGF0dHJpYnV0ZXNba2V5XSkgJiYgYXR0cmlidXRlc1trZXldKSA/ICcnIDogYXR0cmlidXRlc1trZXldKTtcbiAgICB9XG4gIH1cbiAgX3ByZXBlbmRDaGlsZChwYXJlbnQsIGVsZW1lbnQpIHtcbiAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIHBhcmVudC5maXJzdENoaWxkKTtcbiAgfVxuICBfaW5qZWN0U2NyaXB0KHNvdXJjZSkge1xuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHRbc3JjPVwiJyArIHNvdXJjZSArICdcIl0nKS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICB0YWcuc3JjID0gc291cmNlO1xuICAgIHZhciBmaXJzdFNjcmlwdFRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTtcbiAgICBmaXJzdFNjcmlwdFRhZy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0YWcsIGZpcnN0U2NyaXB0VGFnKTtcbiAgfVxuICBfaGFzQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdCkge1xuICAgICAgICAgIHJldHVybiBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cCgnKFxcXFxzfF4pJyArIGNsYXNzTmFtZSArICcoXFxcXHN8JCknKS50ZXN0KGVsZW1lbnQuY2xhc3NOYW1lKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIF9yZW1vdmVFbGVtZW50KGVsZW1lbnQpe1xuICAgIGlmICghZWxlbWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTtcbiAgfVxuICAvLyBUb2dnbGUgY2xhc3Mgb24gYW4gZWxlbWVudFxuICBfdG9nZ2xlQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lLCBzdGF0ZSl7XG4gICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdCkge1xuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdFtzdGF0ZSA/ICdhZGQnIDogJ3JlbW92ZSddKGNsYXNzTmFtZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgbmFtZSA9ICgnICcgKyBlbGVtZW50LmNsYXNzTmFtZSArICcgJykucmVwbGFjZSgvXFxzKy9nLCAnICcpLnJlcGxhY2UoJyAnICsgY2xhc3NOYW1lICsgJyAnLCAnJyk7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gbmFtZSArIChzdGF0ZSA/ICcgJyArIGNsYXNzTmFtZSA6ICcnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgX2Z1bGxzY3JlZW4oKSB7XG4gICAgdmFyIGZ1bGxzY3JlZW4gPSB7XG4gICAgICAgICAgICBzdXBwb3J0c0Z1bGxTY3JlZW46IGZhbHNlLFxuICAgICAgICAgICAgaXNGdWxsU2NyZWVuOiBmdW5jdGlvbigpIHsgcmV0dXJuIGZhbHNlOyB9LFxuICAgICAgICAgICAgcmVxdWVzdEZ1bGxTY3JlZW46IGZ1bmN0aW9uKCkge30sXG4gICAgICAgICAgICBjYW5jZWxGdWxsU2NyZWVuOiBmdW5jdGlvbigpIHt9LFxuICAgICAgICAgICAgZnVsbFNjcmVlbkV2ZW50TmFtZTogJycsXG4gICAgICAgICAgICBlbGVtZW50OiBudWxsLFxuICAgICAgICAgICAgcHJlZml4OiAnJ1xuICAgICAgICB9LFxuICAgICAgICBicm93c2VyUHJlZml4ZXMgPSAnd2Via2l0IG8gbW96IG1zIGtodG1sJy5zcGxpdCgnICcpO1xuXG4gICAgLy8gQ2hlY2sgZm9yIG5hdGl2ZSBzdXBwb3J0XG4gICAgaWYgKCF1dGlscy5pcy51bmRlZmluZWQoZG9jdW1lbnQuY2FuY2VsRnVsbFNjcmVlbikpIHtcbiAgICAgICAgZnVsbHNjcmVlbi5zdXBwb3J0c0Z1bGxTY3JlZW4gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBDaGVjayBmb3IgZnVsbHNjcmVlbiBzdXBwb3J0IGJ5IHZlbmRvciBwcmVmaXhcbiAgICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGJyb3dzZXJQcmVmaXhlcy5sZW5ndGg7IGkgPCBpbDsgaSsrICkge1xuICAgICAgICBmdWxsc2NyZWVuLnByZWZpeCA9IGJyb3dzZXJQcmVmaXhlc1tpXTtcblxuICAgICAgICBpZiAoIXV0aWxzLmlzLnVuZGVmaW5lZChkb2N1bWVudFtmdWxsc2NyZWVuLnByZWZpeCArICdDYW5jZWxGdWxsU2NyZWVuJ10pKSB7XG4gICAgICAgICAgZnVsbHNjcmVlbi5zdXBwb3J0c0Z1bGxTY3JlZW4gPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9IGVsc2UgaWYgKCF1dGlscy5pcy51bmRlZmluZWQoZG9jdW1lbnQubXNFeGl0RnVsbHNjcmVlbikgJiYgZG9jdW1lbnQubXNGdWxsc2NyZWVuRW5hYmxlZCkge1xuICAgICAgICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgTVMgKHdoZW4gaXNuJ3QgaXQ/KVxuICAgICAgICAgIGZ1bGxzY3JlZW4ucHJlZml4ID0gJ21zJztcbiAgICAgICAgICBmdWxsc2NyZWVuLnN1cHBvcnRzRnVsbFNjcmVlbiA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVcGRhdGUgbWV0aG9kcyB0byBkbyBzb21ldGhpbmcgdXNlZnVsXG4gICAgaWYgKGZ1bGxzY3JlZW4uc3VwcG9ydHNGdWxsU2NyZWVuKSB7XG4gICAgICAvLyBZZXQgYWdhaW4gTWljcm9zb2Z0IGF3ZXNvbWVuZXNzLFxuICAgICAgLy8gU29tZXRpbWVzIHRoZSBwcmVmaXggaXMgJ21zJywgc29tZXRpbWVzICdNUycgdG8ga2VlcCB5b3Ugb24geW91ciB0b2VzXG4gICAgICBmdWxsc2NyZWVuLmZ1bGxTY3JlZW5FdmVudE5hbWUgPSAoZnVsbHNjcmVlbi5wcmVmaXggPT09ICdtcycgPyAnTVNGdWxsc2NyZWVuQ2hhbmdlJyA6IGZ1bGxzY3JlZW4ucHJlZml4ICsgJ2Z1bGxzY3JlZW5jaGFuZ2UnKTtcblxuICAgICAgZnVsbHNjcmVlbi5pc0Z1bGxTY3JlZW4gPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgIGlmICh1dGlscy5pcy51bmRlZmluZWQoZWxlbWVudCkpIHtcbiAgICAgICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5ib2R5O1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAodGhpcy5wcmVmaXgpIHtcbiAgICAgICAgICBjYXNlICcnOlxuICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmZ1bGxzY3JlZW5FbGVtZW50ID09PSBlbGVtZW50O1xuICAgICAgICAgIGNhc2UgJ21veic6XG4gICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQubW96RnVsbFNjcmVlbkVsZW1lbnQgPT09IGVsZW1lbnQ7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBkb2N1bWVudFt0aGlzLnByZWZpeCArICdGdWxsc2NyZWVuRWxlbWVudCddID09PSBlbGVtZW50O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZnVsbHNjcmVlbi5yZXF1ZXN0RnVsbFNjcmVlbiA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzLnVuZGVmaW5lZChlbGVtZW50KSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5ib2R5O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAodGhpcy5wcmVmaXggPT09ICcnKSA/IGVsZW1lbnQucmVxdWVzdEZ1bGxTY3JlZW4oKSA6IGVsZW1lbnRbdGhpcy5wcmVmaXggKyAodGhpcy5wcmVmaXggPT09ICdtcycgPyAnUmVxdWVzdEZ1bGxzY3JlZW4nIDogJ1JlcXVlc3RGdWxsU2NyZWVuJyldKCk7XG4gICAgICB9O1xuICAgICAgZnVsbHNjcmVlbi5jYW5jZWxGdWxsU2NyZWVuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5wcmVmaXggPT09ICcnKSA/IGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW4oKSA6IGRvY3VtZW50W3RoaXMucHJlZml4ICsgKHRoaXMucHJlZml4ID09PSAnbXMnID8gJ0V4aXRGdWxsc2NyZWVuJyA6ICdDYW5jZWxGdWxsU2NyZWVuJyldKCk7XG4gICAgICB9O1xuICAgICAgZnVsbHNjcmVlbi5lbGVtZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5wcmVmaXggPT09ICcnKSA/IGRvY3VtZW50LmZ1bGxzY3JlZW5FbGVtZW50IDogZG9jdW1lbnRbdGhpcy5wcmVmaXggKyAnRnVsbHNjcmVlbkVsZW1lbnQnXTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bGxzY3JlZW47XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IG5ldyBEb20oKTtcbiIsImltcG9ydCB1dGlscyBmcm9tICcuL3V0aWwnO1xuXG5jbGFzcyBFdmVudHtcbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLm9uRXZlbnQgPSB0aGlzLl9vbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuY3VzdG9tRXZlbnQgPSB0aGlzLl9ldmVudC5iaW5kKHRoaXMpO1xuICB9XG4gIF9ldmVudChlbGVtZW50LCB0eXBlLCBidWJibGVzLCBwcm9wZXJ0aWVzKSB7XG4gICAgLy8gQmFpbCBpZiBubyBlbGVtZW50XG4gICAgaWYgKCFlbGVtZW50IHx8ICF0eXBlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBEZWZhdWx0IGJ1YmJsZXMgdG8gZmFsc2VcbiAgICBpZiAoIXV0aWxzLmlzLmJvb2xlYW4oYnViYmxlcykpIHtcbiAgICAgICAgYnViYmxlcyA9IGZhbHNlO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBhbmQgZGlzcGF0Y2ggdGhlIGV2ZW50XG4gICAgdmFyIGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KHR5cGUsIHtcbiAgICAgICAgYnViYmxlczogICAgYnViYmxlcyxcbiAgICAgICAgZGV0YWlsOiAgICAgcHJvcGVydGllc1xuICAgIH0pO1xuXG4gICAgLy8gRGlzcGF0Y2ggdGhlIGV2ZW50XG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxuICBfb24oZWxlbWVudCwgZXZlbnRzLCBjYWxsYmFjaywgdXNlQ2FwdHVyZSkge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICB0aGlzLl90b2dnbGVMaXN0ZW5lcihlbGVtZW50LCBldmVudHMsIGNhbGxiYWNrLCB0cnVlLCB1c2VDYXB0dXJlKTtcbiAgICB9XG4gIH1cblxuICBfdG9nZ2xlTGlzdGVuZXIoZWxlbWVudCwgZXZlbnRzLCBjYWxsYmFjaywgdG9nZ2xlLCB1c2VDYXB0dXJlKSB7XG4gICAgdmFyIGV2ZW50TGlzdCA9IGV2ZW50cy5zcGxpdCgnICcpO1xuICAgIC8vIFdoZXRoZXIgdGhlIGxpc3RlbmVyIGlzIGEgY2FwdHVyaW5nIGxpc3RlbmVyIG9yIG5vdFxuICAgIC8vIERlZmF1bHQgdG8gZmFsc2VcbiAgICBpZiAoIXV0aWxzLmlzLmJvb2xlYW4odXNlQ2FwdHVyZSkpIHtcbiAgICAgIHVzZUNhcHR1cmUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBJZiBhIG5vZGVsaXN0IGlzIHBhc3NlZCwgY2FsbCBpdHNlbGYgb24gZWFjaCBub2RlXG4gICAgaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBOb2RlTGlzdCkge1xuICAgICAgZm9yICh2YXIgeCA9IDA7IHggPCBlbGVtZW50Lmxlbmd0aDsgeCsrKSB7XG4gICAgICAgIGlmIChlbGVtZW50W3hdIGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgICAgIHRoaXMuX3RvZ2dsZUxpc3RlbmVyKGVsZW1lbnRbeF0sIGFyZ3VtZW50c1sxXSwgYXJndW1lbnRzWzJdLCBhcmd1bWVudHNbM10pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSWYgYSBzaW5nbGUgbm9kZSBpcyBwYXNzZWQsIGJpbmQgdGhlIGV2ZW50IGxpc3RlbmVyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBldmVudExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgIGVsZW1lbnRbdG9nZ2xlID8gJ2FkZEV2ZW50TGlzdGVuZXInIDogJ3JlbW92ZUV2ZW50TGlzdGVuZXInXShldmVudExpc3RbaV0sIGNhbGxiYWNrLCB1c2VDYXB0dXJlKTtcbiAgICB9XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IG5ldyBFdmVudCgpOyIsImltcG9ydCB2UGxheWVyIGZyb20gJy4vdnBseXIuanMnO1xuXG47KGZ1bmN0aW9uKHJvb3QsIGZhY3RvcnkpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgLypnbG9iYWwgZGVmaW5lLG1vZHVsZSovXG5cbiAgICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgICAgICAvLyBOb2RlLCBDb21tb25KUy1saWtlXG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyb290LCBkb2N1bWVudCk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgLy8gQU1EXG4gICAgICAgIGRlZmluZShbXSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFjdG9yeShyb290LCBkb2N1bWVudCk7IH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEJyb3dzZXIgZ2xvYmFscyAocm9vdCBpcyB3aW5kb3cpXG4gICAgICAgIHJvb3QudnBseXIgPSBmYWN0b3J5KHJvb3QsIGRvY3VtZW50KTtcbiAgICB9XG59KHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24od2luZG93LCBkb2N1bWVudCkge1xuICB3aW5kb3cudlBsYXllciA9IHZQbGF5ZXI7XG59KSkiLCIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWwnO1xuaW1wb3J0ICQgZnJvbSAnLi9kb20nO1xuaW1wb3J0IEV2ZW50IGZyb20gJy4vZXZlbnQnO1xubGV0IF9sb2cgLCBfd2FybixmdWxsc2NyZWVuO1xuXG5jbGFzcyBQbGF5ZXIge1xuICBjb25zdHJ1Y3RvcihtZWRpYSwgY29uZmlnKXtcbiAgICB0aGlzLl9pbml0KG1lZGlhLCBjb25maWcpO1xuICAgXG4gIH1cbiAgX2luaXQobWVkaWEsIGNvbmZpZyl7XG4gICAgY29uc3QgdmsgPSB0aGlzO1xuICAgIGNvbnN0IHRpbWVycyA9IHt9O1xuICAgIGxldCBhcGkgPSB7fTtcbiAgICB2ay5tZWRpYSA9IG1lZGlhO1xuICAgIGxldCBvcmlnaW5hbCA9IG1lZGlhLmNsb25lTm9kZSh0cnVlKTtcbiAgICBmdWxsc2NyZWVuID0gJC5mdWxsc2NyZWVuKCk7XG4gICAgY29uc3QgX2NvbnNvbGUgPSAodHlwZSxhcmdzKT0+e1xuICAgICAgaWYgKGNvbmZpZy5kZWJ1ZyAmJiB3aW5kb3cuY29uc29sZSkge1xuICAgICAgICBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJncyk7XG5cbiAgICAgICAgaWYgKHV0aWxzLmlzLnN0cmluZyhjb25maWcubG9nUHJlZml4KSAmJiBjb25maWcubG9nUHJlZml4Lmxlbmd0aCkge1xuICAgICAgICAgIGFyZ3MudW5zaGlmdChjb25maWcubG9nUHJlZml4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnNvbGVbdHlwZV0uYXBwbHkoY29uc29sZSwgYXJncyk7XG4gICAgICB9XG4gICAgfTtcbiAgICBfbG9nID0gZnVuY3Rpb24oKSB7IF9jb25zb2xlKCdsb2cnLCBhcmd1bWVudHMpIH07XG4gICAgX3dhcm4gPSBmdW5jdGlvbigpIHsgX2NvbnNvbGUoJ3dhcm4nLCBhcmd1bWVudHMpIH07XG4gICAgX2xvZygnQ29uZmlnJywgY29uZmlnKTtcbiAgICB2ay5jb25maWcgPSBjb25maWc7XG4gICAgdmsudGltZXJzID0gdGltZXJzO1xuICAgIHZrLmFwaSA9IGFwaTtcbiAgICBcbiAgICB0aGlzLl9zZXR1cCh2ayxjb25maWcpO1xuICAgIF9sb2coJ3BsYXllcicsIHZrKTtcbiAgICBpZiAoIXZrLmluaXQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gYXBpO1xuICB9XG5cbiAgX3NldHVwKHBsYXllcixjb25maWcpe1xuICAgIGlmIChwbGF5ZXIuaW5pdCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHBsYXllci5icm93c2VyID0gdXRpbHMuYnJvd3NlclNuaWZmO1xuICAgIGlmICghdXRpbHMuaXMuaHRtbEVsZW1lbnQocGxheWVyLm1lZGlhKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLl9zZXR1cFN0b3JhZ2UoKTtcbiAgICBjb25zdCB0YWdOYW1lID0gcGxheWVyLm1lZGlhLnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBwbGF5ZXIudHlwZSAgICAgICAgID0gdGFnTmFtZTtcbiAgICBjb25maWcuY3Jvc3NvcmlnaW4gID0gKHBsYXllci5tZWRpYS5nZXRBdHRyaWJ1dGUoJ2Nyb3Nzb3JpZ2luJykgIT09IG51bGwpO1xuICAgIGNvbmZpZy5hdXRvcGxheSAgICAgPSAoY29uZmlnLmF1dG9wbGF5IHx8IChwbGF5ZXIubWVkaWEuZ2V0QXR0cmlidXRlKCdhdXRvcGxheScpICE9PSBudWxsKSk7XG4gICAgY29uZmlnLmxvb3AgICAgICAgICA9IChjb25maWcubG9vcCB8fCAocGxheWVyLm1lZGlhLmdldEF0dHJpYnV0ZSgnbG9vcCcpICE9PSBudWxsKSk7XG4gICAgcGxheWVyLnN1cHBvcnRlZCA9IHV0aWxzLnN1cHBvcnRlZChwbGF5ZXIudHlwZSk7XG4gICAgaWYgKCFwbGF5ZXIuc3VwcG9ydGVkLmJhc2ljKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHBsYXllci5jb250YWluZXIgPSB0aGlzLl93cmFwKHBsYXllci5tZWRpYSwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpO1xuICAgIHBsYXllci5jb250YWluZXIuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsIDApO1xuICAgIHRoaXMuX3RvZ2dsZVN0eWxlSG9vayhwbGF5ZXIsY29uZmlnKTtcbiAgICBfbG9nKCcnICsgcGxheWVyLmJyb3dzZXIubmFtZSArICcgJyArIHBsYXllci5icm93c2VyLnZlcnNpb24pO1xuICAgIHRoaXMuX3NldHVwTWVkaWEocGxheWVyLGNvbmZpZyk7XG4gICAgaWYodXRpbHMuaW5BcnJheShjb25maWcudHlwZXMuaHRtbDUscGxheWVyLnR5cGUpKXtcbiAgICAgIC8vIFNldHVwIFVJXG4gICAgICB0aGlzLl9zZXR1cEludGVyZmFjZShwbGF5ZXIsY29uZmlnKTtcbiAgICB9XG4gIH1cbiAgX3JlYWR5KCkge1xuICAgIC8vIFJlYWR5IGV2ZW50IGF0IGVuZCBvZiBleGVjdXRpb24gc3RhY2tcbiAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX3RyaWdnZXJFdmVudCh0aGlzLm1lZGlhLCAncmVhZHknKTtcbiAgICB9LCAwKTtcblxuICAgIC8vIFNldCBjbGFzcyBob29rIG9uIG1lZGlhIGVsZW1lbnRcbiAgICAkLnRvZ2dsZUNsYXNzKHBseXIubWVkaWEsIGRlZmF1bHRzLmNsYXNzZXMuc2V0dXAsIHRydWUpO1xuXG4gICAgLy8gU2V0IGNvbnRhaW5lciBjbGFzcyBmb3IgcmVhZHlcbiAgICAkLnRvZ2dsZUNsYXNzKHRoaXMuY29udGFpbmVyLCB0aGlzLmNvbmZpZy5jbGFzc2VzLnJlYWR5LCB0cnVlKTtcblxuICAgIC8vIFN0b3JlIGEgcmVmZXJuY2UgdG8gaW5zdGFuY2VcbiAgICB0aGlzLm1lZGlhLnZwbHlyID0gdGhpcy5hcGk7XG5cbiAgICAvLyBBdXRvcGxheVxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvcGxheSkge1xuICAgICAgdGhpcy5fcGxheSgpO1xuICAgIH1cbiAgfVxuICBfc2V0dXBJbnRlcmZhY2UocGxheWVyLGNvbmZpZyl7XG4gICAgY29uc3QgX2dldEVsZW1lbnRzID0gKHNlbGVjdG9yKT0+IHtcbiAgICAgIHJldHVybiBwbGF5ZXIuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIH1cbiAgICBjb25zdCBfZ2V0RWxlbWVudD0oc2VsZWN0b3IpPT4ge1xuICAgICAgcmV0dXJuIF9nZXRFbGVtZW50cyhzZWxlY3RvcilbMF07XG4gICAgfVxuICAgIGlmICghcGxheWVyLnN1cHBvcnRlZC5mdWxsKSB7XG4gICAgICBfd2FybignQmFzaWMgc3VwcG9ydCBvbmx5JywgcGxheWVyLnR5cGUpO1xuICAgICAgXG4gICAgICAvLyBSZW1vdmUgY29udHJvbHNcbiAgICAgICQucmVtb3ZlRWxlbWVudChfZ2V0RWxlbWVudChjb25maWcuc2VsZWN0b3JzLmNvbnRyb2xzLndyYXBwZXIpKTtcbiAgICAgIC8vIHJlc2V0IG5hdGl2ZSBjb250cm9sc1xuICAgICAgdGhpcy5fdG9nZ2xlTmF0aXZlQ29udHJvbHModHJ1ZSxwbGF5ZXIsY29uZmlnKTtcbiAgICAgIC8vIEJhaWxcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgY29udHJvbHNNaXNzaW5nID0gIV9nZXRFbGVtZW50cyhjb25maWcuc2VsZWN0b3JzLmNvbnRyb2xzLndyYXBwZXIpLmxlbmd0aDtcbiAgICBpZiAoY29udHJvbHNNaXNzaW5nKSB7XG4gICAgICAvLyBJbmplY3QgY3VzdG9tIGNvbnRyb2xzXG4gICAgICB0aGlzLl9pbmplY3RDb250cm9scyhwbGF5ZXIsY29uZmlnKTtcbiAgICB9XG4gICAgLy8gRmluZCB0aGUgZWxlbWVudHNcbiAgICBpZiAoIXRoaXMuX2ZpbmRFbGVtZW50cyhwbGF5ZXIsY29uZmlnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoY29udHJvbHNNaXNzaW5nKSB7XG4gICAgICB0aGlzLl9jb250cm9sTGlzdGVuZXJzKHBsYXllcixjb25maWcpO1xuICAgIH1cbiAgICB0aGlzLl9tZWRpYUxpc3RlbmVycygpO1xuICAgIHRoaXMuX3RvZ2dsZU5hdGl2ZUNvbnRyb2xzKHRydWUsdGhpcyx0aGlzLmNvbmZpZyk7XG5cbiAgICB0aGlzLl90aW1lVXBkYXRlKCk7XG4gICAgLy8gU2V0IHZvbHVtZVxuICAgIHRoaXMuX3NldFZvbHVtZSgpO1xuXG4gICAgdGhpcy5fdXBkYXRlVm9sdW1lKCk7XG5cbiAgICB0aGlzLl9jaGVja1BsYXlpbmcoKTtcbiAgfVxuICBfc2V0dXBTdG9yYWdlKCkge1xuICAgIHZhciB2YWx1ZSA9IG51bGw7XG4gICAgdGhpcy5zdG9yYWdlID0ge307XG5cbiAgICAvLyBCYWlsIGlmIHdlIGRvbid0IGhhdmUgbG9jYWxTdG9yYWdlIHN1cHBvcnQgb3IgaXQncyBkaXNhYmxlZFxuICAgIGlmICghdXRpbHMuc3RvcmFnZVN1cHBvcnQgfHwgIXRoaXMuY29uZmlnLnN0b3JhZ2UuZW5hYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3ZwbHlyLXZvbHVtZScpO1xuXG4gICAgLy8gbG9hZCB2YWx1ZSBmcm9tIHRoZSBjdXJyZW50IGtleVxuICAgIHZhbHVlID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuY29uZmlnLnN0b3JhZ2Uua2V5KTtcblxuICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgLy8gS2V5IHdhc24ndCBzZXQgKG9yIGhhZCBiZWVuIGNsZWFyZWQpLCBtb3ZlIGFsb25nXG4gICAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKC9eXFxkKyhcXC5cXGQrKT8kLy50ZXN0KHZhbHVlKSkge1xuICAgICAgLy8gSWYgdmFsdWUgaXMgYSBudW1iZXIsIGl0J3MgcHJvYmFibHkgdm9sdW1lIGZyb20gYW4gb2xkZXJcbiAgICAgIC8vIHZlcnNpb24gb2YgcGx5ci4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vU2Vsei9wbHlyL3B1bGwvMzEzXG4gICAgICAvLyBVcGRhdGUgdGhlIGtleSB0byBiZSBKU09OXG4gICAgICB0aGlzLl91cGRhdGVTdG9yYWdlKHt2b2x1bWU6IHBhcnNlRmxvYXQodmFsdWUpfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQXNzdW1lIGl0J3MgSlNPTiBmcm9tIHRoaXMgb3IgYSBsYXRlciB2ZXJzaW9uIG9mIHBseXJcbiAgICAgIHRoaXMuc3RvcmFnZSA9IEpTT04ucGFyc2UodmFsdWUpO1xuICAgIH1cbiAgfVxuICBfdHJpZ2dlckV2ZW50KGVsZW1lbnQsIHR5cGUsIGJ1YmJsZXMsIHByb3BlcnRpZXMpIHtcbiAgICBFdmVudC5jdXN0b21FdmVudChlbGVtZW50LCB0eXBlLCBidWJibGVzLCB1dGlscy5leHRlbmQoe30sIHByb3BlcnRpZXMsIHtcbiAgICAgIHZwbHlyOiB0aGlzXG4gICAgfSkpO1xuICB9XG4gIF9nZXREdXJhdGlvbigpIHtcbiAgICAvLyBJdCBzaG91bGQgYmUgYSBudW1iZXIsIGJ1dCBwYXJzZSBpdCBqdXN0IGluY2FzZVxuICAgIHZhciBkdXJhdGlvbiA9IHBhcnNlSW50KHRoaXMuY29uZmlnLmR1cmF0aW9uKSxcblxuICAgIC8vIFRydWUgZHVyYXRpb25cbiAgICBtZWRpYUR1cmF0aW9uID0gMDtcblxuICAgIC8vIE9ubHkgaWYgZHVyYXRpb24gYXZhaWxhYmxlXG4gICAgaWYgKHRoaXMubWVkaWEuZHVyYXRpb24gIT09IG51bGwgJiYgIWlzTmFOKHRoaXMubWVkaWEuZHVyYXRpb24pKSB7XG4gICAgICBtZWRpYUR1cmF0aW9uID0gdGhpcy5tZWRpYS5kdXJhdGlvbjtcbiAgICB9XG5cbiAgICAvLyBJZiBjdXN0b20gZHVyYXRpb24gaXMgZnVua3ksIHVzZSByZWd1bGFyIGR1cmF0aW9uXG4gICAgcmV0dXJuIChpc05hTihkdXJhdGlvbikgPyBtZWRpYUR1cmF0aW9uIDogZHVyYXRpb24pO1xuICB9XG4gIF9zZWVrKGlucHV0KXtcbiAgICBfbG9nKHRoaXMpO1xuICAgIGxldCB0YXJnZXRUaW1lICA9IDAsXG4gICAgICAgIHBhdXNlZCAgICAgID0gdGhpcy5tZWRpYS5wYXVzZWQsXG4gICAgICAgIGR1cmF0aW9uICAgID0gdGhpcy5fZ2V0RHVyYXRpb24oKTtcblxuICAgIGlmICh1dGlscy5pcy5udW1iZXIoaW5wdXQpKSB7XG4gICAgICB0YXJnZXRUaW1lID0gaW5wdXQ7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pcy5vYmplY3QoaW5wdXQpICYmIHV0aWxzLmluQXJyYXkoWydpbnB1dCcsICdjaGFuZ2UnXSwgaW5wdXQudHlwZSkpIHtcbiAgICAgIC8vIEl0J3MgdGhlIHNlZWsgc2xpZGVyXG4gICAgICAvLyBTZWVrIHRvIHRoZSBzZWxlY3RlZCB0aW1lXG4gICAgICB0YXJnZXRUaW1lID0gKChpbnB1dC50YXJnZXQudmFsdWUgLyBpbnB1dC50YXJnZXQubWF4KSAqIGR1cmF0aW9uKTtcbiAgICB9XG4gICAgaWYgKHRhcmdldFRpbWUgPCAwKSB7XG4gICAgICB0YXJnZXRUaW1lID0gMDtcbiAgICB9IGVsc2UgaWYgKHRhcmdldFRpbWUgPiBkdXJhdGlvbikge1xuICAgICAgdGFyZ2V0VGltZSA9IGR1cmF0aW9uO1xuICAgIH1cbiAgICB0aGlzLl91cGRhdGVTZWVrRGlzcGxheSh0YXJnZXRUaW1lKTtcbiAgICB0cnkge1xuICAgICAgdGhpcy5tZWRpYS5jdXJyZW50VGltZSA9IHRhcmdldFRpbWUudG9GaXhlZCg0KTtcbiAgICB9XG4gICAgY2F0Y2goZSkge31cbiAgICAvLyBMb2dnaW5nXG4gICAgX2xvZygnU2Vla2luZyB0byAnICsgdGhpcy5tZWRpYS5jdXJyZW50VGltZSArICcgc2Vjb25kcycpO1xuICB9XG4gIF9wbGF5KCkge1xuICAgIGlmICgncGxheScgaW4gdGhpcy5tZWRpYSkge1xuICAgICAgdGhpcy5tZWRpYS5wbGF5KCk7XG4gICAgfVxuICB9XG4gIF9wYXVzZSgpIHtcbiAgICBpZiAoJ3BhdXNlJyBpbiB0aGlzLm1lZGlhKSB7XG4gICAgICB0aGlzLm1lZGlhLnBhdXNlKCk7XG4gICAgfVxuICB9XG4gIF90b2dnbGVQbGF5KHRvZ2dsZSkge1xuICAgIC8vIFRydWUgdG9nZ2xlXG4gICAgaWYgKCF1dGlscy5pcy5ib29sZWFuKHRvZ2dsZSkpIHtcbiAgICAgIHRvZ2dsZSA9IHRoaXMubWVkaWEucGF1c2VkO1xuICAgIH1cblxuICAgIGlmICh0b2dnbGUpIHtcbiAgICAgIHRoaXMuX3BsYXkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcGF1c2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRvZ2dsZTtcbiAgfVxuICBfZ2V0UGVyY2VudGFnZShjdXJyZW50LCBtYXgpIHtcbiAgICBpZiAoY3VycmVudCA9PT0gMCB8fCBtYXggPT09IDAgfHwgaXNOYU4oY3VycmVudCkgfHwgaXNOYU4obWF4KSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgcmV0dXJuICgoY3VycmVudCAvIG1heCkgKiAxMDApLnRvRml4ZWQoMik7XG4gIH1cbiAgX3VwZGF0ZVNlZWtEaXNwbGF5KHRpbWUpIHtcbiAgICAvLyBEZWZhdWx0IHRvIDBcbiAgICBpZiAoIXV0aWxzLmlzLm51bWJlcih0aW1lKSkge1xuICAgICAgICB0aW1lID0gMDtcbiAgICB9XG5cbiAgICB2YXIgZHVyYXRpb24gICAgPSB0aGlzLl9nZXREdXJhdGlvbigpLFxuICAgICAgICB2YWx1ZSAgICAgICA9IHRoaXMuX2dldFBlcmNlbnRhZ2UodGltZSwgZHVyYXRpb24pO1xuXG4gICAgLy8gVXBkYXRlIHByb2dyZXNzXG4gICAgaWYgKHRoaXMucHJvZ3Jlc3MgJiYgdGhpcy5wcm9ncmVzcy5wbGF5ZWQpIHtcbiAgICAgIHRoaXMucHJvZ3Jlc3MucGxheWVkLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHNlZWsgcmFuZ2UgaW5wdXRcbiAgICBpZiAodGhpcy5idXR0b25zICYmIHRoaXMuYnV0dG9ucy5zZWVrKSB7XG4gICAgICB0aGlzLmJ1dHRvbnMuc2Vlay52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICBfbWVkaWFMaXN0ZW5lcnMoKXtcbiAgICAvLyBUaW1lIGNoYW5nZSBvbiBtZWRpYVxuICAgIEV2ZW50Lm9uRXZlbnQodGhpcy5tZWRpYSwgJ3RpbWV1cGRhdGUgc2Vla2luZycsIHRoaXMuX3RpbWVVcGRhdGUuYmluZCh0aGlzKSk7XG5cbiAgICBFdmVudC5vbkV2ZW50KHRoaXMubWVkaWEsICdkdXJhdGlvbmNoYW5nZSBsb2FkZWRtZXRhZGF0YScsIHRoaXMuX2Rpc3BsYXlEdXJhdGlvbi5iaW5kKHRoaXMpKTtcbiAgICBcbiAgICBFdmVudC5vbkV2ZW50KHRoaXMubWVkaWEsICdwbGF5IHBhdXNlIGVuZGVkJywgdGhpcy5fY2hlY2tQbGF5aW5nLmJpbmQodGhpcykpO1xuXG4gICAgRXZlbnQub25FdmVudCh0aGlzLm1lZGlhLCAncHJvZ3Jlc3MgcGxheWluZycsIHRoaXMuX3VwZGF0ZVByb2dyZXNzLmJpbmQodGhpcykpO1xuXG4gICAgRXZlbnQub25FdmVudCh0aGlzLm1lZGlhLCAnd2FpdGluZyBjYW5wbGF5IHNlZWtlZCcsIHRoaXMuX2NoZWNrTG9hZGluZy5iaW5kKHRoaXMpKTtcblxuICAgIEV2ZW50Lm9uRXZlbnQodGhpcy5tZWRpYSwgJ3ZvbHVtZWNoYW5nZScsIHRoaXMuX3VwZGF0ZVZvbHVtZS5iaW5kKHRoaXMpKTtcbiAgICBcbiAgfVxuICBfcHJveHlMaXN0ZW5lcihlbGVtZW50LCBldmVudE5hbWUsIHVzZXJMaXN0ZW5lciwgZGVmYXVsdExpc3RlbmVyLCB1c2VDYXB0dXJlKSB7XG4gICAgRXZlbnQub25FdmVudChlbGVtZW50LCBldmVudE5hbWUsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICBpZiAodXNlckxpc3RlbmVyKSB7XG4gICAgICAgIHVzZXJMaXN0ZW5lci5hcHBseShlbGVtZW50LCBbZXZlbnRdKTtcbiAgICAgIH1cbiAgICAgIGRlZmF1bHRMaXN0ZW5lci5hcHBseShlbGVtZW50LCBbZXZlbnRdKTtcbiAgICB9LCB1c2VDYXB0dXJlKTtcbiAgfVxuICBfY29udHJvbExpc3RlbmVycygpe1xuICAgIGNvbnN0IGlucHV0RXZlbnQgPSAodGhpcy5icm93c2VyLmlzSUUgPyAnY2hhbmdlJyA6ICdpbnB1dCcpO1xuICAgIGNvbnN0IHRvZ2dsZVBsYXkgPSAoKT0+e1xuICAgICAgY29uc3QgcGxheSA9IHRoaXMuX3RvZ2dsZVBsYXkoKTtcbiAgICAgIGxldCB0cmlnZ2VyID0gdGhpcy5idXR0b25zW3BsYXkgPyAncGxheScgOiAncGF1c2UnXSxcbiAgICAgICAgICB0YXJnZXQgPSB0aGlzLmJ1dHRvbnNbcGxheSA/ICdwYXVzZScgOiAncGxheSddO1xuXG4gICAgICAvLyBHZXQgdGhlIGxhc3QgcGxheSBidXR0b24gdG8gYWNjb3VudCBmb3IgdGhlIGxhcmdlIHBsYXkgYnV0dG9uXG4gICAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC5sZW5ndGggPiAxKSB7XG4gICAgICAgIHRhcmdldCA9IHRhcmdldFt0YXJnZXQubGVuZ3RoIC0gMV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0YXJnZXQgPSB0YXJnZXRbMF07XG4gICAgICB9XG4gICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgIGNvbnN0IGhhZFRhYkZvY3VzID0gJC5oYXNDbGFzcyh0cmlnZ2VyLCB0aGlzLmNvbmZpZy5jbGFzc2VzLnRhYkZvY3VzKTtcblxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRhcmdldC5mb2N1cygpO1xuICAgICAgICAgIGlmIChoYWRUYWJGb2N1cykge1xuICAgICAgICAgICAgJC50b2dnbGVDbGFzcyh0cmlnZ2VyLCB0aGlzLmNvbmZpZy5jbGFzc2VzLnRhYkZvY3VzLCBmYWxzZSk7XG4gICAgICAgICAgICAkLnRvZ2dsZUNsYXNzKHRhcmdldCwgdGhpcy5jb25maWcuY2xhc3Nlcy50YWJGb2N1cywgdHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAxMDApO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLl9wcm94eUxpc3RlbmVyKHRoaXMuYnV0dG9ucy5wbGF5LCAnY2xpY2snLCB0aGlzLmNvbmZpZy5saXN0ZW5lcnMucGxheSwgdG9nZ2xlUGxheSk7XG4gICAgLy8gUGF1c2VcbiAgICB0aGlzLl9wcm94eUxpc3RlbmVyKHRoaXMuYnV0dG9ucy5wYXVzZSwgJ2NsaWNrJywgdGhpcy5jb25maWcubGlzdGVuZXJzLnBhdXNlLCB0b2dnbGVQbGF5KTtcbiAgICAvLyBTZWVrXG4gICAgdGhpcy5fcHJveHlMaXN0ZW5lcih0aGlzLmJ1dHRvbnMuc2VlaywgaW5wdXRFdmVudCwgdGhpcy5jb25maWcubGlzdGVuZXJzLnNlZWssIHRoaXMuX3NlZWsuYmluZCh0aGlzKSk7XG5cbiAgICB0aGlzLl9wcm94eUxpc3RlbmVyKHRoaXMudm9sdW1lLmlucHV0LCBpbnB1dEV2ZW50LCB0aGlzLmNvbmZpZy5saXN0ZW5lcnMudm9sdW1lLCAoKT0+e1xuICAgICAgdGhpcy5fc2V0Vm9sdW1lKHRoaXMudm9sdW1lLmlucHV0LnZhbHVlKTtcbiAgICB9KTtcbiAgICB0aGlzLl9wcm94eUxpc3RlbmVyKHRoaXMuYnV0dG9ucy5tdXRlLCAnY2xpY2snLCB0aGlzLmNvbmZpZy5saXN0ZW5lcnMubXV0ZSwgdGhpcy5fdG9nZ2xlTXV0ZS5iaW5kKHRoaXMpKTtcblxuICAgIHRoaXMuX3Byb3h5TGlzdGVuZXIodGhpcy5idXR0b25zLmZ1bGxzY3JlZW4sICdjbGljaycsIHRoaXMuY29uZmlnLmxpc3RlbmVycy5mdWxsc2NyZWVuLCB0aGlzLl90b2dnbGVGdWxsc2NyZWVuLmJpbmQodGhpcykpO1xuXG4gICAgLy8gSGFuZGxlIHVzZXIgZXhpdGluZyBmdWxsc2NyZWVuIGJ5IGVzY2FwaW5nIGV0Y1xuICAgIGlmIChmdWxsc2NyZWVuLnN1cHBvcnRzRnVsbFNjcmVlbikge1xuICAgICAgRXZlbnQub25FdmVudChkb2N1bWVudCwgZnVsbHNjcmVlbi5mdWxsU2NyZWVuRXZlbnROYW1lLCB0aGlzLl90b2dnbGVGdWxsc2NyZWVuLmJpbmQodGhpcykpO1xuICAgIH1cbiAgfVxuICBfdG9nZ2xlRnVsbHNjcmVlbihldmVudCkge1xuICAgIC8vIENoZWNrIGZvciBuYXRpdmUgc3VwcG9ydFxuICAgIHZhciBuYXRpdmVTdXBwb3J0ID0gZnVsbHNjcmVlbi5zdXBwb3J0c0Z1bGxTY3JlZW47XG5cbiAgICBpZiAobmF0aXZlU3VwcG9ydCkge1xuICAgICAgLy8gSWYgaXQncyBhIGZ1bGxzY3JlZW4gY2hhbmdlIGV2ZW50LCB1cGRhdGUgdGhlIFVJXG4gICAgICBpZiAoZXZlbnQgJiYgZXZlbnQudHlwZSA9PT0gZnVsbHNjcmVlbi5mdWxsU2NyZWVuRXZlbnROYW1lKSB7XG4gICAgICAgICAgdGhpcy5pc0Z1bGxzY3JlZW4gPSBmdWxsc2NyZWVuLmlzRnVsbFNjcmVlbih0aGlzLmNvbnRhaW5lcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBFbHNlIGl0J3MgYSB1c2VyIHJlcXVlc3QgdG8gZW50ZXIgb3IgZXhpdFxuICAgICAgICBpZiAoIWZ1bGxzY3JlZW4uaXNGdWxsU2NyZWVuKHRoaXMuY29udGFpbmVyKSkge1xuICAgICAgICAgIC8vIFNhdmUgc2Nyb2xsIHBvc2l0aW9uXG4gICAgICAgICAgdGhpcy5fc2F2ZVNjcm9sbFBvc2l0aW9uKCk7XG5cbiAgICAgICAgICAvLyBSZXF1ZXN0IGZ1bGwgc2NyZWVuXG4gICAgICAgICAgZnVsbHNjcmVlbi5yZXF1ZXN0RnVsbFNjcmVlbih0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBCYWlsIGZyb20gZnVsbHNjcmVlblxuICAgICAgICAgIGZ1bGxzY3JlZW4uY2FuY2VsRnVsbFNjcmVlbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgd2UncmUgYWN0dWFsbHkgZnVsbCBzY3JlZW4gKGl0IGNvdWxkIGZhaWwpXG4gICAgICAgIHRoaXMuaXNGdWxsc2NyZWVuID0gZnVsbHNjcmVlbi5pc0Z1bGxTY3JlZW4odGhpcy5jb250YWluZXIpO1xuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBPdGhlcndpc2UsIGl0J3MgYSBzaW1wbGUgdG9nZ2xlXG4gICAgICAgIHRoaXMuaXNGdWxsc2NyZWVuID0gIXRoaXMuaXNGdWxsc2NyZWVuO1xuXG4gICAgICAgIC8vIEJpbmQvdW5iaW5kIGVzY2FwZSBrZXlcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IHRoaXMuaXNGdWxsc2NyZWVuID8gJ2hpZGRlbicgOiAnJztcbiAgICB9XG5cbiAgICAvLyBTZXQgY2xhc3MgaG9va1xuICAgICQudG9nZ2xlQ2xhc3ModGhpcy5jb250YWluZXIsIHRoaXMuY29uZmlnLmNsYXNzZXMuZnVsbHNjcmVlbi5hY3RpdmUsIHRoaXMuaXNGdWxsc2NyZWVuKTtcblxuICAgIC8vIFRyYXAgZm9jdXNcbiAgICB0aGlzLl9mb2N1c1RyYXAodGhpcy5pc0Z1bGxzY3JlZW4pO1xuXG4gICAgLy8gU2V0IGJ1dHRvbiBzdGF0ZVxuICAgIGlmICh0aGlzLmJ1dHRvbnMgJiYgdGhpcy5idXR0b25zLmZ1bGxzY3JlZW4pIHtcbiAgICAgIHRoaXMuX3RvZ2dsZVN0YXRlKHRoaXMuYnV0dG9ucy5mdWxsc2NyZWVuLCB0aGlzLmlzRnVsbHNjcmVlbik7XG4gICAgfVxuXG4gICAgLy8gVHJpZ2dlciBhbiBldmVudFxuICAgIHRoaXMuX3RyaWdnZXJFdmVudCh0aGlzLmNvbnRhaW5lciwgdGhpcy5pc0Z1bGxzY3JlZW4gPyAnZW50ZXJmdWxsc2NyZWVuJyA6ICdleGl0ZnVsbHNjcmVlbicsIHRydWUpO1xuXG4gICAgLy8gUmVzdG9yZSBzY3JvbGwgcG9zaXRpb25cbiAgICBpZiAoIXRoaXMuaXNGdWxsc2NyZWVuICYmIG5hdGl2ZVN1cHBvcnQpIHtcbiAgICAgICAgdGhpcy5fcmVzdG9yZVNjcm9sbFBvc2l0aW9uKCk7XG4gICAgfVxuICB9XG4gIF9mb2N1c1RyYXAoKSB7XG4gICAgY29uc3QgX2dldEVsZW1lbnRzID0gKHNlbGVjdG9yKT0+IHtcbiAgICAgIHJldHVybiB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICB9XG4gICAgY29uc3QgX2dldEVsZW1lbnQ9KHNlbGVjdG9yKT0+IHtcbiAgICAgIHJldHVybiBfZ2V0RWxlbWVudHMoc2VsZWN0b3IpWzBdO1xuICAgIH1cbiAgICB2YXIgdGFiYmFibGVzICAgPSBfZ2V0RWxlbWVudHMoJ2lucHV0Om5vdChbZGlzYWJsZWRdKSwgYnV0dG9uOm5vdChbZGlzYWJsZWRdKScpLFxuICAgICAgICBmaXJzdCAgICAgICA9IHRhYmJhYmxlc1swXSxcbiAgICAgICAgbGFzdCAgICAgICAgPSB0YWJiYWJsZXNbdGFiYmFibGVzLmxlbmd0aCAtIDFdO1xuXG4gICAgZnVuY3Rpb24gX2NoZWNrRm9jdXMoZXZlbnQpIHtcbiAgICAgIC8vIElmIGl0IGlzIFRBQlxuICAgICAgaWYgKGV2ZW50LndoaWNoID09PSA5ICYmIHRoaXMuaXNGdWxsc2NyZWVuKSB7XG4gICAgICAgIGlmIChldmVudC50YXJnZXQgPT09IGxhc3QgJiYgIWV2ZW50LnNoaWZ0S2V5KSB7XG4gICAgICAgICAgLy8gTW92ZSBmb2N1cyB0byBmaXJzdCBlbGVtZW50IHRoYXQgY2FuIGJlIHRhYmJlZCBpZiBTaGlmdCBpc24ndCB1c2VkXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBmaXJzdC5mb2N1cygpO1xuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LnRhcmdldCA9PT0gZmlyc3QgJiYgZXZlbnQuc2hpZnRLZXkpIHtcbiAgICAgICAgICAvLyBNb3ZlIGZvY3VzIHRvIGxhc3QgZWxlbWVudCB0aGF0IGNhbiBiZSB0YWJiZWQgaWYgU2hpZnQgaXMgdXNlZFxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbGFzdC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQmluZCB0aGUgaGFuZGxlclxuICAgIEV2ZW50Lm9uRXZlbnQodGhpcy5jb250YWluZXIsICdrZXlkb3duJywgX2NoZWNrRm9jdXMpO1xuICB9XG4gIF9zYXZlU2Nyb2xsUG9zaXRpb24oKSB7XG4gICAgc2Nyb2xsID0ge1xuICAgICAgICB4OiB3aW5kb3cucGFnZVhPZmZzZXQgfHwgMCxcbiAgICAgICAgeTogd2luZG93LnBhZ2VZT2Zmc2V0IHx8IDBcbiAgICB9O1xuICB9XG4gIF9yZXN0b3JlU2Nyb2xsUG9zaXRpb24oKSB7XG4gICAgd2luZG93LnNjcm9sbFRvKHNjcm9sbC54LCBzY3JvbGwueSk7XG4gIH1cbiAgX2NoZWNrTG9hZGluZyhldmVudCkge1xuICAgIGNvbnN0IGxvYWRpbmcgPSAoZXZlbnQudHlwZSA9PT0gJ3dhaXRpbmcnKTtcblxuICAgIC8vIENsZWFyIHRpbWVyXG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXJzLmxvYWRpbmcpO1xuXG4gICAgLy8gVGltZXIgdG8gcHJldmVudCBmbGlja2VyIHdoZW4gc2Vla2luZ1xuICAgIHRoaXMudGltZXJzLmxvYWRpbmcgPSBzZXRUaW1lb3V0KCgpPT57XG4gICAgICAvLyBUb2dnbGUgY29udGFpbmVyIGNsYXNzIGhvb2tcbiAgICAgICQudG9nZ2xlQ2xhc3ModGhpcy5jb250YWluZXIsIHRoaXMuY29uZmlnLmNsYXNzZXMubG9hZGluZywgbG9hZGluZyk7XG5cbiAgICAgIC8vIFNob3cgY29udHJvbHMgaWYgbG9hZGluZywgaGlkZSBpZiBkb25lXG4gICAgICAvLyB0aGlzLl90b2dnbGVDb250cm9scyhsb2FkaW5nKTtcbiAgICB9LCAobG9hZGluZyA/IDI1MCA6IDApKTtcbiAgfVxuICBfY2hlY2tQbGF5aW5nKCkge1xuICAgICQudG9nZ2xlQ2xhc3ModGhpcy5jb250YWluZXIsIHRoaXMuY29uZmlnLmNsYXNzZXMucGxheWluZywgIXRoaXMubWVkaWEucGF1c2VkKTtcblxuICAgICQudG9nZ2xlQ2xhc3ModGhpcy5jb250YWluZXIsIHRoaXMuY29uZmlnLmNsYXNzZXMuc3RvcHBlZCwgdGhpcy5tZWRpYS5wYXVzZWQpO1xuXG4gICAgLy8gJC50b2dnbGVDb250cm9scyh0aGlzLm1lZGlhLnBhdXNlZCk7XG4gIH1cbiAgX3RpbWVVcGRhdGUoZXZlbnQpIHtcbiAgICAvLyBEdXJhdGlvblxuICAgIHRoaXMuX3VwZGF0ZVRpbWVEaXNwbGF5KHRoaXMubWVkaWEuY3VycmVudFRpbWUsIHRoaXMuY3VycmVudFRpbWUpO1xuXG4gICAgLy8gSWdub3JlIHVwZGF0ZXMgd2hpbGUgc2Vla2luZ1xuICAgIGlmIChldmVudCAmJiBldmVudC50eXBlID09PSAndGltZXVwZGF0ZScgJiYgdGhpcy5tZWRpYS5zZWVraW5nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIFBsYXlpbmcgcHJvZ3Jlc3NcbiAgICB0aGlzLl91cGRhdGVQcm9ncmVzcyhldmVudCk7XG4gIH1cbiAgX3VwZGF0ZVByb2dyZXNzKGV2ZW50KXtcbiAgICBpZiAoIXRoaXMuc3VwcG9ydGVkLmZ1bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgcHJvZ3Jlc3MgICAgPSB0aGlzLnByb2dyZXNzLnBsYXllZCxcbiAgICAgICAgdmFsdWUgICAgICAgPSAwLFxuICAgICAgICBkdXJhdGlvbiAgICA9IHRoaXMuX2dldER1cmF0aW9uKCk7XG4gICAgaWYoZXZlbnQpe1xuICAgICAgc3dpdGNoKGV2ZW50LnR5cGUpe1xuICAgICAgICBjYXNlICd0aW1ldXBkYXRlJzpcbiAgICAgICAgY2FzZSAnc2Vla2luZyc6XG4gICAgICAgICAgaWYgKHRoaXMuY29udHJvbHMucHJlc3NlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhbHVlID0gdGhpcy5fZ2V0UGVyY2VudGFnZSh0aGlzLm1lZGlhLmN1cnJlbnRUaW1lLCBkdXJhdGlvbik7XG5cbiAgICAgICAgICAvLyBTZXQgc2VlayByYW5nZSB2YWx1ZSBvbmx5IGlmIGl0J3MgYSAnbmF0dXJhbCcgdGltZSBldmVudFxuICAgICAgICAgIGlmIChldmVudC50eXBlID09PSAndGltZXVwZGF0ZScgJiYgdGhpcy5idXR0b25zLnNlZWspIHtcbiAgICAgICAgICAgIHRoaXMuYnV0dG9ucy5zZWVrLnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7ICBcbiAgICAgICAgICAvLyBDaGVjayBidWZmZXIgc3RhdHVzXG4gICAgICAgIGNhc2UgJ3BsYXlpbmcnOlxuICAgICAgICBjYXNlICdwcm9ncmVzcyc6XG4gICAgICAgICAgcHJvZ3Jlc3MgICAgPSB0aGlzLnByb2dyZXNzLmJ1ZmZlcjtcbiAgICAgICAgICB2YWx1ZSA9ICgoKT0+IHtcbiAgICAgICAgICAgIHZhciBidWZmZXJlZCA9IHRoaXMubWVkaWEuYnVmZmVyZWQ7XG5cbiAgICAgICAgICAgIGlmIChidWZmZXJlZCAmJiBidWZmZXJlZC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgLy8gSFRNTDVcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2dldFBlcmNlbnRhZ2UoYnVmZmVyZWQuZW5kKDApLCBkdXJhdGlvbik7XG4gICAgICAgICAgICB9IFxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgfSkoKTtcbiAgICAgICAgICBfbG9nKCdldmVudC50eXBlJyxldmVudC50eXBlLHZhbHVlKVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLl9zZXRQcm9ncmVzcyhwcm9ncmVzcywgdmFsdWUpO1xuICB9XG4gIF9zZXRQcm9ncmVzcyhwcm9ncmVzcywgdmFsdWUpIHtcbiAgICBpZiAoIXRoaXMuc3VwcG9ydGVkLmZ1bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBEZWZhdWx0IHRvIDBcbiAgICBpZiAodXRpbHMuaXMudW5kZWZpbmVkKHZhbHVlKSkge1xuICAgICAgdmFsdWUgPSAwO1xuICAgIH1cbiAgICAvLyBEZWZhdWx0IHRvIGJ1ZmZlciBvciBiYWlsXG4gICAgaWYgKHV0aWxzLmlzLnVuZGVmaW5lZChwcm9ncmVzcykpIHtcbiAgICAgIGlmICh0aGlzLnByb2dyZXNzICYmIHRoaXMucHJvZ3Jlc3MuYnVmZmVyKSB7XG4gICAgICAgIHByb2dyZXNzID0gdGhpcy5wcm9ncmVzcy5idWZmZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gT25lIHByb2dyZXNzIGVsZW1lbnQgcGFzc2VkXG4gICAgaWYgKHV0aWxzLmlzLmh0bWxFbGVtZW50KHByb2dyZXNzKSkge1xuICAgICAgICBwcm9ncmVzcy52YWx1ZSA9IHZhbHVlO1xuICAgIH0gZWxzZSBpZiAocHJvZ3Jlc3MpIHtcbiAgICAgIC8vIE9iamVjdCBvZiBwcm9ncmVzcyArIHRleHQgZWxlbWVudFxuICAgICAgaWYgKHByb2dyZXNzLmJhcikge1xuICAgICAgICBwcm9ncmVzcy5iYXIudmFsdWUgPSB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChwcm9ncmVzcy50ZXh0KSB7XG4gICAgICAgIHByb2dyZXNzLnRleHQuaW5uZXJIVE1MID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIF9zZXRWb2x1bWUodm9sdW1lKXtcbiAgICBjb25zdCBtYXggPSB0aGlzLmNvbmZpZy52b2x1bWVNYXgsXG4gICAgICAgIG1pbiA9IHRoaXMuY29uZmlnLnZvbHVtZU1pbjtcblxuICAgIC8vIExvYWQgdm9sdW1lIGZyb20gc3RvcmFnZSBpZiBubyB2YWx1ZSBzcGVjaWZpZWRcbiAgICBpZiAodXRpbHMuaXMudW5kZWZpbmVkKHZvbHVtZSkpIHtcbiAgICAgIHZvbHVtZSA9IHRoaXMuc3RvcmFnZS52b2x1bWU7XG4gICAgfVxuXG4gICAgLy8gVXNlIGNvbmZpZyBpZiBhbGwgZWxzZSBmYWlsc1xuICAgIGlmICh2b2x1bWUgPT09IG51bGwgfHwgaXNOYU4odm9sdW1lKSkge1xuICAgICAgdm9sdW1lID0gdGhpcy5jb25maWcudm9sdW1lO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXMudW5kZWZpbmVkKHZvbHVtZSkpIHtcbiAgICAgIHZvbHVtZSA9IHRoaXMuc3RvcmFnZS52b2x1bWU7XG4gICAgfVxuICAgIC8vIE1heGltdW0gaXMgdm9sdW1lTWF4XG4gICAgaWYgKHZvbHVtZSA+IG1heCkge1xuICAgICAgdm9sdW1lID0gbWF4O1xuICAgIH1cbiAgICAvLyBNaW5pbXVtIGlzIHZvbHVtZU1pblxuICAgIGlmICh2b2x1bWUgPCBtaW4pIHtcbiAgICAgIHZvbHVtZSA9IG1pbjtcbiAgICB9XG4gICAgLy8gU2V0IHRoZSBwbGF5ZXIgdm9sdW1lXG4gICAgdGhpcy5tZWRpYS52b2x1bWUgPSBwYXJzZUZsb2F0KHZvbHVtZSAvIG1heCk7XG5cbiAgICAvLyBTZXQgdGhlIGRpc3BsYXlcbiAgICBpZiAodGhpcy52b2x1bWUuZGlzcGxheSkge1xuICAgICAgdGhpcy52b2x1bWUuZGlzcGxheS52YWx1ZSA9IHZvbHVtZTtcbiAgICB9XG4gICAgLy8gVG9nZ2xlIG11dGVkIHN0YXRlXG4gICAgaWYgKHZvbHVtZSA9PT0gMCkge1xuICAgICAgdGhpcy5tZWRpYS5tdXRlZCA9IHRydWU7XG4gICAgfSBlbHNlIGlmICh0aGlzLm1lZGlhLm11dGVkICYmIHZvbHVtZSA+IDApIHtcbiAgICAgIHRoaXMuX3RvZ2dsZU11dGUoKTtcbiAgICB9XG4gIH1cbiAgX3VwZGF0ZVZvbHVtZSgpIHtcbiAgICAvLyBHZXQgdGhlIGN1cnJlbnQgdm9sdW1lXG4gICAgdmFyIHZvbHVtZSA9IHRoaXMubWVkaWEubXV0ZWQgPyAwIDogKHRoaXMubWVkaWEudm9sdW1lICogdGhpcy5jb25maWcudm9sdW1lTWF4KTtcblxuICAgIC8vIFVwZGF0ZSB0aGUgPGlucHV0IHR5cGU9XCJyYW5nZVwiPiBpZiBwcmVzZW50XG4gICAgaWYgKHRoaXMuc3VwcG9ydGVkLmZ1bGwpIHtcbiAgICAgIGlmICh0aGlzLnZvbHVtZS5pbnB1dCkge1xuICAgICAgICB0aGlzLnZvbHVtZS5pbnB1dC52YWx1ZSA9IHZvbHVtZTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnZvbHVtZS5kaXNwbGF5KSB7XG4gICAgICAgIHRoaXMudm9sdW1lLmRpc3BsYXkudmFsdWUgPSB2b2x1bWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHRoZSB2b2x1bWUgaW4gc3RvcmFnZVxuICAgIHRoaXMuX3VwZGF0ZVN0b3JhZ2Uoe3ZvbHVtZTogdm9sdW1lfSk7XG5cbiAgICAvLyBUb2dnbGUgY2xhc3MgaWYgbXV0ZWRcbiAgICAkLnRvZ2dsZUNsYXNzKHRoaXMuY29udGFpbmVyLCB0aGlzLmNvbmZpZy5jbGFzc2VzLm11dGVkLCAodm9sdW1lID09PSAwKSk7XG5cbiAgICAvLyBVcGRhdGUgY2hlY2tib3ggZm9yIG11dGUgc3RhdGVcbiAgICBpZiAodGhpcy5zdXBwb3J0ZWQuZnVsbCAmJiB0aGlzLmJ1dHRvbnMubXV0ZSkge1xuICAgICAgdGhpcy5fdG9nZ2xlU3RhdGUodGhpcy5idXR0b25zLm11dGUsICh2b2x1bWUgPT09IDApKTtcbiAgICB9XG4gIH1cbiAgX3VwZGF0ZVN0b3JhZ2UodmFsdWUpIHtcbiAgICAvLyBCYWlsIGlmIHdlIGRvbid0IGhhdmUgbG9jYWxTdG9yYWdlIHN1cHBvcnQgb3IgaXQncyBkaXNhYmxlZFxuICAgIGlmICghdXRpbHMuc3RvcmFnZVN1cHBvcnQgfHwgIXRoaXMuY29uZmlnLnN0b3JhZ2UuZW5hYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHRoZSB3b3JraW5nIGNvcHkgb2YgdGhlIHZhbHVlc1xuICAgIHV0aWxzLmV4dGVuZCh0aGlzLnN0b3JhZ2UsIHZhbHVlKTtcblxuICAgIC8vIFVwZGF0ZSBzdG9yYWdlXG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuY29uZmlnLnN0b3JhZ2Uua2V5LCBKU09OLnN0cmluZ2lmeSh0aGlzLnN0b3JhZ2UpKTtcbiAgfVxuICBfdG9nZ2xlU3RhdGUodGFyZ2V0LCBzdGF0ZSkge1xuICAgIC8vIEJhaWwgaWYgbm8gdGFyZ2V0XG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBHZXQgc3RhdGVcbiAgICBzdGF0ZSA9ICh1dGlscy5pcy5ib29sZWFuKHN0YXRlKSA/IHN0YXRlIDogIXRhcmdldC5nZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcpKTtcblxuICAgIC8vIFNldCB0aGUgYXR0cmlidXRlIG9uIHRhcmdldFxuICAgIHRhcmdldC5zZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcsIHN0YXRlKTtcbiAgICByZXR1cm4gc3RhdGU7XG4gIH1cbiAgX3RvZ2dsZU11dGUobXV0ZWQpe1xuICAgIGlmICghdXRpbHMuaXMuYm9vbGVhbihtdXRlZCkpIHtcbiAgICAgIG11dGVkID0gIXRoaXMubWVkaWEubXV0ZWQ7XG4gICAgfVxuXG4gICAgLy8gU2V0IGJ1dHRvbiBzdGF0ZVxuICAgIHRoaXMuX3RvZ2dsZVN0YXRlKHRoaXMuYnV0dG9ucy5tdXRlLCBtdXRlZCk7XG5cbiAgICAvLyBTZXQgbXV0ZSBvbiB0aGUgcGxheWVyXG4gICAgdGhpcy5tZWRpYS5tdXRlZCA9IG11dGVkO1xuXG4gICAgLy8gSWYgdm9sdW1lIGlzIDAgYWZ0ZXIgdW5tdXRpbmcsIHNldCB0byBkZWZhdWx0XG4gICAgaWYgKHRoaXMubWVkaWEudm9sdW1lID09PSAwKSB7XG4gICAgICB0aGlzLl9zZXRWb2x1bWUodGhpcy5jb25maWcudm9sdW1lKTtcbiAgICB9XG5cbiAgfVxuICBfZGlzcGxheUR1cmF0aW9uKCkge1xuICAgIGlmICghdGhpcy5zdXBwb3J0ZWQuZnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIERldGVybWluZSBkdXJhdGlvblxuICAgIHZhciBkdXJhdGlvbiA9IHRoaXMuX2dldER1cmF0aW9uKCkgfHwgMDtcblxuICAgIC8vIElmIHRoZXJlJ3Mgb25seSBvbmUgdGltZSBkaXNwbGF5LCBkaXNwbGF5IGR1cmF0aW9uIHRoZXJlXG4gICAgaWYgKCF0aGlzLmR1cmF0aW9uICYmIHRoaXMuY29uZmlnLmRpc3BsYXlEdXJhdGlvbiAmJiB0aGlzLm1lZGlhLnBhdXNlZCkge1xuICAgICAgdGhpcy5fdXBkYXRlVGltZURpc3BsYXkoZHVyYXRpb24sIHRoaXMuY3VycmVudFRpbWUpO1xuICAgIH1cblxuICAgIC8vIElmIHRoZXJlJ3MgYSBkdXJhdGlvbiBlbGVtZW50LCB1cGRhdGUgY29udGVudFxuICAgIGlmICh0aGlzLmR1cmF0aW9uKSB7XG4gICAgICB0aGlzLl91cGRhdGVUaW1lRGlzcGxheShkdXJhdGlvbiwgdGhpcy5kdXJhdGlvbik7XG4gICAgfVxuXG4gIH1cbiAgX3VwZGF0ZVRpbWVEaXNwbGF5KHRpbWUsIGVsZW1lbnQpIHtcbiAgICAvLyBCYWlsIGlmIHRoZXJlJ3Mgbm8gZHVyYXRpb24gZGlzcGxheVxuICAgIGlmICghZWxlbWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gRmFsbGJhY2sgdG8gMFxuICAgIGlmIChpc05hTih0aW1lKSkge1xuICAgICAgICB0aW1lID0gMDtcbiAgICB9XG5cbiAgICB0aGlzLnNlY3MgPSBwYXJzZUludCh0aW1lICUgNjApO1xuICAgIHRoaXMubWlucyA9IHBhcnNlSW50KCh0aW1lIC8gNjApICUgNjApO1xuICAgIHRoaXMuaG91cnMgPSBwYXJzZUludCgoKHRpbWUgLyA2MCkgLyA2MCkgJSA2MCk7XG5cbiAgICAvLyBEbyB3ZSBuZWVkIHRvIGRpc3BsYXkgaG91cnM/XG4gICAgdmFyIGRpc3BsYXlIb3VycyA9IChwYXJzZUludCgoKHRoaXMuX2dldER1cmF0aW9uKCkgLyA2MCkgLyA2MCkgJSA2MCkgPiAwKTtcblxuICAgIC8vIEVuc3VyZSBpdCdzIHR3byBkaWdpdHMuIEZvciBleGFtcGxlLCAwMyByYXRoZXIgdGhhbiAzLlxuICAgIHRoaXMuc2VjcyA9ICgnMCcgKyB0aGlzLnNlY3MpLnNsaWNlKC0yKTtcbiAgICB0aGlzLm1pbnMgPSAoJzAnICsgdGhpcy5taW5zKS5zbGljZSgtMik7XG5cbiAgICAvLyBSZW5kZXJcbiAgICBlbGVtZW50LmlubmVySFRNTCA9IChkaXNwbGF5SG91cnMgPyB0aGlzLmhvdXJzICsgJzonIDogJycpICsgdGhpcy5taW5zICsgJzonICsgdGhpcy5zZWNzO1xuICB9XG4gIF9pbmplY3RDb250cm9scyhwbGF5ZXIsY29uZmlnKXtcbiAgICBsZXQgaHRtbCA9IGNvbmZpZy5odG1sO1xuXG4gICAgLy8gSW5zZXJ0IGN1c3RvbSB2aWRlbyBjb250cm9sc1xuICAgIF9sb2coJ0luamVjdGluZyBjdXN0b20gY29udHJvbHMnKTtcbiAgICAvLyBJZiBubyBjb250cm9scyBhcmUgc3BlY2lmaWVkLCBjcmVhdGUgZGVmYXVsdFxuICAgIGlmICghaHRtbCkge1xuICAgICAgaHRtbCA9IHRoaXMuX2J1aWxkQ29udHJvbHMoY29uZmlnKTtcbiAgICB9XG4gICAgY29uc3QgcmFuZG9tID1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoMTAwMDAwMCkpO1xuICAgIHBsYXllci5jb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsIGB2cGx5ciR7cmFuZG9tfWApO1xuICAgIGh0bWwgPSB1dGlscy5yZXBsYWNlQWxsKGh0bWwsICd7aWR9JywgcmFuZG9tKTtcbiAgICBsZXQgdGFyZ2V0O1xuICAgIGlmICh1dGlscy5pcy5zdHJpbmcoY29uZmlnLnNlbGVjdG9ycy5jb250cm9scy5jb250YWluZXIpKSB7XG4gICAgICB0YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zZWxlY3RvcnMuY29udHJvbHMuY29udGFpbmVyKTtcbiAgICB9XG4gICAgLy8gSW5qZWN0IGludG8gdGhlIGNvbnRhaW5lciBieSBkZWZhdWx0XG4gICAgaWYgKCF1dGlscy5pcy5odG1sRWxlbWVudCh0YXJnZXQpKSB7XG4gICAgICB0YXJnZXQgPSBwbGF5ZXIuY29udGFpbmVyXG4gICAgfVxuICAgIHRhcmdldC5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGh0bWwpO1xuICB9XG4gIF9maW5kRWxlbWVudHMocGxheWVyLGNvbmZpZyl7XG4gICAgY29uc3QgX2dldEVsZW1lbnRzID0gKHNlbGVjdG9yKT0+IHtcbiAgICAgIHJldHVybiBwbGF5ZXIuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIH1cbiAgICBjb25zdCBfZ2V0RWxlbWVudD0oc2VsZWN0b3IpPT4ge1xuICAgICAgcmV0dXJuIF9nZXRFbGVtZW50cyhzZWxlY3RvcilbMF07XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBwbGF5ZXIuY29udHJvbHMgICAgICAgICAgICAgICAgID0gX2dldEVsZW1lbnQoY29uZmlnLnNlbGVjdG9ycy5jb250cm9scy53cmFwcGVyKTtcblxuICAgICAgLy8gQnV0dG9uc1xuICAgICAgcGxheWVyLmJ1dHRvbnMgPSB7fTtcbiAgICAgIHBsYXllci5idXR0b25zLnNlZWsgICAgICAgICAgICAgPSBfZ2V0RWxlbWVudChjb25maWcuc2VsZWN0b3JzLmJ1dHRvbnMuc2Vlayk7XG4gICAgICBwbGF5ZXIuYnV0dG9ucy5wbGF5ICAgICAgICAgICAgID0gX2dldEVsZW1lbnRzKGNvbmZpZy5zZWxlY3RvcnMuYnV0dG9ucy5wbGF5KTtcbiAgICAgIHBsYXllci5idXR0b25zLnBhdXNlICAgICAgICAgICAgPSBfZ2V0RWxlbWVudChjb25maWcuc2VsZWN0b3JzLmJ1dHRvbnMucGF1c2UpO1xuICAgICAgcGxheWVyLmJ1dHRvbnMuZnVsbHNjcmVlbiAgICAgICA9IF9nZXRFbGVtZW50KGNvbmZpZy5zZWxlY3RvcnMuYnV0dG9ucy5mdWxsc2NyZWVuKTtcblxuICAgICAgLy8gSW5wdXRzXG4gICAgICBwbGF5ZXIuYnV0dG9ucy5tdXRlICAgICAgICAgICAgID0gX2dldEVsZW1lbnQoY29uZmlnLnNlbGVjdG9ycy5idXR0b25zLm11dGUpO1xuXG4gICAgICAvLyBQcm9ncmVzc1xuICAgICAgcGxheWVyLnByb2dyZXNzID0ge307XG4gICAgICBwbGF5ZXIucHJvZ3Jlc3MuY29udGFpbmVyICAgICAgID0gX2dldEVsZW1lbnQoY29uZmlnLnNlbGVjdG9ycy5wcm9ncmVzcy5jb250YWluZXIpO1xuXG4gICAgICAvLyBQcm9ncmVzcyAtIEJ1ZmZlcmluZ1xuICAgICAgcGxheWVyLnByb2dyZXNzLmJ1ZmZlciAgICAgICAgICA9IHt9O1xuICAgICAgcGxheWVyLnByb2dyZXNzLmJ1ZmZlci5iYXIgICAgICA9IF9nZXRFbGVtZW50KGNvbmZpZy5zZWxlY3RvcnMucHJvZ3Jlc3MuYnVmZmVyKTtcbiAgICAgIHBsYXllci5wcm9ncmVzcy5idWZmZXIudGV4dCAgICAgPSBwbGF5ZXIucHJvZ3Jlc3MuYnVmZmVyLmJhciAmJiBwbGF5ZXIucHJvZ3Jlc3MuYnVmZmVyLmJhci5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc3BhbicpWzBdO1xuXG4gICAgICAvLyBQcm9ncmVzcyAtIFBsYXllZFxuICAgICAgcGxheWVyLnByb2dyZXNzLnBsYXllZCAgICAgICAgICA9IF9nZXRFbGVtZW50KGNvbmZpZy5zZWxlY3RvcnMucHJvZ3Jlc3MucGxheWVkKTtcblxuICAgICAgLy8gVm9sdW1lXG4gICAgICBwbGF5ZXIudm9sdW1lICAgICAgICAgICAgICAgICAgID0ge307XG4gICAgICBwbGF5ZXIudm9sdW1lLmlucHV0ICAgICAgICAgICAgID0gX2dldEVsZW1lbnQoY29uZmlnLnNlbGVjdG9ycy52b2x1bWUuaW5wdXQpO1xuICAgICAgcGxheWVyLnZvbHVtZS5kaXNwbGF5ICAgICAgICAgICA9IF9nZXRFbGVtZW50KGNvbmZpZy5zZWxlY3RvcnMudm9sdW1lLmRpc3BsYXkpO1xuXG4gICAgICAvLyBUaW1pbmdcbiAgICAgIHBsYXllci5kdXJhdGlvbiAgICAgICAgICAgICAgICAgPSBfZ2V0RWxlbWVudChjb25maWcuc2VsZWN0b3JzLmR1cmF0aW9uKTtcbiAgICAgIHBsYXllci5jdXJyZW50VGltZSAgICAgICAgICAgICAgPSBfZ2V0RWxlbWVudChjb25maWcuc2VsZWN0b3JzLmN1cnJlbnRUaW1lKTtcbiAgICAgIHBsYXllci5zZWVrVGltZSAgICAgICAgICAgICAgICAgPSBfZ2V0RWxlbWVudHMoY29uZmlnLnNlbGVjdG9ycy5zZWVrVGltZSk7XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaChlKSB7XG4gICAgICBfd2FybignSXQgbG9va3MgbGlrZSB0aGVyZSBpcyBhIHByb2JsZW0gd2l0aCB5b3VyIGNvbnRyb2xzIEhUTUwnKTtcbiAgICAgIC8vIFJlc3RvcmUgbmF0aXZlIHZpZGVvIGNvbnRyb2xzXG4gICAgICB0aGlzLl90b2dnbGVOYXRpdmVDb250cm9scyh0cnVlKTtcblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBfYnVpbGRDb250cm9scyhjb25maWcpe1xuICAgIGNvbnN0IGh0bWwgPSBbJzxkaXYgY2xhc3M9XCJ2cGx5ci12aWRlby1sb2FkZXItY29udGFpbmVyXCI+JyxcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cInZwbHlyLXZpZGVvLWxvYWRlclwiPicsXG4gICAgICAgICAgJzxkaXYgY2xhc3M9XCJsb2FkZXItaW5uZXIgb25lXCI+PC9kaXY+JyxcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cImxvYWRlci1pbm5lciB0d29cIj48L2Rpdj4nLFxuICAgICAgICAgICc8ZGl2IGNsYXNzPVwibG9hZGVyLWlubmVyIHRocmVlXCI+PC9kaXY+JyxcbiAgICAgICAgICAnPC9kaXY+JyxcbiAgICAgICAgICAnPC9kaXY+PGRpdiBjbGFzcz1cInZwbHlyLWdyYWRpZW50LWJvdHRvbVwiPjwvZGl2PiddO1xuICAgIGh0bWwucHVzaCgnPGRpdiBjbGFzcz1cInZwbHlyLWJvdHRvbS1jb250YWluZXJcIj4nKVxuICAgIGlmICh1dGlscy5pbkFycmF5KGNvbmZpZy5jb250cm9scywgJ3Byb2dyZXNzJykpIHtcbiAgICAgIGh0bWwucHVzaChcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cInZwbHlyLXByb2dyZXNzLWJhci1jb250YWluZXJcIj4nLFxuICAgICAgICAgICc8aW5wdXQgaWQ9XCJzZWVre2lkfVwiIHR5cGU9XCJyYW5nZVwiIG1pbj1cIjBcIiBtYXg9XCIxMDBcIiB2YWx1ZT1cIjBcIiBzdGVwPVwiMC4xXCIgY2xhc3M9XCJ2cGx5ci1wcm9ncmVzcy1iYXJcIiBkYXRhLXZpZGVvPVwic2Vla1wiLz4nLFxuICAgICAgICAgICc8cHJvZ3Jlc3MgY2xhc3M9XCJ2cGx5ci1wcm9ncmVzcy1wbGF5ZWRcIiBtYXg9XCIxMDBcIiByb2xlPVwicHJlc2VudGF0aW9uXCI+PC9wcm9ncmVzcz4nLFxuICAgICAgICAgICc8cHJvZ3Jlc3MgY2xhc3M9XCJ2cGx5ci1wcm9ncmVzcy1idWZmZXJcIiBtYXg9XCIxMDBcIiB2YWx1ZT1cIjEwMFwiPicsXG4gICAgICAgICAgJzxzcGFuPjEwMC4wMDwvc3Bhbj4lIGJ1ZmZlcmVkJyxcbiAgICAgICAgICAnPC9wcm9ncmVzcz4nLFxuICAgICAgICAgICc8L2Rpdj4nXG4gICAgICApO1xuICAgIH1cbiAgICBodG1sLnB1c2goJzxkaXYgY2xhc3M9XCJ2cGx5ci1jb250cm9sc1wiPicpXG4gICAgaHRtbC5wdXNoKCc8ZGl2IGNsYXNzPVwibGVmdC1jb250cm9sc1wiPicpXG4gICAgaWYgKHV0aWxzLmluQXJyYXkoY29uZmlnLmNvbnRyb2xzLCAncGxheScpKSB7XG4gICAgICBodG1sLnB1c2goXG4gICAgICAgICc8ZGl2IGNsYXNzPVwiYnRuLWNvbnRyb2xzXCI+JyxcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cImJ0bi13cmFwXCI+JyxcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cInBsYXlcIiBkYXRhLXZpZGVvPVwicGxheVwiPjwvZGl2PicsXG4gICAgICAgICAgJzxkaXYgY2xhc3M9XCJwYXVzZVwiIGRhdGEtdmlkZW89XCJwYXVzZVwiPjwvZGl2PicsXG4gICAgICAgICAgJzwvZGl2PicsXG4gICAgICAgICAgJzwvZGl2PidcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pbkFycmF5KGNvbmZpZy5jb250cm9scywgJ3RpbWUnKSkge1xuICAgICAgaHRtbC5wdXNoKFxuICAgICAgICAnPGRpdiBjbGFzcz1cInRpbWUtbW9kLWNvbnRyb2xzXCI+JyxcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cImNvbnRyb2wtY3VycmVudHRpbWVcIj4wMDowMDwvZGl2PicsXG4gICAgICAgICAgJzxkaXYgY2xhc3M9XCJjb250cm9sLXNlcGFyYXRvclwiPi88L2Rpdj4nLFxuICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29udHJvbC1kdXJhdGlvblwiPjAwOjAwPC9kaXY+JyxcbiAgICAgICAgICAnPC9kaXY+J1xuICAgICAgKTtcbiAgICB9XG4gICAgaHRtbC5wdXNoKCc8L2Rpdj4nKS8vY2xvc2UgdnBseXIgbGVmdCBjb250cm9sc1xuICAgIGh0bWwucHVzaCgnPGRpdiBjbGFzcz1cInJpZ2h0LWNvbnRyb2xzXCI+JylcbiAgICBpZiAodXRpbHMuaW5BcnJheShjb25maWcuY29udHJvbHMsICdmdWxsc2NyZWVuJykpIHtcbiAgICAgIGh0bWwucHVzaChcbiAgICAgICAgJzxkaXYgY2xhc3M9XCJmdWxsc2NyZWVuLWNvbnRyb2xzXCIgZGF0YS12aWRlbz1cImZ1bGxzY3JlZW5cIj4nLFxuICAgICAgICAgICc8c3ZnIGNsYXNzPVwiaWNvbi1leGl0LWZ1bGxzY3JlZW5cIj4nLFxuICAgICAgICAgICc8dXNlIHhsaW5rOmhyZWY9XCIjdnBseXItZXhpdC1mdWxsc2NyZWVuXCI+PC91c2U+JyxcbiAgICAgICAgICAnPC9zdmc+JyxcbiAgICAgICAgICAnPHN2ZyBjbGFzcz1cImljb24tZW50ZXItZnVsbHNjcmVlblwiPicsXG4gICAgICAgICAgJyA8dXNlIHhsaW5rOmhyZWY9XCIjdnBseXItZW50ZXItZnVsbHNjcmVlblwiPjwvdXNlPicsXG4gICAgICAgICAgJzwvc3ZnPicsXG4gICAgICAgICAgJzwvZGl2PidcbiAgICAgICk7XG4gICAgfVxuICAgIGh0bWwucHVzaCgnPGRpdiBjbGFzcz1cInZvbHVtZS1jb250cm9sc1wiPicpXG4gICAgaWYgKHV0aWxzLmluQXJyYXkoY29uZmlnLmNvbnRyb2xzLCAnbXV0ZScpKSB7XG4gICAgICBodG1sLnB1c2goXG4gICAgICAgICc8ZGl2IGNsYXNzPVwidnBseXItdm9sdW1lXCIgZGF0YS12aWRlbz1cIm11dGVcIj4nLFxuICAgICAgICAgICc8c3ZnIGNsYXNzPVwiaWNvbi1tdXRlZFwiPicsXG4gICAgICAgICAgJzx1c2UgeGxpbms6aHJlZj1cIiN2cGx5ci1tdXRlZFwiPjwvdXNlPicsXG4gICAgICAgICAgJzwvc3ZnPicsXG4gICAgICAgICAgJzxzdmcgY2xhc3M9XCJpY29uLXZvbHVtZVwiPicsXG4gICAgICAgICAgJzx1c2UgeGxpbms6aHJlZj1cIiN2cGx5ci12b2x1bWVcIj48L3VzZT4nLFxuICAgICAgICAgICc8L3N2Zz4nLFxuICAgICAgICAgICc8L2Rpdj4nXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaW5BcnJheShjb25maWcuY29udHJvbHMsICd2b2x1bWUnKSkge1xuICAgICAgaHRtbC5wdXNoKFxuICAgICAgICAnPGRpdiBjbGFzcz1cInZwbHlyLXZvbHVtZS1wcm9ncmVzc1wiPicsXG4gICAgICAgICAgJzxpbnB1dCB0eXBlPVwicmFuZ2VcIiBpZD1cInZvbHVtZXtpZH1cIiAgY2xhc3M9XCJ2cGx5ci12b2x1bWUtaW5wdXRcIiAgbWluPVwiMFwiICBtYXg9XCIxMFwiIGRhdGEtdmlkZW89XCJ2b2x1bWVcIiB2YWx1ZT1cIjhcIj4nLFxuICAgICAgICAgICc8cHJvZ3Jlc3MgY2xhc3M9XCJ2cGx5ci12b2x1bWUtZGlzcGxheVwiIG1heD1cIjEwXCIgcm9sZT1cInByZXNlbnRhdGlvblwiPjwvcHJvZ3Jlc3M+JyxcbiAgICAgICAgICAnPC9kaXY+J1xuICAgICAgKTtcbiAgICB9XG4gICAgaHRtbC5wdXNoKCc8L2Rpdj4nKS8vY2xvc2UgdnBseXIgdm9sdW1lIGNvbnRyb2xzXG4gICAgXG4gICAgaHRtbC5wdXNoKCc8L2Rpdj4nKS8vY2xvc2UgdnBseXIgcmlnaHQgY29udHJvbHNcbiAgICBcbiAgICBodG1sLnB1c2goJzwvZGl2PicpLy9jbG9zZSB2cGx5ciBjb250cm9sc1xuICAgIGh0bWwucHVzaCgnPC9kaXY+JykvL2Nsb3NlXG4gICAgcmV0dXJuIGh0bWwuam9pbignJyk7XG4gIH1cbiAgX3NldHVwTWVkaWEocGxheWVyLGNvbmZpZyl7XG4gICAgaWYgKCFwbGF5ZXIubWVkaWEpIHtcbiAgICAgIF93YXJuKCdObyBtZWRpYSBlbGVtZW50IGZvdW5kIScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZihwbGF5ZXIuc3VwcG9ydGVkLmZ1bGwpe1xuICAgICAgJC50b2dnbGVDbGFzcyhwbGF5ZXIuY29udGFpbmVyLCBjb25maWcuY2xhc3Nlcy50eXBlLnJlcGxhY2UoJ3swfScsIHBsYXllci50eXBlKSwgdHJ1ZSk7XG4gICAgICAkLnRvZ2dsZUNsYXNzKHBsYXllci5jb250YWluZXIsIGNvbmZpZy5jbGFzc2VzLnN0b3BwZWQsIGNvbmZpZy5hdXRvcGxheSk7XG4gICAgICAvLyBBZGQgaU9TIGNsYXNzXG4gICAgICAkLnRvZ2dsZUNsYXNzKHBsYXllci5jb250YWluZXIsIGNvbmZpZy5jbGFzc2VzLmlzSW9zLCBwbGF5ZXIuYnJvd3Nlci5pc0lvcyk7XG4gICAgICAvLyBBZGQgY2hyb21lIGNsYXNzXG4gICAgICAkLnRvZ2dsZUNsYXNzKHBsYXllci5jb250YWluZXIsIGNvbmZpZy5jbGFzc2VzLmlzQ2hyb21lLCBwbGF5ZXIuYnJvd3Nlci5pc0Nocm9tZSk7XG5cbiAgICAgIC8vIEFkZCB0b3VjaCBjbGFzc1xuICAgICAgJC50b2dnbGVDbGFzcyhwbGF5ZXIuY29udGFpbmVyLCBjb25maWcuY2xhc3Nlcy5pc1RvdWNoLCBwbGF5ZXIuYnJvd3Nlci5pc1RvdWNoKTtcblxuICAgICAgLy8gQWRkIHdlY2hhdCBjbGFzc1xuICAgICAgJC50b2dnbGVDbGFzcyhwbGF5ZXIuY29udGFpbmVyLCBjb25maWcuY2xhc3Nlcy5pc1dlY2hhdCwgcGxheWVyLmJyb3dzZXIuaXNXZWNoYXQpO1xuICAgICAgaWYocGxheWVyLnR5cGUgPT09ICd2aWRlbycpe1xuICAgICAgICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHdyYXBwZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsIGNvbmZpZy5jbGFzc2VzLnZpZGVvV3JhcHBlcik7XG4gICAgICAgIHRoaXMuX3dyYXAocGxheWVyLm1lZGlhLCB3cmFwcGVyKTtcbiAgICAgICAgLy8gQ2FjaGUgdGhlIGNvbnRhaW5lclxuICAgICAgICBwbGF5ZXIudmlkZW9Db250YWluZXIgPSB3cmFwcGVyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBfdG9nZ2xlTmF0aXZlQ29udHJvbHModG9nZ2xlKSB7XG4gICAgaWYgKHRvZ2dsZSAmJiB1dGlscy5pbkFycmF5KHRoaXMuY29uZmlnLnR5cGVzLmh0bWw1LCB0aGlzLnR5cGUpKSB7XG4gICAgICB0aGlzLm1lZGlhLnNldEF0dHJpYnV0ZSgnY29udHJvbHMnLCAnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubWVkaWEucmVtb3ZlQXR0cmlidXRlKCdjb250cm9scycpO1xuICAgIH1cbiAgfVxuICBfd3JhcChlbGVtZW50cywgd3JhcHBlcikge1xuICAgIC8vIENvbnZlcnQgYGVsZW1lbnRzYCB0byBhbiBhcnJheSwgaWYgbmVjZXNzYXJ5LlxuICAgIGlmICghZWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgIGVsZW1lbnRzID0gW2VsZW1lbnRzXTtcbiAgICB9XG5cbiAgICAvLyBMb29wcyBiYWNrd2FyZHMgdG8gcHJldmVudCBoYXZpbmcgdG8gY2xvbmUgdGhlIHdyYXBwZXIgb24gdGhlXG4gICAgLy8gZmlyc3QgZWxlbWVudCAoc2VlIGBjaGlsZGAgYmVsb3cpLlxuICAgIGZvciAodmFyIGkgPSBlbGVtZW50cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgdmFyIGNoaWxkICAgPSAoaSA+IDApID8gd3JhcHBlci5jbG9uZU5vZGUodHJ1ZSkgOiB3cmFwcGVyO1xuICAgICAgdmFyIGVsZW1lbnQgPSBlbGVtZW50c1tpXTtcblxuICAgICAgLy8gQ2FjaGUgdGhlIGN1cnJlbnQgcGFyZW50IGFuZCBzaWJsaW5nLlxuICAgICAgdmFyIHBhcmVudCAgPSBlbGVtZW50LnBhcmVudE5vZGU7XG4gICAgICB2YXIgc2libGluZyA9IGVsZW1lbnQubmV4dFNpYmxpbmc7XG5cbiAgICAgIC8vIFdyYXAgdGhlIGVsZW1lbnQgKGlzIGF1dG9tYXRpY2FsbHkgcmVtb3ZlZCBmcm9tIGl0cyBjdXJyZW50XG4gICAgICAvLyBwYXJlbnQpLlxuICAgICAgY2hpbGQuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG5cbiAgICAgIC8vIElmIHRoZSBlbGVtZW50IGhhZCBhIHNpYmxpbmcsIGluc2VydCB0aGUgd3JhcHBlciBiZWZvcmVcbiAgICAgIC8vIHRoZSBzaWJsaW5nIHRvIG1haW50YWluIHRoZSBIVE1MIHN0cnVjdHVyZTsgb3RoZXJ3aXNlLCBqdXN0XG4gICAgICAvLyBhcHBlbmQgaXQgdG8gdGhlIHBhcmVudC5cbiAgICAgIGlmIChzaWJsaW5nKSB7XG4gICAgICAgICAgcGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCwgc2libGluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhcmVudC5hcHBlbmRDaGlsZChjaGlsZCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY2hpbGQ7XG4gICAgfVxuICB9XG4gIF90b2dnbGVTdHlsZUhvb2socGxheWVyLGNvbmZpZykge1xuICAgICQudG9nZ2xlQ2xhc3MocGxheWVyLmNvbnRhaW5lciwgY29uZmlnLnNlbGVjdG9ycy5jb250YWluZXIucmVwbGFjZSgnLicsICcnKSwgcGxheWVyLnN1cHBvcnRlZC5mdWxsKTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgUGxheWVyOyIsImNsYXNzIFV0aWxzIHtcbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLmJyb3dzZXJTbmlmZj10aGlzLl9icm93c2VyU25pZmYuYmluZCh0aGlzKSgpO1xuICAgIHRoaXMuaXMgPSB0aGlzLl9pcy5iaW5kKHRoaXMpKCk7XG4gICAgdGhpcy5zdG9yYWdlU3VwcG9ydCA9IHRoaXMuX3N0b3JhZ2VTdXBwb3J0LmJpbmQodGhpcykoKTtcbiAgICB0aGlzLmV4dGVuZCAgPSB0aGlzLl9leHRlbmQuYmluZCh0aGlzKTtcbiAgICB0aGlzLm1hdGNoZXMgID0gdGhpcy5fbWF0Y2hlcy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaW5BcnJheSA9IHRoaXMuX2luQXJyYXkuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN1cHBvcnRlZCA9IHRoaXMuX3N1cHBvcnQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlcGxhY2VBbGwgPSB0aGlzLl9yZXBsYWNlQWxsLmJpbmQodGhpcyk7XG4gICAgXG4gIH1cbiAgX3JlcGxhY2VBbGwoc3RyaW5nLCBmaW5kLCByZXBsYWNlKSB7XG4gICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKG5ldyBSZWdFeHAoZmluZC5yZXBsYWNlKC8oWy4qKz9cXF49IToke30oKXxcXFtcXF1cXC9cXFxcXSkvZywgJ1xcXFwkMScpLCAnZycpLCByZXBsYWNlKTtcbiAgfVxuICBfc3VwcG9ydCh0eXBlKXtcbiAgICBjb25zdCBicm93c2VyICAgICA9IHRoaXMuX2Jyb3dzZXJTbmlmZigpLFxuICAgICAgICBpc09sZElFICAgICA9IChicm93c2VyLmlzSUUgJiYgYnJvd3Nlci52ZXJzaW9uIDw9IDkpLFxuICAgICAgICBpc0lvcyAgICAgICA9IGJyb3dzZXIuaXNJb3MsXG4gICAgICAgIGlzSXBob25lICAgID0gYnJvd3Nlci5pc0lwaG9uZSxcbiAgICAgICAgYXVkaW9TdXBwb3J0ID0gISFkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhdWRpbycpLmNhblBsYXlUeXBlLFxuICAgICAgICB2aWRlb1N1cHBvcnQgPSAhIWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJykuY2FuUGxheVR5cGU7XG4gICAgbGV0IGJhc2ljICAgICAgID0gZmFsc2UsXG4gICAgICAgIGZ1bGwgICAgICAgID0gZmFsc2U7XG5cbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAndmlkZW8nOlxuICAgICAgICAgICAgYmFzaWMgPSB2aWRlb1N1cHBvcnQ7XG4gICAgICAgICAgICBmdWxsICA9IChiYXNpYyAmJiAoIWlzT2xkSUUgJiYgIWlzSXBob25lKSk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdhdWRpbyc6XG4gICAgICAgICAgICBiYXNpYyA9IGF1ZGlvU3VwcG9ydDtcbiAgICAgICAgICAgIGZ1bGwgID0gKGJhc2ljICYmICFpc09sZElFKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBiYXNpYyA9IChhdWRpb1N1cHBvcnQgJiYgdmlkZW9TdXBwb3J0KTtcbiAgICAgICAgICAgIGZ1bGwgID0gKGJhc2ljICYmICFpc09sZElFKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBiYXNpYzogIGJhc2ljLFxuICAgICAgICBmdWxsOiAgIGZ1bGxcbiAgICB9O1xuICB9XG4gIF9pbkFycmF5KGhheXN0YWNrLCBuZWVkbGUpIHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YgJiYgKGhheXN0YWNrLmluZGV4T2YobmVlZGxlKSAhPT0gLTEpO1xuICB9XG5cbiAgX21hdGNoZXMoZWxlbWVudCwgc2VsZWN0b3IpIHtcbiAgICB2YXIgcCA9IEVsZW1lbnQucHJvdG90eXBlO1xuXG4gICAgdmFyIGYgPSBwLm1hdGNoZXMgfHwgcC53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHwgcC5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgcC5tc01hdGNoZXNTZWxlY3RvciB8fCBmdW5jdGlvbihzKSB7XG4gICAgICAgIHJldHVybiBbXS5pbmRleE9mLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzKSwgdGhpcykgIT09IC0xO1xuICAgIH07XG5cbiAgICByZXR1cm4gZi5jYWxsKGVsZW1lbnQsIHNlbGVjdG9yKTtcbiAgfVxuICBfZXh0ZW5kKCkge1xuICAgIC8vIEdldCBhcmd1bWVudHNcbiAgICBsZXQgb2JqZWN0cyA9IGFyZ3VtZW50cztcblxuICAgIC8vIEJhaWwgaWYgbm90aGluZyB0byBtZXJnZVxuICAgIGlmICghb2JqZWN0cy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFJldHVybiBmaXJzdCBpZiBzcGVjaWZpZWQgYnV0IG5vdGhpbmcgdG8gbWVyZ2VcbiAgICBpZiAob2JqZWN0cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdHNbMF07XG4gICAgfVxuXG4gICAgLy8gRmlyc3Qgb2JqZWN0IGlzIHRoZSBkZXN0aW5hdGlvblxuICAgIGxldCBkZXN0aW5hdGlvbiA9IEFycmF5LnByb3RvdHlwZS5zaGlmdC5jYWxsKG9iamVjdHMpLFxuICAgICAgICBsZW5ndGggICAgICA9IG9iamVjdHMubGVuZ3RoO1xuXG4gICAgLy8gTG9vcCB0aHJvdWdoIGFsbCBvYmplY3RzIHRvIG1lcmdlXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgc291cmNlID0gb2JqZWN0c1tpXTtcblxuICAgICAgZm9yIChsZXQgcHJvcGVydHkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChzb3VyY2VbcHJvcGVydHldICYmIFxuICAgICAgICAgIHNvdXJjZVtwcm9wZXJ0eV0uY29uc3RydWN0b3IgJiZcbiAgICAgICAgICBzb3VyY2VbcHJvcGVydHldLmNvbnN0cnVjdG9yID09PSBPYmplY3RcbiAgICAgICAgKSB7XG4gICAgICAgICAgZGVzdGluYXRpb25bcHJvcGVydHldID0gZGVzdGluYXRpb25bcHJvcGVydHldIHx8IHt9O1xuICAgICAgICAgIHRoaXMuX2V4dGVuZChkZXN0aW5hdGlvbltwcm9wZXJ0eV0sIHNvdXJjZVtwcm9wZXJ0eV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRlc3RpbmF0aW9uW3Byb3BlcnR5XSA9IHNvdXJjZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGVzdGluYXRpb247XG4gIH1cbiAgLy9yZW1vdmUgYW4gZWxlbWVudFxuICBcbiAgX3N0b3JhZ2VTdXBwb3J0KCl7XG4gICAgaWYgKCEoJ2xvY2FsU3RvcmFnZScgaW4gd2luZG93KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIFRyeSB0byB1c2UgaXQgKGl0IG1pZ2h0IGJlIGRpc2FibGVkLCBlLmcuIHVzZXIgaXMgaW4gcHJpdmF0ZS9wb3JuIG1vZGUpXG4gICAgLy8gc2VlOiBodHRwczovL2dpdGh1Yi5jb20vU2Vsei9wbHlyL2lzc3Vlcy8xMzFcbiAgICB0cnkge1xuICAgICAgLy8gQWRkIHRlc3QgaXRlbVxuICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdfX190ZXN0JywgJ09LJyk7XG5cbiAgICAgIC8vIEdldCB0aGUgdGVzdCBpdGVtXG4gICAgICBsZXQgcmVzdWx0ID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdfX190ZXN0Jyk7XG5cbiAgICAgIC8vIENsZWFuIHVwXG4gICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ19fX3Rlc3QnKTtcblxuICAgICAgLy8gQ2hlY2sgaWYgdmFsdWUgbWF0Y2hlc1xuICAgICAgcmV0dXJuIChyZXN1bHQgPT09ICdPSycpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBcbiAgX2Jyb3dzZXJTbmlmZigpe1xuICAgIGxldCB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQsXG4gICAgICBuYW1lID0gbmF2aWdhdG9yLmFwcE5hbWUsXG4gICAgICBmdWxsVmVyc2lvbiA9ICcnICsgcGFyc2VGbG9hdChuYXZpZ2F0b3IuYXBwVmVyc2lvbiksXG4gICAgICBtYWpvclZlcnNpb24gPSBwYXJzZUludChuYXZpZ2F0b3IuYXBwVmVyc2lvbiwgMTApLFxuICAgICAgbmFtZU9mZnNldCxcbiAgICAgIHZlck9mZnNldCxcbiAgICAgIGl4LFxuICAgICAgaXNJRSA9IGZhbHNlLFxuICAgICAgaXNGaXJlZm94ID0gZmFsc2UsXG4gICAgICBpc0Nocm9tZSA9IGZhbHNlLFxuICAgICAgaXNXZWNoYXQgPSBmYWxzZSxcbiAgICAgIGlzU2FmYXJpID0gZmFsc2U7XG5cbiAgICBpZiAoKG5hdmlnYXRvci5hcHBWZXJzaW9uLmluZGV4T2YoJ1dpbmRvd3MgTlQnKSAhPT0gLTEpICYmIChuYXZpZ2F0b3IuYXBwVmVyc2lvbi5pbmRleE9mKCdydjoxMScpICE9PSAtMSkpIHtcbiAgICAgIC8vIE1TSUUgMTFcbiAgICAgIGlzSUUgPSB0cnVlO1xuICAgICAgbmFtZSA9ICdJRSc7XG4gICAgICBmdWxsVmVyc2lvbiA9ICcxMSc7XG4gICAgfSBlbHNlIGlmICgodmVyT2Zmc2V0ID0gdWEuaW5kZXhPZignTVNJRScpKSAhPT0gLTEpIHtcbiAgICAgIC8vIE1TSUVcbiAgICAgIGlzSUUgPSB0cnVlO1xuICAgICAgbmFtZSA9ICdJRSc7XG4gICAgICBmdWxsVmVyc2lvbiA9IHVhLnN1YnN0cmluZyh2ZXJPZmZzZXQgKyA1KTtcbiAgICB9ZWxzZSBpZiAoKHZlck9mZnNldCA9IHVhLmluZGV4T2YoJ21pY3JvbWVzc2VuZ2VyJykpICE9PSAtMSkge1xuICAgICAgLy8gV2VDaGF0XG4gICAgICBpc1dlY2hhdCA9IHRydWU7XG4gICAgICBuYW1lID0gJ1dlQ2hhdCc7XG4gICAgICBmdWxsVmVyc2lvbiA9IHVhLnN1YnN0cmluZyh2ZXJPZmZzZXQgKyAxNSk7XG4gICAgfWVsc2UgaWYgKCh2ZXJPZmZzZXQgPSB1YS5pbmRleE9mKCdDaHJvbWUnKSkgIT09IC0xKSB7XG4gICAgICAvLyBDaHJvbWVcbiAgICAgIGlzQ2hyb21lID0gdHJ1ZTtcbiAgICAgIG5hbWUgPSAnQ2hyb21lJztcbiAgICAgIGZ1bGxWZXJzaW9uID0gdWEuc3Vic3RyaW5nKHZlck9mZnNldCArIDcpO1xuICAgIH0gZWxzZSBpZiAoKHZlck9mZnNldCA9IHVhLmluZGV4T2YoJ1NhZmFyaScpKSAhPT0gLTEpIHtcbiAgICAgIC8vIFNhZmFyaVxuICAgICAgaXNTYWZhcmkgPSB0cnVlO1xuICAgICAgbmFtZSA9ICdTYWZhcmknO1xuICAgICAgZnVsbFZlcnNpb24gPSB1YS5zdWJzdHJpbmcodmVyT2Zmc2V0ICsgNyk7XG4gICAgICBpZiAoKHZlck9mZnNldCA9IHVhLmluZGV4T2YoJ1ZlcnNpb24nKSkgIT09IC0xKSB7XG4gICAgICAgICAgZnVsbFZlcnNpb24gPSB1YS5zdWJzdHJpbmcodmVyT2Zmc2V0ICsgOCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICgodmVyT2Zmc2V0ID0gdWEuaW5kZXhPZignRmlyZWZveCcpKSAhPT0gLTEpIHtcbiAgICAgIC8vIEZpcmVmb3hcbiAgICAgIGlzRmlyZWZveCA9IHRydWU7XG4gICAgICBuYW1lID0gJ0ZpcmVmb3gnO1xuICAgICAgZnVsbFZlcnNpb24gPSB1YS5zdWJzdHJpbmcodmVyT2Zmc2V0ICsgOCk7XG4gICAgfSBlbHNlIGlmICgobmFtZU9mZnNldCA9IHVhLmxhc3RJbmRleE9mKCcgJykgKyAxKSA8ICh2ZXJPZmZzZXQgPSB1YS5sYXN0SW5kZXhPZignLycpKSkge1xuICAgICAgLy8gSW4gbW9zdCBvdGhlciBicm93c2VycywgJ25hbWUvdmVyc2lvbicgaXMgYXQgdGhlIGVuZCBvZiB1c2VyQWdlbnRcbiAgICAgIG5hbWUgPSB1YS5zdWJzdHJpbmcobmFtZU9mZnNldCx2ZXJPZmZzZXQpO1xuICAgICAgZnVsbFZlcnNpb24gPSB1YS5zdWJzdHJpbmcodmVyT2Zmc2V0ICsgMSk7XG5cbiAgICAgIGlmIChuYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgIG5hbWUgPSBuYXZpZ2F0b3IuYXBwTmFtZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBUcmltIHRoZSBmdWxsVmVyc2lvbiBzdHJpbmcgYXQgc2VtaWNvbG9uL3NwYWNlIGlmIHByZXNlbnRcbiAgICBpZiAoKGl4ID0gZnVsbFZlcnNpb24uaW5kZXhPZignOycpKSAhPT0gLTEpIHtcbiAgICAgIGZ1bGxWZXJzaW9uID0gZnVsbFZlcnNpb24uc3Vic3RyaW5nKDAsIGl4KTtcbiAgICB9XG4gICAgaWYgKChpeCA9IGZ1bGxWZXJzaW9uLmluZGV4T2YoJyAnKSkgIT09IC0xKSB7XG4gICAgICBmdWxsVmVyc2lvbiA9IGZ1bGxWZXJzaW9uLnN1YnN0cmluZygwLCBpeCk7XG4gICAgfVxuXG4gICAgLy8gR2V0IG1ham9yIHZlcnNpb25cbiAgICBtYWpvclZlcnNpb24gPSBwYXJzZUludCgnJyArIGZ1bGxWZXJzaW9uLCAxMCk7XG4gICAgaWYgKGlzTmFOKG1ham9yVmVyc2lvbikpIHtcbiAgICAgIGZ1bGxWZXJzaW9uID0gJycgKyBwYXJzZUZsb2F0KG5hdmlnYXRvci5hcHBWZXJzaW9uKTtcbiAgICAgIG1ham9yVmVyc2lvbiA9IHBhcnNlSW50KG5hdmlnYXRvci5hcHBWZXJzaW9uLCAxMCk7XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGRhdGFcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogICAgICAgbmFtZSxcbiAgICAgIHZlcnNpb246ICAgIG1ham9yVmVyc2lvbixcbiAgICAgIGlzSUU6ICAgICAgIGlzSUUsXG4gICAgICBpc0ZpcmVmb3g6ICBpc0ZpcmVmb3gsXG4gICAgICBpc0Nocm9tZTogICBpc0Nocm9tZSxcbiAgICAgIGlzU2FmYXJpOiAgIGlzU2FmYXJpLFxuICAgICAgaXNXZWNoYXQ6ICAgaXNXZWNoYXQsXG4gICAgICBpc0lvczogICAgICAvKGlQYWR8aVBob25lfGlQb2QpL2cudGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pLFxuICAgICAgaXNJcGhvbmU6ICAgLyhpUGhvbmV8aVBvZCkvZy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLFxuICAgICAgaXNUb3VjaDogICAgJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG4gICAgfTtcbiAgfVxuICBfaXMoKXtcbiAgICByZXR1cm4ge1xuICAgICAgb2JqZWN0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICByZXR1cm4gaW5wdXQgIT09IG51bGwgJiYgdHlwZW9mKGlucHV0KSA9PT0gJ29iamVjdCc7XG4gICAgICB9LFxuICAgICAgYXJyYXk6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBpbnB1dCAhPT0gbnVsbCAmJiAodHlwZW9mKGlucHV0KSA9PT0gJ29iamVjdCcgJiYgaW5wdXQuY29uc3RydWN0b3IgPT09IEFycmF5KTtcbiAgICAgIH0sXG4gICAgICBudW1iZXI6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBpbnB1dCAhPT0gbnVsbCAmJiAodHlwZW9mKGlucHV0KSA9PT0gJ251bWJlcicgJiYgIWlzTmFOKGlucHV0IC0gMCkgfHwgKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcgJiYgaW5wdXQuY29uc3RydWN0b3IgPT09IE51bWJlcikpO1xuICAgICAgfSxcbiAgICAgIHN0cmluZzogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0ICE9PSBudWxsICYmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnIHx8ICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnICYmIGlucHV0LmNvbnN0cnVjdG9yID09PSBTdHJpbmcpKTtcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICByZXR1cm4gaW5wdXQgIT09IG51bGwgJiYgdHlwZW9mIGlucHV0ID09PSAnYm9vbGVhbic7XG4gICAgICB9LFxuICAgICAgbm9kZUxpc3Q6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBpbnB1dCAhPT0gbnVsbCAmJiBpbnB1dCBpbnN0YW5jZW9mIE5vZGVMaXN0O1xuICAgICAgfSxcbiAgICAgIGh0bWxFbGVtZW50OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICByZXR1cm4gaW5wdXQgIT09IG51bGwgJiYgaW5wdXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudDtcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0ICE9PSBudWxsICYmIHR5cGVvZiBpbnB1dCA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIH0sXG4gICAgICB1bmRlZmluZWQ6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBpbnB1dCAhPT0gbnVsbCAmJiB0eXBlb2YgaW5wdXQgPT09ICd1bmRlZmluZWQnO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgbmV3IFV0aWxzKCk7IiwiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi91dGlsJztcbmltcG9ydCAkIGZyb20gJy4vZG9tJztcbmltcG9ydCB7ZGVmYXVsdENvbmZpZyBhcyBkZWZhdWx0c30gZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IEV2ZW50IGZyb20gJy4vZXZlbnQnO1xuaW1wb3J0IFBsYXllciBmcm9tICcuL3BsYXllcic7XG5jbGFzcyB2UGxheWVyIHtcbiAgY29uc3RydWN0b3IodGFyZ2V0cywgb3B0aW9ucyl7XG4gICAgdGhpcy5UQUcgPSAnVmlkZW9QbGF5ZXInO1xuICAgIHRoaXMuX2luaXQodGFyZ2V0cyxvcHRpb25zKTtcbiAgfVxuICBfaW5pdCh0YXJnZXRzLCBvcHRpb25zKXtcbiAgICBjb25zdCBfdGFyZ2V0cyA9IHRoaXMuX19nZXRUYXJnZXRzKHRhcmdldHMsIG9wdGlvbnMpO1xuICAgIFxuICAgIGlmICghdXRpbHMuc3VwcG9ydGVkKCkuYmFzaWMgfHwgIV90YXJnZXRzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBwbGF5ZXJzID0gW10saW5zdGFuY2UgPSBbXTtcbiAgICBjb25zdCBzZWxlY3RvciA9IFtkZWZhdWx0cy5zZWxlY3RvcnMuaHRtbDVdLmpvaW4oJywnKTtcbiAgICBjb25zdCBfYWRkID0gKHRhcmdldCwgbWVkaWEpPT57XG4gICAgICBpZiAoISQuaGFzQ2xhc3MobWVkaWEsZGVmYXVsdHMuY2xhc3Nlcy5ob29rKSl7XG4gICAgICAgIHBsYXllcnMucHVzaCh7XG4gICAgICAgICAgdGFyZ2V0OiAgICAgdGFyZ2V0LFxuICAgICAgICAgIG1lZGlhOiAgICAgIG1lZGlhXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07Ly9lbmQgYWRkXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGFyZ2V0cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRhcmdldCA9IF90YXJnZXRzW2ldO1xuXG4gICAgICAvLyBHZXQgY2hpbGRyZW5cbiAgICAgIHZhciBjaGlsZHJlbiA9IHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblxuICAgICAgLy8gSWYgdGhlcmUncyBtb3JlIHRoYW4gb25lIG1lZGlhIGVsZW1lbnQgY2hpbGQsIHdyYXAgdGhlbVxuICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICBmb3IgKHZhciB4ID0gMDsgeCA8IGNoaWxkcmVuLmxlbmd0aDsgeCsrKSB7XG4gICAgICAgICAgX2FkZCh0YXJnZXQsIGNoaWxkcmVuW3hdKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLl9fbWF0Y2hlcyh0YXJnZXQsIHNlbGVjdG9yKSkge1xuICAgICAgICAvLyBUYXJnZXQgaXMgbWVkaWEgZWxlbWVudFxuICAgICAgICBfYWRkKHRhcmdldCwgdGFyZ2V0KTtcbiAgICAgIH1cbiAgICB9Ly8gZW5kIGZvclxuICAgIGNvbnNvbGUubG9nKCdwbGF5ZXJzLS0tPicscGxheWVycyk7XG4gICAgcGxheWVycy5mb3JFYWNoKChwbGF5ZXIpPT57XG4gICAgICBjb25zdCBlbGVtZW50ID0gcGxheWVyLnRhcmdldDtcbiAgICAgIGNvbnN0IG1lZGlhID0gcGxheWVyLm1lZGlhO1xuICAgICAgbGV0IG1hdGNoID0gZmFsc2U7XG4gICAgICBpZiAobWVkaWEgPT09IGVsZW1lbnQpIHtcbiAgICAgICAgbWF0Y2ggPSB0cnVlO1xuICAgICAgfVxuICAgICAgbGV0IGRhdGEgPSB7fTtcbiAgICAgIHRyeSB7IGRhdGEgPSBKU09OLnBhcnNlKGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXZwbHlyJykpOyB9XG4gICAgICBjYXRjaChlKSB7IH1cbiAgICAgIGNvbnN0IGNvbmZpZyA9IHV0aWxzLmV4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdGlvbnMsIGRhdGEpO1xuICAgICAgaWYgKCFjb25maWcuZW5hYmxlZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IFBsYXllcihtZWRpYSwgY29uZmlnKTtcbiAgICAgIGNvbnNvbGUubG9nKCdpbnN0YW5jZScsaW5zdGFuY2UpO1xuICAgIH0pXG4gIH1cbiAgX19tYXRjaGVzKGVsZW1lbnQsIHNlbGVjdG9yKSB7XG4gICAgdmFyIHAgPSBFbGVtZW50LnByb3RvdHlwZTtcblxuICAgIHZhciBmID0gcC5tYXRjaGVzIHx8IHAud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8IHAubW96TWF0Y2hlc1NlbGVjdG9yIHx8IHAubXNNYXRjaGVzU2VsZWN0b3IgfHwgZnVuY3Rpb24ocykge1xuICAgICAgICByZXR1cm4gW10uaW5kZXhPZi5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocyksIHRoaXMpICE9PSAtMTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGYuY2FsbChlbGVtZW50LCBzZWxlY3Rvcik7XG4gIH1cbiAgX19nZXRUYXJnZXRzKHRhcmdldHMsb3B0aW9ucyl7XG4gICAgY29uc3Qgc2VsZWN0b3IgPSBbZGVmYXVsdHMuc2VsZWN0b3JzLmh0bWw1XS5qb2luKCcsJyk7XG4gICAgaWYgKHV0aWxzLmlzLnN0cmluZyh0YXJnZXRzKSkge1xuICAgICAgLy8gU3RyaW5nIHNlbGVjdG9yIHBhc3NlZFxuICAgICAgdGFyZ2V0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGFyZ2V0cyk7XG4gICAgfSBlbHNlIGlmKHV0aWxzLmlzLmh0bWxFbGVtZW50KHRhcmdldHMpKXtcbiAgICAgIHRhcmdldHMgPSBbdGFyZ2V0c107XG4gICAgfWVsc2UgaWYgKCF1dGlscy5pcy5ub2RlTGlzdCh0YXJnZXRzKSAmJiAhdXRpbHMuaXMuYXJyYXkodGFyZ2V0cykgJiYgIXV0aWxzLmlzLnN0cmluZyh0YXJnZXRzKSkgIHtcbiAgICAgIC8vIE5vIHNlbGVjdG9yIHBhc3NlZCwgcG9zc2libHkgb3B0aW9ucyBhcyBmaXJzdCBhcmd1bWVudFxuICAgICAgLy8gSWYgb3B0aW9ucyBhcmUgdGhlIGZpcnN0IGFyZ3VtZW50XG4gICAgICBpZiAodXRpbHMuaXMudW5kZWZpbmVkKG9wdGlvbnMpICYmIHV0aWxzLmlzLm9iamVjdCh0YXJnZXRzKSkge1xuICAgICAgICAgIG9wdGlvbnMgPSB0YXJnZXRzO1xuICAgICAgfVxuICAgICAgdGFyZ2V0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXMubm9kZUxpc3QodGFyZ2V0cykpIHtcbiAgICAgIHRhcmdldHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0YXJnZXRzKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldHM7XG4gIH1cbiAgXG59XG5leHBvcnQgZGVmYXVsdCB2UGxheWVyOyJdfQ=="}