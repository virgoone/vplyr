{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/config.js","src/js/dom.js","src/js/event.js","src/js/index.js","src/js/player.js","src/js/util.js","src/js/vplyr.js"],"names":[],"mappings":"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","file":"vplyr.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export const defaultConfig = {\n  enabled:                 true,\n  debug:                  true,\n  autoplay:               false,\n  loop:                   false,\n  seekTime:               10,\n  volume:                 10,\n  volumeMin:              0,\n  volumeMax:              10,\n  volumeStep:             1,\n  duration:               null,\n  displayDuration:        true,\n  loadSprite:             true,\n  controls:               ['play-large', 'play', 'progress', 'time', 'mute', 'volume', 'captions', 'fullscreen'],\n  selectors: {\n    html5:                'video, audio',\n    editable:             'input, textarea, select, [contenteditable]',\n    container:            '.vplyr',\n    controls: {\n        container:        null,\n        wrapper:          '.vplyr-controls'\n    },\n    buttons: {\n        seek:             '[data-video=\"seek\"]',\n        play:             '[data-video=\"play\"]',\n        pause:            '[data-video=\"pause\"]',\n        mute:             '[data-video=\"mute\"]',\n        fullscreen:       '[data-video=\"fullscreen\"]'\n    },\n    volume: {\n        input:            '[data-video=\"volume\"]',\n        display:          '.vplyr-volume-display'\n    },\n    progress: {\n        container:        '.vplyr-progress-bar-container',\n        buffer:           '.vplyr-progress-buffer',\n        played:           '.vplyr-progress-played'\n    },\n    volume: {\n        input:          '[data-video=\"volume\"]',\n        display:        '.vplyr-volume-display'\n    },\n    currentTime:          '.control-currenttime',\n    duration:             '.control-duration'\n},\n  // Custom control listeners\n  listeners: {\n      seek:               null,\n      play:               null,\n      pause:              null,\n      restart:            null,\n      rewind:             null,\n      forward:            null,\n      mute:               null,\n      volume:             null,\n      captions:           null,\n      fullscreen:         null\n  },\n  types: {\n    html5:              ['video']\n  },\n  classes:{\n    type:               'vplyr-{0}',\n    videoWrapper:'vplyr-video-container',\n    playing:'vplyr-plying',\n    loading:            'vplyr-loading',\n    hover:              'vplyr-hover',\n    stopped:'vplyr-stopped',\n    isIos:              'vplyr--is-ios',\n    isTouch:            'vplyr--is-touch',\n    isWechat:           'vplyr--is-wechat',\n  },\n  events:                 ['ready', 'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied'],\n  // Logging\n  logPrefix:              '[VPlyr]'\n}\nexport function createDefaultConfig() {\n  return Object.assign({}, defaultConfig);\n}","class Dom {\n  constructor(){\n    this.toggleClass  = this._toggleClass.bind(this);\n    this.removeElement  = this._removeElement.bind(this);\n    this.hasClass = this._hasClass.bind(this);\n    this.injectScript = this._injectScript.bind(this);\n    this.prependChild = this._prependChild.bind(this);\n    this.setAttributes = this._setAttributes.bind(this);\n    this.insertElement= this._insertElement.bind(this);\n    this.getClassname= this._getClassname.bind(this);\n  }\n  _getClassname(selector) {\n    return selector.replace('.', '');\n  }\n  _insertElement(type, parent, attributes) {\n    // Create a new <element>\n    var element = document.createElement(type);\n\n    // Set all passed attributes\n    _setAttributes(element, attributes);\n\n    // Inject the new element\n    _prependChild(parent, element);\n  }\n  _setAttributes(element, attributes) {\n    for (var key in attributes) {\n      element.setAttribute(key, (_is.boolean(attributes[key]) && attributes[key]) ? '' : attributes[key]);\n    }\n  }\n  _prependChild(parent, element) {\n    parent.insertBefore(element, parent.firstChild);\n  }\n  _injectScript(source) {\n    if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n        return;\n    }\n\n    var tag = document.createElement('script');\n    tag.src = source;\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n  _hasClass(element, className) {\n    if (element) {\n      if (element.classList) {\n          return element.classList.contains(className);\n      } else {\n          return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n      }\n    }\n    return false;\n  }\n  _removeElement(element){\n    if (!element) {\n        return;\n    }\n    element.parentNode.removeChild(element);\n  }\n  // Toggle class on an element\n  _toggleClass(element, className, state){\n    if (element) {\n      if (element.classList) {\n        element.classList[state ? 'add' : 'remove'](className);\n      } else {\n        let name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n        element.className = name + (state ? ' ' + className : '');\n      }\n    }\n  }\n}\nexport default new Dom();\n","import utils from './util';\n\nclass Event{\n  constructor(){\n    this.onEvent = this._on.bind(this);\n    this.customEvent = this._event.bind(this);\n  }\n  _event(element, type, bubbles, properties) {\n    // Bail if no element\n    if (!element || !type) {\n        return;\n    }\n\n    // Default bubbles to false\n    if (!_is.boolean(bubbles)) {\n        bubbles = false;\n    }\n\n    // Create and dispatch the event\n    var event = new CustomEvent(type, {\n        bubbles:    bubbles,\n        detail:     properties\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n  }\n  _on(element, events, callback, useCapture) {\n    if (element) {\n      this._toggleListener(element, events, callback, true, useCapture);\n    }\n  }\n\n  _toggleListener(element, events, callback, toggle, useCapture) {\n    var eventList = events.split(' ');\n    // Whether the listener is a capturing listener or not\n    // Default to false\n    if (!utils.is.boolean(useCapture)) {\n      useCapture = false;\n    }\n\n    // If a nodelist is passed, call itself on each node\n    if (element instanceof NodeList) {\n      for (var x = 0; x < element.length; x++) {\n        if (element[x] instanceof Node) {\n          this._toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n        }\n      }\n      return;\n    }\n\n    // If a single node is passed, bind the event listener\n    for (var i = 0; i < eventList.length; i++) {\n      element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, useCapture);\n    }\n  }\n}\nexport default new Event();","import vPlayer from './vplyr.js';\n\n;(function(root, factory) {\n    'use strict';\n    /*global define,module*/\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(root, document);\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], function () { return factory(root, document); });\n    } else {\n        // Browser globals (root is window)\n        root.vplyr = factory(root, document);\n    }\n}(typeof window !== 'undefined' ? window : this, function(window, document) {\n  window.vPlayer = vPlayer;\n}))","'use strict';\n\nimport utils from './util';\nimport $ from './dom';\nimport Event from './event';\nlet _log , _warn;\n\nclass Player {\n  constructor(media, config){\n    this._init(media, config);\n  }\n  _init(media, config){\n    const vk = this;\n    const timers = {};\n    let api = {};\n    vk.media = media;\n    let original = media.cloneNode(true);\n    const _console = (type,args)=>{\n      if (config.debug && window.console) {\n        args = Array.prototype.slice.call(args);\n\n        if (utils.is.string(config.logPrefix) && config.logPrefix.length) {\n          args.unshift(config.logPrefix);\n        }\n\n        console[type].apply(console, args);\n      }\n    };\n    _log = function() { _console('log', arguments) };\n    _warn = function() { _console('warn', arguments) };\n    _log('Config', config);\n    this._setup(vk,config);\n    _log('player', vk);\n    if (!vk.init) {\n      return null;\n    }\n    return api;\n  }\n\n  _setup(player,config){\n    if (player.init) {\n      return null;\n    }\n    player.browser = utils.browserSniff;\n    if (!utils.is.htmlElement(player.media)) {\n      return;\n    }\n    const tagName = player.media.tagName.toLowerCase();\n    player.type         = tagName;\n    config.crossorigin  = (player.media.getAttribute('crossorigin') !== null);\n    config.autoplay     = (config.autoplay || (player.media.getAttribute('autoplay') !== null));\n    config.loop         = (config.loop || (player.media.getAttribute('loop') !== null));\n    player.supported = utils.supported(player.type);\n    if (!player.supported.basic) {\n      return;\n    }\n    player.container = this._wrap(player.media, document.createElement('div'));\n    player.container.setAttribute('tabindex', 0);\n    this._toggleStyleHook(player,config);\n    _log('' + player.browser.name + ' ' + player.browser.version);\n    this._setupMedia(player,config);\n    if(utils.inArray(config.types.html5,player.type)){\n      // Setup UI\n      this._setupInterface(player,config);\n    }\n  }\n  _setupInterface(player,config){\n    const _getElements = (selector)=> {\n      return player.container.querySelectorAll(selector);\n    }\n    const _getElement=(selector)=> {\n      return _getElements(selector)[0];\n    }\n    if (!player.supported.full) {\n      _warn('Basic support only', player.type);\n      \n      // Remove controls\n      $.removeElement(_getElement(config.selectors.controls.wrapper));\n      // reset native controls\n      this._toggleNativeControls(true,player,config);\n      // Bail\n      return;\n    }\n    const controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n    if (controlsMissing) {\n      // Inject custom controls\n      this._injectControls(player,config);\n    }\n    // Find the elements\n    if (!this._findElements()) {\n      return;\n    }\n    if (controlsMissing) {\n      this._controlListeners(player,config);\n    }\n  }\n  _controlListeners(player,config){\n    const inputEvent = (player.browser.isIE ? 'change' : 'input');\n  }\n  _injectControls(player,config){\n    let html = config.html;\n\n    // Insert custom video controls\n    _log('Injecting custom controls');\n    // If no controls are specified, create default\n    if (!html) {\n      html = this._buildControls(config);\n    }\n    html = utils.replaceAll(html, '{id}', Math.floor(Math.random() * (100000)));\n    let target;\n    if (utils.is.string(config.selectors.controls.container)) {\n      target = document.querySelector(config.selectors.controls.container);\n    }\n    // Inject into the container by default\n    if (!utils.is.htmlElement(target)) {\n      target = player.container\n    }\n    target.insertAdjacentHTML('beforeend', html);\n  }\n  _findElements(player,config){\n    const _getElements = (selector)=> {\n      return player.container.querySelectorAll(selector);\n    }\n    const _getElement=(selector)=> {\n      return _getElements(selector)[0];\n    }\n    try {\n      player.controls                 = _getElement(config.selectors.controls.wrapper);\n\n      // Buttons\n      player.buttons = {};\n      player.buttons.seek             = _getElement(config.selectors.buttons.seek);\n      player.buttons.play             = _getElements(config.selectors.buttons.play);\n      player.buttons.pause            = _getElement(config.selectors.buttons.pause);\n      player.buttons.fullscreen       = _getElement(config.selectors.buttons.fullscreen);\n\n      // Inputs\n      player.buttons.mute             = _getElement(config.selectors.buttons.mute);\n\n      // Progress\n      player.progress = {};\n      player.progress.container       = _getElement(config.selectors.progress.container);\n\n      // Progress - Buffering\n      player.progress.buffer          = {};\n      player.progress.buffer.bar      = _getElement(config.selectors.progress.buffer);\n      player.progress.buffer.text     = player.progress.buffer.bar && player.progress.buffer.bar.getElementsByTagName('span')[0];\n\n      // Progress - Played\n      player.progress.played          = _getElement(config.selectors.progress.played);\n\n      // Volume\n      player.volume                   = {};\n      player.volume.input             = _getElement(config.selectors.volume.input);\n      player.volume.display           = _getElement(config.selectors.volume.display);\n\n      // Timing\n      player.duration                 = _getElement(config.selectors.duration);\n      player.currentTime              = _getElement(config.selectors.currentTime);\n      player.seekTime                 = _getElements(config.selectors.seekTime);\n\n      return true;\n    }\n    catch(e) {\n      _warn('It looks like there is a problem with your controls HTML');\n      // Restore native video controls\n      this._toggleNativeControls(true);\n\n      return false;\n    }\n  }\n  _buildControls(config){\n    const html = ['<div class=\"vplyr-gradient-bottom\"></div>'];\n    html.push('<div class=\"vplyr-bottom-container\">')\n    if (utils.inArray(config.controls, 'progress')) {\n      html.push(\n          '<div class=\"vplyr-progress-bar-container\">',\n          '<input id=\"seek{id}\" type=\"range\" min=\"0\" max=\"100\" value=\"0\" step=\"0.1\" class=\"vplyr-progress-bar\" data-video=\"seek\"/>',\n          '<progress class=\"vplyr-progress-played\" max=\"100\" role=\"presentation\"></progress>',\n          '<progress class=\"vplyr-progress-buffer\" max=\"100\" value=\"100\">',\n          '<span>100.00</span>',\n          '</progress>',\n          '</div>'\n      );\n    }\n    html.push('<div class=\"vplyr-controls\">')\n    html.push('<div class=\"left-controls\">')\n    if (utils.inArray(config.controls, 'play')) {\n      html.push(\n        '<div class=\"btn-controls\">',\n          '<div class=\"btn-wrap\">',\n          '<div class=\"play\" data-video=\"play\"></div>',\n          '<div class=\"pause\" data-video=\"pause\"></div>',\n          '</div>',\n          '</div>'\n      );\n    }\n    if (utils.inArray(config.controls, 'time')) {\n      html.push(\n        '<div class=\"time-mod-controls\">',\n          '<div class=\"control-currenttime\">01:29</div>',\n          '<div class=\"control-separator\">/</div>',\n          '<div class=\"control-duration\">1:30:52</div>',\n          '</div>'\n      );\n    }\n    html.push('</div>')//close vplyr left controls\n    html.push('<div class=\"right-controls\">')\n    if (utils.inArray(config.controls, 'fullscreen')) {\n      html.push(\n        '<div class=\"fullscreen-controls\">',\n          '<svg class=\"icon-exit-fullscreen\" data-video=\"fullscreen\">',\n          '<use xlink:href=\"#vplyr-exit-fullscreen\"></use>',\n          '</svg>',\n          '<svg class=\"icon-enter-fullscreen\">',\n          ' <use xlink:href=\"#vplyr-enter-fullscreen\"></use>',\n          '</svg>',\n          '</div>'\n      );\n    }\n    html.push('<div class=\"volume-controls\">')\n    if (utils.inArray(config.controls, 'mute')) {\n      html.push(\n        '<div class=\"vplyr-volume\" data-video=\"mute\">',\n          '<svg class=\"icon-muted\">',\n          '<use xlink:href=\"#vplyr-muted\"></use>',\n          '</svg>',\n          '<svg class=\"icon-volume\">',\n          '<use xlink:href=\"#vplyr-volume\"></use>',\n          '</svg>',\n          '</div>'\n      );\n    }\n    if (utils.inArray(config.controls, 'volume')) {\n      html.push(\n        '<div class=\"vplyr-volume-progress\">',\n          '<input type=\"range\" id=\"volume{id}\"  class=\"vplyr-volume-input\"  min=\"0\"  max=\"10\" data-video=\"volume\" value=\"8\">',\n          '<progress class=\"vplyr-volume-display\" max=\"10\" role=\"presentation\"></progress>',\n          '</div>'\n      );\n    }\n    html.push('</div>')//close vplyr volume controls\n    \n    html.push('</div>')//close vplyr right controls\n    \n    html.push('</div>')//close vplyr controls\n    html.push('</div>')//close\n    return html.join('');\n  }\n  _setupMedia(player,config){\n    if (!player.media) {\n      _warn('No media element found!');\n      return;\n    }\n    if(player.supported.full){\n      $.toggleClass(player.container, config.classes.type.replace('{0}', player.type), true);\n      $.toggleClass(player.container, config.classes.stopped, config.autoplay);\n      // Add iOS class\n      $.toggleClass(player.container, config.classes.isIos, player.browser.isIos);\n\n      // Add touch class\n      $.toggleClass(player.container, config.classes.isTouch, player.browser.isTouch);\n\n      // Add wechat class\n      $.toggleClass(player.container, config.classes.isTouch, player.browser.isWechat);\n      if(player.type === 'video'){\n        const wrapper = document.createElement('div');\n        wrapper.setAttribute('class', config.classes.videoWrapper);\n        this._wrap(player.media, wrapper);\n        // Cache the container\n        player.videoContainer = wrapper;\n      }\n    }\n  }\n  _toggleNativeControls(toggle,player,config) {\n    if (toggle && utils.inArray(config.types.html5, player.type)) {\n        player.media.setAttribute('controls', '');\n    } else {\n        player.media.removeAttribute('controls');\n    }\n  }\n  _wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    if (!elements.length) {\n        elements = [elements];\n    }\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    for (var i = elements.length - 1; i >= 0; i--) {\n      var child   = (i > 0) ? wrapper.cloneNode(true) : wrapper;\n      var element = elements[i];\n\n      // Cache the current parent and sibling.\n      var parent  = element.parentNode;\n      var sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n          parent.insertBefore(child, sibling);\n      } else {\n          parent.appendChild(child);\n      }\n      return child;\n    }\n  }\n  _toggleStyleHook(player,config) {\n    $.toggleClass(player.container, config.selectors.container.replace('.', ''), player.supported.full);\n  }\n}\nexport default Player;","class Utils {\n  constructor(){\n    this.browserSniff=this._browserSniff.bind(this)();\n    this.is = this._is.bind(this)();\n    this.storageSupport = this._storageSupport.bind(this)();\n    this.extend  = this._extend.bind(this);\n    this.matches  = this._matches.bind(this);\n    this.inArray = this._inArray.bind(this);\n    this.supported = this._support.bind(this);\n    this.replaceAll = this._replaceAll.bind(this);\n    \n  }\n  _replaceAll(string, find, replace) {\n    return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n  }\n  _support(type){\n    const browser     = this._browserSniff(),\n        isOldIE     = (browser.isIE && browser.version <= 9),\n        isIos       = browser.isIos,\n        isIphone    = browser.isIphone,\n        audioSupport = !!document.createElement('audio').canPlayType,\n        videoSupport = !!document.createElement('video').canPlayType;\n    let basic       = false,\n        full        = false;\n\n    switch (type) {\n        case 'video':\n            basic = videoSupport;\n            full  = (basic && (!isOldIE && !isIphone));\n            break;\n\n        case 'audio':\n            basic = audioSupport;\n            full  = (basic && !isOldIE);\n            break;\n\n        default:\n            basic = (audioSupport && videoSupport);\n            full  = (basic && !isOldIE);\n    }\n\n    return {\n        basic:  basic,\n        full:   full\n    };\n  }\n  _inArray(haystack, needle) {\n    return Array.prototype.indexOf && (haystack.indexOf(needle) !== -1);\n  }\n\n  _matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n  _extend() {\n    // Get arguments\n    let objects = arguments;\n\n    // Bail if nothing to merge\n    if (!objects.length) {\n        return;\n    }\n\n    // Return first if specified but nothing to merge\n    if (objects.length === 1) {\n        return objects[0];\n    }\n\n    // First object is the destination\n    let destination = Array.prototype.shift.call(objects),\n        length      = objects.length;\n\n    // Loop through all objects to merge\n    for (let i = 0; i < length; i++) {\n        let source = objects[i];\n\n      for (let property in source) {\n        if (source[property] && \n          source[property].constructor &&\n          source[property].constructor === Object\n        ) {\n          destination[property] = destination[property] || {};\n          this._extend(destination[property], source[property]);\n        } else {\n          destination[property] = source[property];\n        }\n      }\n    }\n\n    return destination;\n  }\n  //remove an element\n  \n  _storageSupport(){\n    if (!('localStorage' in window)) {\n      return false;\n    }\n\n    // Try to use it (it might be disabled, e.g. user is in private/porn mode)\n    // see: https://github.com/Selz/plyr/issues/131\n    try {\n      // Add test item\n      window.localStorage.setItem('___test', 'OK');\n\n      // Get the test item\n      let result = window.localStorage.getItem('___test');\n\n      // Clean up\n      window.localStorage.removeItem('___test');\n\n      // Check if value matches\n      return (result === 'OK');\n    }\n    catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n  \n  _browserSniff(){\n    let ua = navigator.userAgent,\n      name = navigator.appName,\n      fullVersion = '' + parseFloat(navigator.appVersion),\n      majorVersion = parseInt(navigator.appVersion, 10),\n      nameOffset,\n      verOffset,\n      ix,\n      isIE = false,\n      isFirefox = false,\n      isChrome = false,\n      isWechat = false,\n      isSafari = false;\n\n    if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n      // MSIE 11\n      isIE = true;\n      name = 'IE';\n      fullVersion = '11';\n    } else if ((verOffset = ua.indexOf('MSIE')) !== -1) {\n      // MSIE\n      isIE = true;\n      name = 'IE';\n      fullVersion = ua.substring(verOffset + 5);\n    }else if ((verOffset = ua.indexOf('micromessenger')) !== -1) {\n      // WeChat\n      isWechat = true;\n      name = 'WeChat';\n      fullVersion = ua.substring(verOffset + 15);\n    }else if ((verOffset = ua.indexOf('Chrome')) !== -1) {\n      // Chrome\n      isChrome = true;\n      name = 'Chrome';\n      fullVersion = ua.substring(verOffset + 7);\n    } else if ((verOffset = ua.indexOf('Safari')) !== -1) {\n      // Safari\n      isSafari = true;\n      name = 'Safari';\n      fullVersion = ua.substring(verOffset + 7);\n      if ((verOffset = ua.indexOf('Version')) !== -1) {\n          fullVersion = ua.substring(verOffset + 8);\n      }\n    } else if ((verOffset = ua.indexOf('Firefox')) !== -1) {\n      // Firefox\n      isFirefox = true;\n      name = 'Firefox';\n      fullVersion = ua.substring(verOffset + 8);\n    } else if ((nameOffset = ua.lastIndexOf(' ') + 1) < (verOffset = ua.lastIndexOf('/'))) {\n      // In most other browsers, 'name/version' is at the end of userAgent\n      name = ua.substring(nameOffset,verOffset);\n      fullVersion = ua.substring(verOffset + 1);\n\n      if (name.toLowerCase() === name.toUpperCase()) {\n          name = navigator.appName;\n      }\n    }\n\n    // Trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n\n    // Get major version\n    majorVersion = parseInt('' + fullVersion, 10);\n    if (isNaN(majorVersion)) {\n      fullVersion = '' + parseFloat(navigator.appVersion);\n      majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    // Return data\n    return {\n      name:       name,\n      version:    majorVersion,\n      isIE:       isIE,\n      isFirefox:  isFirefox,\n      isChrome:   isChrome,\n      isSafari:   isSafari,\n      isWeChat:   isWechat,\n      isIos:      /(iPad|iPhone|iPod)/g.test(navigator.platform),\n      isIphone:   /(iPhone|iPod)/g.test(navigator.userAgent),\n      isTouch:    'ontouchstart' in document.documentElement\n    };\n  }\n  _is(){\n    return {\n      object: function(input) {\n        return input !== null && typeof(input) === 'object';\n      },\n      array: function(input) {\n        return input !== null && (typeof(input) === 'object' && input.constructor === Array);\n      },\n      number: function(input) {\n        return input !== null && (typeof(input) === 'number' && !isNaN(input - 0) || (typeof input === 'object' && input.constructor === Number));\n      },\n      string: function(input) {\n        return input !== null && (typeof input === 'string' || (typeof input === 'object' && input.constructor === String));\n      },\n      boolean: function(input) {\n        return input !== null && typeof input === 'boolean';\n      },\n      nodeList: function(input) {\n        return input !== null && input instanceof NodeList;\n      },\n      htmlElement: function(input) {\n        return input !== null && input instanceof HTMLElement;\n      },\n      function: function(input) {\n        return input !== null && typeof input === 'function';\n      },\n      undefined: function(input) {\n        return input !== null && typeof input === 'undefined';\n      }\n    }\n  }\n}\nexport default new Utils();","'use strict';\n\nimport utils from './util';\nimport $ from './dom';\nimport {defaultConfig as defaults} from './config';\nimport Event from './event';\nimport Player from './player';\nclass vPlayer {\n  constructor(targets, options){\n    this.TAG = 'VideoPlayer';\n    this._init(targets,options);\n  }\n  _init(targets, options){\n    const _targets = this.__getTargets(targets, options);\n    \n    if (!utils.supported().basic || !_targets.length) {\n      return false;\n    }\n    const players = [],instance = [];\n    const selector = [defaults.selectors.html5].join(',');\n    const _add = (target, media)=>{\n      if (!$.hasClass(media,defaults.classes.hook)){\n        players.push({\n          target:     target,\n          media:      media\n        });\n      }\n    };//end add\n    for (var i = 0; i < _targets.length; i++) {\n      var target = _targets[i];\n\n      // Get children\n      var children = target.querySelectorAll(selector);\n\n      // If there's more than one media element child, wrap them\n      if (children.length) {\n        for (var x = 0; x < children.length; x++) {\n          _add(target, children[x]);\n        }\n      } else if (this.__matches(target, selector)) {\n        // Target is media element\n        _add(target, target);\n      }\n    }// end for\n    console.log('players--->',players);\n    players.forEach((player)=>{\n      const element = player.target;\n      const media = player.media;\n      let match = false;\n      if (media === element) {\n        match = true;\n      }\n      let data = {};\n      try { data = JSON.parse(element.getAttribute('data-vplyr')); }\n      catch(e) { }\n      const config = utils.extend({}, defaults, options, data);\n      if (!config.enabled) {\n        return null;\n      }\n      const instance = new Player(media, config);\n      console.log('instance',instance);\n    })\n  }\n  __matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n  __getTargets(targets,options){\n    const selector = [defaults.selectors.html5].join(',');\n    if (utils.is.string(targets)) {\n      // String selector passed\n      targets = document.querySelectorAll(targets);\n    } else if(utils.is.htmlElement(targets)){\n      targets = [targets];\n    }else if (!utils.is.nodeList(targets) && !utils.is.array(targets) && !utils.is.string(targets))  {\n      // No selector passed, possibly options as first argument\n      // If options are the first argument\n      if (utils.is.undefined(options) && utils.is.object(targets)) {\n          options = targets;\n      }\n      targets = document.querySelectorAll(selector);\n    }\n    if (utils.is.nodeList(targets)) {\n      targets = Array.prototype.slice.call(targets);\n    }\n    return targets;\n  }\n  \n}\nexport default vPlayer;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}